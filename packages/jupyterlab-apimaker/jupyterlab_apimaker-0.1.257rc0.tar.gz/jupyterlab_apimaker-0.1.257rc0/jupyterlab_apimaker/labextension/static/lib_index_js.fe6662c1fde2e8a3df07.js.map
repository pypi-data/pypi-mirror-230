{"version":3,"file":"lib_index_js.fe6662c1fde2e8a3df07.js","mappings":"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B,+EAA6B;AAClD,uBAAuB,8DAAW;AAClC;AACA;AACA;AACA,yBAAyB,8EAA4B;AACrD;AACA;AACA,kBAAkB,+EAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gFAA8B;AAChD;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3B6F;AAC1C;AACF;AACA;AACK;AACE;AACT;AACK;AACf;AACA;AACQ;AACN;AACuB;AACkB;AAChF;AACA;AACA;AACA,eAAe,2DAAS,EAAE,2DAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD,qCAAqC,eAAe;AACpD,kCAAkC,oEAAoE;AACtG,sDAAsD,uEAAoB,gBAAgB,IAAI,gFAAgF;AAC9K,wBAAwB,uEAAoB,eAAe,GAAG,gFAAgF;AAC9I,sCAAsC,qDAAU;AAChD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qEAAmB;AACtD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ,0DAAW;AACnB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAW;AAC3B,gBAAgB,sEAAqB,yEAAyE,iBAAiB;AAC/H;AACA;AACA;AACA,gBAAgB,0DAAW;AAC3B;AACA;AACA;AACA,gBAAgB,qDAAO;AACvB,gBAAgB,sEAAqB,0CAA0C,iBAAiB,MAAM,iBAAiB;AACvH;AACA;AACA,wCAAwC,qEAAmB;AAC3D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB,qDAAO;AACvB,gBAAgB,sEAAqB,+BAA+B,iBAAiB;AACrF;AACA;AACA;AACA,4CAA4C,qEAAmB;AAC/D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB,qDAAO;AACvB,gBAAgB,sEAAqB,gCAAgC,iBAAiB;AACtF;AACA;AACA;AACA,sCAAsC,oBAAoB;AAC1D,2BAA2B,yEAAwB;AACnD,oDAAoD,qDAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,iBAAiB,qDAAO;AACxB,gBAAgB,qEAAoB;AACpC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qEAAoB;AACpC;AACA;AACA,iBAAiB;AACjB;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA,YAAY,qEAAoB;AAChC;AACA,mDAAmD,mCAAmC;AACtF;AACA;AACA;AACA;AACA,wCAAwC,wEAAsB;AAC9D;AACA;AACA,aAAa;AACb,4CAA4C,qEAAqE;AACjH;AACA,2BAA2B,+DAAa;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,kEAAkB;AACrC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA,yDAAyD,gEAAS;AAClE;AACA,sCAAsC,qDAAU;AAChD;AACA,aAAa;AACb,gBAAgB,qDAAO;AACvB,2CAA2C,qCAAqC;AAChF;AACA,gCAAgC,wEAAgB;AAChD,+BAA+B,gEAAc,GAAG,SAAS;AACzD;AACA,gCAAgC,gEAAS;AACzC;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,0CAA0C,qDAAU;AACpD;AACA,aAAa;AACb,gCAAgC,0FAAyB;AACzD;AACA;AACA,aAAa;AACb,YAAY,0DAAa;AACzB,SAAS;AACT,KAAK;AACL,qBAAqB,iDAAI,GAAG,wBAAwB;AACpD;AACA,mBAAmB,SAAS;AAC5B,6BAA6B,WAAW;AACxC;AACA;AACA;AACA;AACA,gBAAgB,qDAAO;AACvB;AACA,oCAAoC,uEAAoB,eAAe,GAAG,gFAAgF;AAC1J;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;;;AClO6B;AACzB;AAC8C;AACjE,+BAA+B,6DAAW;AACjD;AACA;AACA;AACA,gDAAgD,uCAAuC;AACvF;AACA;AACA,eAAe,0DAAmB,CAAC,gFAAmB,IAAI,yBAAyB;AACnF;AACA;;;;;;;;;;;;;;;;;;;;;ACZmD;AACzB;AACuD;AAC1E,wCAAwC,6DAAW;AAC1D;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAmB,CAAC,yFAA4B,IAAI,gCAAgC;AACnG;AACA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,mBAAmB,yBAAyB;;;;;;;;;;;ACPxD;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf,4CAA4C,mBAAO,CAAC,wFAAuB;;AAE3E,kBAAkB,mBAAO,CAAC,8DAAmB;;AAE7C;AACA;AACA,CAAC;;AAED,kBAAe;;;;;;;;;;;ACjBF;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf,4CAA4C,mBAAO,CAAC,wFAAuB;;AAE3E,kBAAkB,mBAAO,CAAC,8DAAmB;;AAE7C;AACA;AACA,CAAC;;AAED,kBAAe;;;;;;;;;;;ACjBF;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,kBAAe;;AAEf,4CAA4C,mBAAO,CAAC,wFAAuB;;AAE3E,kBAAkB,mBAAO,CAAC,8DAAmB;;AAE7C;AACA;AACA,CAAC;;AAED,kBAAe;;;;;;;;;;;ACjBF;;AAEb,8CAA6C;AAC7C;AACA,CAAC,EAAC;AACF,2CAA0C;AAC1C;AACA;AACA;AACA;AACA,CAAC,EAAC;;AAEF,aAAa,mBAAO,CAAC,wEAAqB","sources":["webpack://jupyterlab_apimaker/./lib/components/APICard.js","webpack://jupyterlab_apimaker/./lib/components/APICatalogComponent.js","webpack://jupyterlab_apimaker/./lib/components/Footer.js","webpack://jupyterlab_apimaker/./lib/components/TokenInfo.js","webpack://jupyterlab_apimaker/./lib/components/TokensConfiguration.js","webpack://jupyterlab_apimaker/./lib/components/UserFunctionDialog.js","webpack://jupyterlab_apimaker/./lib/handler.js","webpack://jupyterlab_apimaker/./lib/index.js","webpack://jupyterlab_apimaker/./lib/widgets/APICatalogWidget.js","webpack://jupyterlab_apimaker/./lib/widgets/TokensConfigurationWidget.js","webpack://jupyterlab_apimaker/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://jupyterlab_apimaker/./node_modules/@mui/icons-material/Autorenew.js","webpack://jupyterlab_apimaker/./node_modules/@mui/icons-material/ContentCopy.js","webpack://jupyterlab_apimaker/./node_modules/@mui/icons-material/Delete.js","webpack://jupyterlab_apimaker/./node_modules/@mui/icons-material/utils/createSvgIcon.js"],"sourcesContent":["import React from 'react';\nimport { CardActions, Card, CardContent, Typography, CssBaseline, Stack } from '@mui/material';\nimport UserFunctionDialog from './UserFunctionDialog';\nconst APICardComponent = (props) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(CssBaseline, null),\n        React.createElement(Card, { variant: 'outlined' },\n            React.createElement(CardContent, null,\n                React.createElement(Stack, { direction: 'row', justifyContent: \"space-between\", alignItems: \"center\" },\n                    React.createElement(Typography, { sx: { fontSize: 14 }, color: \"text.secondary\", noWrap: true, gutterBottom: true }, props.project.function_name)),\n                React.createElement(Typography, { variant: \"h6\", noWrap: true }, `Image Tag: ${props.project.image_tag}`),\n                React.createElement(Typography, { noWrap: true, paragraph: true }, `Description: ${props.project.help_message ? props.project.help_message : 'No description provided.'}`)),\n            React.createElement(CardActions, null,\n                React.createElement(UserFunctionDialog, { project: props.project })))));\n};\nexport default APICardComponent;\n","import React from 'react';\nimport { Grid, Typography, CssBaseline, Box } from '@mui/material';\nimport APICardComponent from \"./APICard\";\nimport Footer from './Footer';\nexport class APICatalogComponent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(CssBaseline, null),\n            React.createElement(Grid, { container: true, spacing: 2, sx: {\n                    paddingLeft: '20px',\n                    paddingRight: '20px',\n                    paddingTop: '20px',\n                    overflow: 'auto',\n                    maxHeight: '100%'\n                } },\n                React.createElement(Grid, { item: true, xs: 12 },\n                    React.createElement(Box, { sx: { my: 4 } },\n                        React.createElement(Typography, { variant: 'h1', component: 'div', align: 'center', gutterBottom: true }, \"API Collection\"))),\n                (this.props.projects.available.length == 0 && this.props.projects.unavailable.length == 0) ? (React.createElement(Grid, { item: true, xs: 12 },\n                    React.createElement(Box, { sx: { my: 4 } },\n                        React.createElement(Typography, { variant: 'h3', component: 'div', align: 'center', gutterBottom: true }, \"No API found yet.\")))) : (null),\n                this.props.projects.available.map((item) => (React.createElement(Grid, { item: true, xs: 12, md: 6, xl: 2 },\n                    React.createElement(APICardComponent, { project: item })))),\n                this.props.projects.unavailable.map((item) => (React.createElement(Grid, { item: true, xs: 12, md: 6, xl: 2 },\n                    React.createElement(APICardComponent, { project: item }))))),\n            React.createElement(Footer, null)));\n    }\n}\n","import React from 'react';\nimport { Box, Container, Typography } from '@mui/material';\nconst Footer = () => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Container, { maxWidth: 'lg' },\n            React.createElement(Box, { sx: {\n                    display: \"flex\",\n                    position: \"fixed\",\n                    bottom: \"15px\",\n                    right: \"20px\",\n                    paddingRight: \"20px\",\n                    paddingBottom: \"15px\",\n                    width: \"100%\",\n                    justifyContent: \"flex-end\"\n                } },\n                React.createElement(Typography, { variant: 'body2' }, \"Made with \\u2764\\uFE0F by Navteca.\")))));\n};\nexport default Footer;\n","import React from 'react';\nimport { CssBaseline, Grid, Card, CardHeader, CardContent, CardActions, IconButton } from '@mui/material';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { requestAPI } from '../handler';\nexport class TokensInfoComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allTokens: this.props.allTokens,\n            newTokenName: ''\n        };\n        this._handleRefreshClick = this._handleRefreshClick.bind(this);\n        this._handleDeleteClick = this._handleDeleteClick.bind(this);\n    }\n    _getHumanDate(currentTimestamp) {\n        if (currentTimestamp) {\n            return new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' }).format(currentTimestamp * 1000);\n        }\n        return '-';\n    }\n    async _handleRefreshClick(event, item) {\n        event.preventDefault();\n        console.log(`Item => ${JSON.stringify(item)}`);\n        const updated = await requestAPI('tokenops', {\n            method: 'PUT',\n            body: JSON.stringify({ item, url: this.props.url })\n        });\n        console.log(`Updated Token => ${JSON.stringify(updated.token_info, null, 2)}`);\n        let token_obj_id = this.state.allTokens.findIndex(obj => obj.rowid === JSON.parse(updated.token_info).rowid);\n        let current_tokens = [...this.state.allTokens];\n        let single_item = Object.assign({}, this.state.allTokens[token_obj_id]);\n        single_item = JSON.parse(updated.token_info);\n        current_tokens[token_obj_id] = single_item;\n        console.log(`Token Object Id => ${token_obj_id}`);\n        console.log(`Single Item => ${JSON.stringify(single_item, null, 2)}`);\n        console.log(`Current Token => ${JSON.stringify(current_tokens[token_obj_id], null, 2)}`);\n        console.log(`Old Tokens List => ${JSON.stringify(this.state.allTokens, null, 2)}`);\n        console.log(`Updated Tokens List => ${JSON.stringify(current_tokens, null, 2)}`);\n        this.setState(Object.assign(Object.assign({}, this.state), { allTokens: current_tokens }));\n        this.forceUpdate();\n    }\n    async _handleDeleteClick(event, item) {\n        event.preventDefault();\n        console.log(`Item => ${JSON.stringify(item)}`);\n        const deleteInfo = await requestAPI('tokenops', {\n            method: 'DELETE',\n            body: JSON.stringify({ item, url: this.props.url })\n        });\n        this.setState(Object.assign(Object.assign({}, this.state), { allTokens: this.state.allTokens.filter(i => { if (i.rowid != item.rowid) {\n                return i;\n            } }) }));\n        console.log(`Delete Token Info => ${JSON.stringify(deleteInfo, null, 2)}`);\n    }\n    render() {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(CssBaseline, null),\n            this.state.allTokens.map((item, index) => {\n                return React.createElement(Grid, { item: true, key: index, xs: 12, md: 8, lg: 6 },\n                    React.createElement(Card, null,\n                        React.createElement(CardHeader, { title: item.name }),\n                        React.createElement(CardContent, null,\n                            React.createElement(\"p\", null,\n                                \"Id: \",\n                                item.rowid),\n                            React.createElement(\"p\", null,\n                                \"Token: \",\n                                item.token),\n                            React.createElement(\"p\", null,\n                                \"Status: \",\n                                item.status),\n                            React.createElement(\"p\", null,\n                                \"Created: \",\n                                this._getHumanDate(item.created)),\n                            React.createElement(\"p\", null,\n                                \"Expires: \",\n                                this._getHumanDate(item.expires))),\n                        React.createElement(CardActions, null,\n                            React.createElement(IconButton, { onClick: (e) => this._handleRefreshClick(e, item) },\n                                React.createElement(AutorenewIcon, null)),\n                            item.name === 'Default' ?\n                                '' :\n                                React.createElement(IconButton, { onClick: (e) => this._handleDeleteClick(e, item) },\n                                    React.createElement(DeleteIcon, null)))));\n            })));\n    }\n}\n","import { DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, CssBaseline, Grid, Typography, Link, TextField } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport { requestAPI } from '../handler';\nimport { TokensInfoComponent } from './TokenInfo';\nimport React from 'react';\nexport class TokensConfigurationComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this._onClick = (event) => {\n            event.stopPropagation();\n            this.setState({\n                open: true\n            });\n        };\n        this._onClose = (event) => {\n            event.stopPropagation();\n            this.setState({\n                open: false\n            });\n        };\n        this.state = {\n            open: true,\n            notebook_name: '',\n            function_name: '',\n            function_url: '',\n            tokens: [],\n            isFetching: true,\n            newTokenName: '',\n            endpoints: []\n        };\n        this._handleChange = this._handleChange.bind(this);\n        this._handleSubmit = this._handleSubmit.bind(this);\n        this._handleInputChange = this._handleInputChange.bind(this);\n    }\n    async _handleChange(event) {\n        event.preventDefault();\n        const function_name = event.target.value.split('/')[1];\n        const notebook_name = event.target.value.split('/')[0];\n        console.log(`Chosen Option => ${event.target.value}`);\n        const function_url = this.props.endpoints.endpoints.filter(item => item.function_name === function_name && item.notebook_name === notebook_name);\n        this.setState(Object.assign(Object.assign({}, this.state), { isFetching: true }));\n        const getAllTokens = await requestAPI('tokens_container', {\n            method: 'POST',\n            body: JSON.stringify({ function_name, notebook_name })\n        });\n        console.log(`Tokens List => ${JSON.stringify(getAllTokens.tokens_list, null, 2)}`);\n        this.setState(Object.assign(Object.assign({}, this.state), { tokens: getAllTokens.tokens_list, isFetching: false, function_name: function_name, notebook_name: notebook_name, function_url: function_url[0].url }));\n        this.forceUpdate();\n        console.log(`Response Tokens from React => ${JSON.stringify(getAllTokens.tokens_list, null, 2)}`);\n    }\n    ;\n    async _handleSubmit(event) {\n        event.preventDefault();\n        this.setState(Object.assign(Object.assign({}, this.state), { isFetching: true }));\n        const newTokeninfo = await requestAPI('tokenops', {\n            method: 'POST',\n            body: JSON.stringify({ token_name: this.state.newTokenName, url: this.state.function_url })\n        });\n        console.log(`New Token Info => ${JSON.stringify(newTokeninfo.new_token_info)}`);\n        const function_name = this.state.function_name;\n        const notebook_name = this.state.notebook_name;\n        const getAllTokens = await requestAPI('tokens_container', {\n            method: 'POST',\n            body: JSON.stringify({ function_name, notebook_name })\n        });\n        this.setState(Object.assign(Object.assign({}, this.state), { tokens: getAllTokens.tokens_list, isFetching: false }));\n        this.forceUpdate();\n    }\n    _handleInputChange(event) {\n        event.preventDefault();\n        this.setState({\n            newTokenName: event.target.value\n        });\n    }\n    componentDidMount() {\n        this.setState(Object.assign(Object.assign({}, this.state), { endpoints: this.props.endpoints.endpoints }));\n    }\n    render() {\n        let endpoints = this.state.endpoints.length > 0 ? true : false;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(CssBaseline, null),\n            React.createElement(Dialog, { open: this.state.open, onClick: this._onClick, onClose: this._onClose, maxWidth: 'md', fullWidth: true, scroll: 'paper' },\n                React.createElement(DialogTitle, null, \"Tokens Configuration\"),\n                React.createElement(DialogContent, null,\n                    React.createElement(Grid, { container: true, spacing: 2, direction: 'row', alignItems: \"center\", justifyContent: \"center\" },\n                        React.createElement(Grid, { item: true, xs: 12, md: 8, lg: 6 },\n                            React.createElement(FormControl, { fullWidth: true, sx: { mt: 1 }, margin: \"normal\" },\n                                React.createElement(InputLabel, { htmlFor: \"select-label\" }, \"Function name\"),\n                                React.createElement(Select, { labelId: \"select-label\", id: \"simple-select\", value: this.state.notebook_name + \"/\" + this.state.function_name, label: \"Function name\", onChange: (e) => this._handleChange(e), autoFocus: true, inputProps: {\n                                        id: \"select-label\",\n                                    } }, endpoints ?\n                                    (this.state.endpoints.map((item, index) => {\n                                        return React.createElement(MenuItem, { key: index, value: item.notebook_name + \"/\" + item.function_name },\n                                            item.notebook_name + \"/\" + item.function_name,\n                                            React.createElement(\"br\", null));\n                                    })) :\n                                    (React.createElement(MenuItem, { key: \"1\", value: \"\" },\n                                        \"No Function Found\",\n                                        React.createElement(\"br\", null)))))),\n                        this.state.function_name ? (React.createElement(Grid, { item: true },\n                            React.createElement(\"form\", { onSubmit: this._handleSubmit },\n                                React.createElement(Grid, { container: true, alignItems: \"center\", justifyContent: \"center\", direction: \"row\" },\n                                    React.createElement(Grid, { item: true },\n                                        React.createElement(TextField, { id: \"name-input\", name: \"name\", label: \"Name\", type: \"text\", variant: 'outlined', value: this.state.newTokenName, onChange: this._handleInputChange })),\n                                    React.createElement(Grid, { item: true, sx: { ml: 1 } },\n                                        React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\" }, \"Create\")))))) : ''),\n                    !this.state.isFetching ? (React.createElement(React.Fragment, null,\n                        React.createElement(Typography, { variant: \"h6\", sx: { m: 2 } },\n                            \"Endpoint URL:\",\n                            React.createElement(Link, { href: this.state.function_url, underline: \"hover\" }, this.state.function_url)),\n                        React.createElement(Grid, { container: true, spacing: 2 },\n                            React.createElement(TokensInfoComponent, { allTokens: this.state.tokens, url: this.state.function_url })))) : ''),\n                React.createElement(DialogActions, null,\n                    React.createElement(Button, { onClick: this._onClose, autoFocus: true, sx: { p: 2 } }, \"Ok\")))));\n    }\n}\n","import React from 'react';\nimport { Clipboard } from '@jupyterlab/apputils';\nimport { IconButton, Button, Typography, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Stack, Box, Divider } from '@mui/material';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport isUndefined from 'lodash.isundefined';\nconst UserFunctionDialog = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const getCode = `import requests\\nr = requests.get('${props.project.endpoint_url}')\\nr.content`;\n    const postCode = `import requests\\nr = requests.post('${props.project.endpoint_url}', json={<function_params>})\\nr.content`;\n    const prepareJSONForExample = (function_params) => {\n        let postCodeFixed = '';\n        if (isUndefined(function_params)) {\n            const re = /<function_params>/gi;\n            postCodeFixed = postCode.replace(re, '');\n            return postCodeFixed;\n        }\n        let params = [];\n        for (let p of function_params.split(',')) {\n            params.push(`\"${p.trim()}\": <value>`);\n        }\n        const re = /<function_params>/gi;\n        postCodeFixed = postCode.replace(re, params.join(', '));\n        return postCodeFixed;\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { size: \"small\", onClick: handleClickOpen }, \"Learn More\"),\n        React.createElement(Dialog, { open: open, keepMounted: true, onClose: handleClose, \"aria-labelledby\": 'user-function-dialog-title', \"aria-describedby\": 'user-function-dialog-description' },\n            React.createElement(DialogTitle, { id: 'user-function-dialog-title' },\n                React.createElement(Typography, { variant: 'h5', gutterBottom: true }, 'Endpoint Information')),\n            React.createElement(DialogContent, { sx: { paddingBottom: '8px' } },\n                React.createElement(DialogContentText, { id: 'user-function-dialog-description' },\n                    React.createElement(Typography, null, `Description: ${props.project.help_message ? props.project.help_message : 'No description has been provided.'}\\n`),\n                    React.createElement(Typography, null, `Parameters: ${props.project.function_params ? props.project.function_params : 'This functions doesn\\'t require parameters.'}`),\n                    React.createElement(Divider, null),\n                    React.createElement(Stack, { justifyContent: \"flex-start\", alignItems: \"stretch\", spacing: 0, sx: { paddingTop: '8px' } },\n                        React.createElement(Typography, { variant: 'h6' }, 'GET Method'),\n                        React.createElement(Box, { sx: {\n                                backgroundColor: '#f5f5f5',\n                                border: '1px solid #cccccc',\n                                padding: '8px 40px 8px 8px',\n                                position: 'relative'\n                            } },\n                            React.createElement(Typography, { noWrap: true, paragraph: true, gutterBottom: true, sx: {\n                                    display: 'block',\n                                    fontFamily: 'monospace',\n                                    fontSize: '13px',\n                                    tabSize: 2,\n                                    whiteSpace: 'pre-wrap',\n                                    wordBreak: 'break-all',\n                                    wordWrap: 'break-word'\n                                } }, getCode),\n                            React.createElement(IconButton, { \"aria-label\": 'copy', onClick: () => Clipboard.copyToSystem(getCode), sx: {\n                                    bottom: '0px',\n                                    position: 'absolute',\n                                    right: '8px'\n                                } },\n                                React.createElement(ContentCopyIcon, { color: \"action\", fontSize: 'small' }))),\n                        React.createElement(Typography, { variant: 'h6', sx: { paddingTop: '8px' } }, 'POST Method'),\n                        React.createElement(Box, { sx: {\n                                backgroundColor: '#f5f5f5',\n                                border: '1px solid #cccccc',\n                                padding: '8px 40px 8px 8px',\n                                position: 'relative'\n                            } },\n                            React.createElement(Typography, { noWrap: true, paragraph: true, gutterBottom: true, sx: {\n                                    display: 'block',\n                                    fontFamily: 'monospace',\n                                    fontSize: '13px',\n                                    tabSize: 2,\n                                    whiteSpace: 'pre-wrap',\n                                    wordBreak: 'break-all',\n                                    wordWrap: 'break-word'\n                                } }, prepareJSONForExample(props.project.function_params ? props.project.function_params : undefined)),\n                            React.createElement(IconButton, { \"aria-label\": 'copy', onClick: () => Clipboard.copyToSystem(prepareJSONForExample(props.project.function_params ? props.project.function_params : undefined)), sx: {\n                                    bottom: '0px',\n                                    position: 'absolute',\n                                    right: '8px'\n                                } },\n                                React.createElement(ContentCopyIcon, { color: \"action\", fontSize: 'small' })))))),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { onClick: handleClose }, \"Close\")))));\n};\nexport default UserFunctionDialog;\n","import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nexport async function requestAPI(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, 'jupyterlab_apimaker', // API Namespace\n    endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    let data = await response.text();\n    if (data.length > 0) {\n        try {\n            data = JSON.parse(data);\n        }\n        catch (error) {\n            console.log('Not a JSON response body.', response);\n        }\n    }\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message || data);\n    }\n    return data;\n}\n","import { InputDialog, ToolbarButton, MainAreaWidget, Clipboard } from \"@jupyterlab/apputils\";\nimport { PageConfig } from \"@jupyterlab/coreutils\";\nimport { ILauncher } from \"@jupyterlab/launcher\";\nimport { IMainMenu } from \"@jupyterlab/mainmenu\";\nimport { reactIcon } from \"@jupyterlab/ui-components\";\nimport { DisposableDelegate } from \"@lumino/disposable\";\nimport { Menu, Widget } from \"@lumino/widgets\";\nimport { INotification } from \"jupyterlab_toastify\";\nimport isEmpty from \"lodash.isempty\";\nimport isEqual from \"lodash.isequal\";\nimport isUndefined from \"lodash.isundefined\";\nimport { requestAPI } from \"./handler\";\nimport { APICatalogWidget } from \"./widgets/APICatalogWidget\";\nimport { TokensConfigurationWidget } from \"./widgets/TokensConfigurationWidget\";\nconst plugin = {\n    id: \"jupyterlab_apimaker:plugin\",\n    autoStart: true,\n    optional: [ILauncher, IMainMenu],\n    activate,\n};\nlet openedFilename;\nlet pathToNotebook;\nasync function sendNotebookText(panel) {\n    var _a, _b, _c, _d;\n    openedFilename = panel.title.label.split(\".\")[0].replace(/[ ._]/g, \"-\");\n    console.log(`Panel Name => ${panel.title.label}`);\n    console.log(`Panel Name Fix => ${openedFilename}`);\n    console.log(`Panel Model => ${(_a = panel.model) === null || _a === void 0 ? void 0 : _a.toJSON()}`);\n    console.log(`Panel PageConfig and Model Path => ${PageConfig.getOption('serverRoot')} - ${(_b = panel.context.contentsModel) === null || _b === void 0 ? void 0 : _b.path}`);\n    pathToNotebook = `${PageConfig.getOption('serverRoot')}/${(_c = panel.context.contentsModel) === null || _c === void 0 ? void 0 : _c.path}`;\n    const createProjectResult = await requestAPI(\"process_notebook\", {\n        method: \"POST\",\n        body: JSON.stringify((_d = panel.model) === null || _d === void 0 ? void 0 : _d.toJSON()),\n    });\n    if (createProjectResult.functions) {\n        return createProjectResult;\n    }\n    return undefined;\n}\nasync function showFunctions(functionsInNotebook) {\n    let functionsToSelect = functionsInNotebook.functions.map((el) => el.function_name);\n    const functionSelector = await InputDialog.getItem({\n        title: \"Create New API\",\n        label: \"Select Function:\",\n        items: functionsToSelect,\n        okLabel: \"Next\",\n        cancelLabel: \"Cancel\",\n    });\n    if (!functionSelector.button.accept) {\n        return;\n    }\n    if (isUndefined(functionSelector.value)) {\n        return undefined;\n    }\n    return functionSelector.value;\n}\nexport class ButtonExtension {\n    createNew(panel, _) {\n        const printNotebookText = async () => {\n            var _a, _b;\n            //         notebookTracker.currentWidget?.update()\n            // notebookTracker.currentWidget?.title.label\n            const functionsInNotebook = await sendNotebookText(panel);\n            if (isUndefined(functionsInNotebook)) {\n                INotification.warning(\"There are no functions in this notebook. Please, add one at least.\", { autoClose: 3000 });\n                return;\n            }\n            const selectedFunction = await showFunctions(functionsInNotebook);\n            if (isUndefined(selectedFunction)) {\n                return;\n            }\n            const functionToMakeAPIFrom = functionsInNotebook.functions.filter((el) => el.function_name == selectedFunction);\n            if (isEmpty(functionToMakeAPIFrom)) {\n                INotification.warning(`There is not a function with the name ${selectedFunction}.`, { autoClose: 3000 });\n                return;\n            }\n            const requestDomain = await InputDialog.getText({\n                title: \"Create New API\",\n                label: \"Provide the domain of the API:\",\n                okLabel: \"Next\",\n                cancelLabel: \"Cancel\",\n            });\n            if (!requestDomain.button.accept) {\n                return;\n            }\n            if (isEmpty(requestDomain.value)) {\n                INotification.warning(`Please, insert a domain.`, { autoClose: 3000 });\n                return;\n            }\n            const requestedDomain = (_a = requestDomain.value) === null || _a === void 0 ? void 0 : _a.replace(\" \", \"_\").replace(/[^a-zA-Z0-9]/g, \"_\");\n            const requestAPIVersion = await InputDialog.getText({\n                title: \"Create New API\",\n                label: \"Provide the version of the API:\",\n                okLabel: \"Create\",\n                cancelLabel: \"Cancel\",\n            });\n            if (!requestAPIVersion.button.accept) {\n                return;\n            }\n            if (isEmpty(requestAPIVersion.value)) {\n                INotification.warning(`Please, insert a version.`, { autoClose: 3000 });\n                return;\n            }\n            const requestedAPIVersion = (_b = requestAPIVersion.value) === null || _b === void 0 ? void 0 : _b.replace(/[ ._]/g, \"-\");\n            console.log(`Version => ${requestedAPIVersion}`);\n            let id = await INotification.inProgress(\"Baking API...\");\n            const sendFunctionToMakeAPIFrom = await requestAPI(\"make_api\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                    userCode: functionToMakeAPIFrom[0],\n                    notebookName: openedFilename,\n                    domain: requestedDomain,\n                    apiVersion: requestedAPIVersion,\n                    pathToNotebook: pathToNotebook\n                }),\n            });\n            if (!isEqual(sendFunctionToMakeAPIFrom.statusCode, 200)) {\n                INotification.update({\n                    toastId: id,\n                    message: `There has been an error creating the endpoint, please contact the administrator os API Maker.`,\n                    type: \"warning\",\n                });\n                return;\n            }\n            let messages = [\n                `Let's wait for the service to be ready. This may take a while.`,\n                `We're still working on it. Thank you for your patience`,\n                `This process usually take some time. Please be patient.`,\n                `We will let you know when your serivce is ready.`,\n                `Thank you for your patience, we're still working on it.`\n            ];\n            const delay = (ms) => new Promise(res => setTimeout(res, ms));\n            const updateNotification = (toastId, message) => {\n                INotification.update({\n                    toastId: toastId,\n                    message\n                });\n            };\n            for (let i = 1; i <= 15; i++) {\n                let timer = i * Math.floor(Math.random() * (30000 - 15000 + 1)) + 15000;\n                let message = messages[Math.floor(Math.random() * messages.length)];\n                await delay(timer);\n                updateNotification(id, message);\n            }\n            INotification.update({\n                toastId: id,\n                message: `Your service is ready: ${sendFunctionToMakeAPIFrom.body.url}`,\n                type: \"success\",\n                buttons: [\n                    {\n                        label: 'Copy',\n                        callback: () => Clipboard.copyToSystem(sendFunctionToMakeAPIFrom.body.url)\n                    }\n                ],\n            });\n            console.log(`URL and Token => ${JSON.stringify(sendFunctionToMakeAPIFrom.body.defaultToken, null, 2)}`);\n        };\n        const button = new ToolbarButton({\n            className: \"apimaker\",\n            label: \"Bake API\",\n            onClick: printNotebookText,\n            tooltip: \"Create an API based on a selected function.\",\n        });\n        panel.toolbar.insertItem(10, \"make-api\", button);\n        return new DisposableDelegate(() => {\n            button.dispose();\n        });\n    }\n}\nfunction activate(app, launcher, mainMenu, panel) {\n    console.log(\"API Baker Extension Activated\");\n    const { commands } = app;\n    commands.addCommand(\"create-react-widget\", {\n        caption: \"Show API Collection\",\n        label: \"API Collection\",\n        icon: (args) => (args[\"isPalette\"] ? undefined : reactIcon),\n        execute: async () => {\n            const getProjects = await requestAPI(\"api_catalog\", {\n                method: \"GET\",\n            });\n            if (isEqual(getProjects.statusCode, 200)) {\n                console.log(`Projects => ${JSON.stringify(getProjects, null, 2)}`);\n            }\n            const content = new APICatalogWidget(getProjects);\n            const widget = new MainAreaWidget({ content });\n            widget.title.label = \"API Collection\";\n            widget.title.icon = reactIcon;\n            app.shell.add(widget, \"main\");\n        },\n    });\n    const command = \"jlab-apibaker:command\";\n    commands.addCommand(command, {\n        label: \"Tokens Configuration\",\n        caption: \"Tokens Configuration\",\n        execute: async () => {\n            const getAllEndpoints = await requestAPI(\"tokens\", {\n                method: \"GET\",\n            });\n            const content = new TokensConfigurationWidget({\n                endpoints: getAllEndpoints.all_endpoints,\n                jwt: getAllEndpoints.jwt,\n            });\n            Widget.attach(content, document.body);\n        },\n    });\n    const menu = new Menu({ commands: app.commands });\n    menu.title.label = \"API Baker\";\n    menu.addItem({ command });\n    mainMenu.addMenu(menu, { rank: 900 });\n    Promise.all([app.restored]).then(() => {\n        var _a;\n        if (app.shell.currentWidget) {\n            app.shell.currentWidget.update();\n            if (isEqual(app.shell.currentWidget.title.label.split(\".\").pop(), \"ipynb\")) {\n                openedFilename = app.shell.currentWidget.title.label.split(\".\")[0];\n                pathToNotebook = `${PageConfig.getOption('serverRoot')}/${(_a = panel.context.contentsModel) === null || _a === void 0 ? void 0 : _a.path}`;\n            }\n        }\n    });\n    if (launcher) {\n        launcher.add({\n            command: \"create-react-widget\",\n        });\n    }\n    app.docRegistry.addWidgetExtension(\"Notebook\", new ButtonExtension());\n}\nexport default plugin;\n","import { ReactWidget } from \"@jupyterlab/apputils\";\nimport React from 'react';\nimport { APICatalogComponent } from \"../components/APICatalogComponent\";\nexport class APICatalogWidget extends ReactWidget {\n    constructor(projects) {\n        super();\n        this.projects = projects.projects;\n        console.log(`Projects in Component => ${JSON.stringify(this.projects, null, 2)}`);\n    }\n    render() {\n        return React.createElement(APICatalogComponent, { projects: this.projects });\n    }\n}\n","import { ReactWidget } from \"@jupyterlab/apputils\";\nimport React from 'react';\nimport { TokensConfigurationComponent } from '../components/TokensConfiguration';\nexport class TokensConfigurationWidget extends ReactWidget {\n    constructor(master_db_info) {\n        super();\n        this.tokenDummyData = master_db_info;\n    }\n    render() {\n        return React.createElement(TokensConfigurationComponent, { endpoints: this.tokenDummyData });\n    }\n}\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n}), 'Autorenew');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"\n}), 'ContentCopy');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\n\nvar _utils = require(\"@mui/material/utils\");"],"names":[],"sourceRoot":""}