# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MicrosoftAzureManagementDataFactoryModelsPipelineRun(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'additional_properties': 'dict(str, object)',
        'run_id': 'str',
        'run_group_id': 'str',
        'is_latest': 'bool',
        'pipeline_name': 'str',
        'parameters': 'dict(str, str)',
        'run_dimensions': 'dict(str, str)',
        'invoked_by': 'MicrosoftAzureManagementDataFactoryModelsPipelineRunInvokedBy',
        'last_updated': 'datetime',
        'run_start': 'datetime',
        'run_end': 'datetime',
        'duration_in_ms': 'int',
        'status': 'str',
        'message': 'str'
    }

    attribute_map = {
        'additional_properties': 'additionalProperties',
        'run_id': 'runId',
        'run_group_id': 'runGroupId',
        'is_latest': 'isLatest',
        'pipeline_name': 'pipelineName',
        'parameters': 'parameters',
        'run_dimensions': 'runDimensions',
        'invoked_by': 'invokedBy',
        'last_updated': 'lastUpdated',
        'run_start': 'runStart',
        'run_end': 'runEnd',
        'duration_in_ms': 'durationInMs',
        'status': 'status',
        'message': 'message'
    }

    def __init__(self, additional_properties=None, run_id=None, run_group_id=None, is_latest=None, pipeline_name=None, parameters=None, run_dimensions=None, invoked_by=None, last_updated=None, run_start=None, run_end=None, duration_in_ms=None, status=None, message=None):  # noqa: E501
        """MicrosoftAzureManagementDataFactoryModelsPipelineRun - a model defined in Swagger"""  # noqa: E501
        self._additional_properties = None
        self._run_id = None
        self._run_group_id = None
        self._is_latest = None
        self._pipeline_name = None
        self._parameters = None
        self._run_dimensions = None
        self._invoked_by = None
        self._last_updated = None
        self._run_start = None
        self._run_end = None
        self._duration_in_ms = None
        self._status = None
        self._message = None
        self.discriminator = None
        if additional_properties is not None:
            self.additional_properties = additional_properties
        if run_id is not None:
            self.run_id = run_id
        if run_group_id is not None:
            self.run_group_id = run_group_id
        if is_latest is not None:
            self.is_latest = is_latest
        if pipeline_name is not None:
            self.pipeline_name = pipeline_name
        if parameters is not None:
            self.parameters = parameters
        if run_dimensions is not None:
            self.run_dimensions = run_dimensions
        if invoked_by is not None:
            self.invoked_by = invoked_by
        if last_updated is not None:
            self.last_updated = last_updated
        if run_start is not None:
            self.run_start = run_start
        if run_end is not None:
            self.run_end = run_end
        if duration_in_ms is not None:
            self.duration_in_ms = duration_in_ms
        if status is not None:
            self.status = status
        if message is not None:
            self.message = message

    @property
    def additional_properties(self):
        """Gets the additional_properties of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The additional_properties of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._additional_properties

    @additional_properties.setter
    def additional_properties(self, additional_properties):
        """Sets the additional_properties of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param additional_properties: The additional_properties of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: dict(str, object)
        """

        self._additional_properties = additional_properties

    @property
    def run_id(self):
        """Gets the run_id of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The run_id of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: str
        """
        return self._run_id

    @run_id.setter
    def run_id(self, run_id):
        """Sets the run_id of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param run_id: The run_id of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: str
        """

        self._run_id = run_id

    @property
    def run_group_id(self):
        """Gets the run_group_id of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The run_group_id of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: str
        """
        return self._run_group_id

    @run_group_id.setter
    def run_group_id(self, run_group_id):
        """Sets the run_group_id of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param run_group_id: The run_group_id of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: str
        """

        self._run_group_id = run_group_id

    @property
    def is_latest(self):
        """Gets the is_latest of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The is_latest of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: bool
        """
        return self._is_latest

    @is_latest.setter
    def is_latest(self, is_latest):
        """Sets the is_latest of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param is_latest: The is_latest of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: bool
        """

        self._is_latest = is_latest

    @property
    def pipeline_name(self):
        """Gets the pipeline_name of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The pipeline_name of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: str
        """
        return self._pipeline_name

    @pipeline_name.setter
    def pipeline_name(self, pipeline_name):
        """Sets the pipeline_name of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param pipeline_name: The pipeline_name of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: str
        """

        self._pipeline_name = pipeline_name

    @property
    def parameters(self):
        """Gets the parameters of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The parameters of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param parameters: The parameters of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: dict(str, str)
        """

        self._parameters = parameters

    @property
    def run_dimensions(self):
        """Gets the run_dimensions of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The run_dimensions of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._run_dimensions

    @run_dimensions.setter
    def run_dimensions(self, run_dimensions):
        """Sets the run_dimensions of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param run_dimensions: The run_dimensions of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: dict(str, str)
        """

        self._run_dimensions = run_dimensions

    @property
    def invoked_by(self):
        """Gets the invoked_by of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The invoked_by of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: MicrosoftAzureManagementDataFactoryModelsPipelineRunInvokedBy
        """
        return self._invoked_by

    @invoked_by.setter
    def invoked_by(self, invoked_by):
        """Sets the invoked_by of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param invoked_by: The invoked_by of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: MicrosoftAzureManagementDataFactoryModelsPipelineRunInvokedBy
        """

        self._invoked_by = invoked_by

    @property
    def last_updated(self):
        """Gets the last_updated of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The last_updated of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param last_updated: The last_updated of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: datetime
        """

        self._last_updated = last_updated

    @property
    def run_start(self):
        """Gets the run_start of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The run_start of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: datetime
        """
        return self._run_start

    @run_start.setter
    def run_start(self, run_start):
        """Sets the run_start of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param run_start: The run_start of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: datetime
        """

        self._run_start = run_start

    @property
    def run_end(self):
        """Gets the run_end of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The run_end of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: datetime
        """
        return self._run_end

    @run_end.setter
    def run_end(self, run_end):
        """Sets the run_end of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param run_end: The run_end of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: datetime
        """

        self._run_end = run_end

    @property
    def duration_in_ms(self):
        """Gets the duration_in_ms of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The duration_in_ms of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: int
        """
        return self._duration_in_ms

    @duration_in_ms.setter
    def duration_in_ms(self, duration_in_ms):
        """Sets the duration_in_ms of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param duration_in_ms: The duration_in_ms of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: int
        """

        self._duration_in_ms = duration_in_ms

    @property
    def status(self):
        """Gets the status of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The status of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param status: The status of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def message(self):
        """Gets the message of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501


        :return: The message of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.


        :param message: The message of this MicrosoftAzureManagementDataFactoryModelsPipelineRun.  # noqa: E501
        :type: str
        """

        self._message = message

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftAzureManagementDataFactoryModelsPipelineRun, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftAzureManagementDataFactoryModelsPipelineRun):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
