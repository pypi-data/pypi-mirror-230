# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SystemReflectionParameterInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'attributes': 'SystemReflectionParameterAttributes',
        'member': 'SystemReflectionMemberInfo',
        'name': 'str',
        'parameter_type': 'SystemType',
        'position': 'int',
        'is_in': 'bool',
        'is_lcid': 'bool',
        'is_optional': 'bool',
        'is_out': 'bool',
        'is_retval': 'bool',
        'default_value': 'object',
        'raw_default_value': 'object',
        'has_default_value': 'bool',
        'custom_attributes': 'list[SystemReflectionCustomAttributeData]',
        'metadata_token': 'int'
    }

    attribute_map = {
        'attributes': 'attributes',
        'member': 'member',
        'name': 'name',
        'parameter_type': 'parameterType',
        'position': 'position',
        'is_in': 'isIn',
        'is_lcid': 'isLcid',
        'is_optional': 'isOptional',
        'is_out': 'isOut',
        'is_retval': 'isRetval',
        'default_value': 'defaultValue',
        'raw_default_value': 'rawDefaultValue',
        'has_default_value': 'hasDefaultValue',
        'custom_attributes': 'customAttributes',
        'metadata_token': 'metadataToken'
    }

    def __init__(self, attributes=None, member=None, name=None, parameter_type=None, position=None, is_in=None, is_lcid=None, is_optional=None, is_out=None, is_retval=None, default_value=None, raw_default_value=None, has_default_value=None, custom_attributes=None, metadata_token=None):  # noqa: E501
        """SystemReflectionParameterInfo - a model defined in Swagger"""  # noqa: E501
        self._attributes = None
        self._member = None
        self._name = None
        self._parameter_type = None
        self._position = None
        self._is_in = None
        self._is_lcid = None
        self._is_optional = None
        self._is_out = None
        self._is_retval = None
        self._default_value = None
        self._raw_default_value = None
        self._has_default_value = None
        self._custom_attributes = None
        self._metadata_token = None
        self.discriminator = None
        if attributes is not None:
            self.attributes = attributes
        if member is not None:
            self.member = member
        if name is not None:
            self.name = name
        if parameter_type is not None:
            self.parameter_type = parameter_type
        if position is not None:
            self.position = position
        if is_in is not None:
            self.is_in = is_in
        if is_lcid is not None:
            self.is_lcid = is_lcid
        if is_optional is not None:
            self.is_optional = is_optional
        if is_out is not None:
            self.is_out = is_out
        if is_retval is not None:
            self.is_retval = is_retval
        if default_value is not None:
            self.default_value = default_value
        if raw_default_value is not None:
            self.raw_default_value = raw_default_value
        if has_default_value is not None:
            self.has_default_value = has_default_value
        if custom_attributes is not None:
            self.custom_attributes = custom_attributes
        if metadata_token is not None:
            self.metadata_token = metadata_token

    @property
    def attributes(self):
        """Gets the attributes of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The attributes of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: SystemReflectionParameterAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this SystemReflectionParameterInfo.


        :param attributes: The attributes of this SystemReflectionParameterInfo.  # noqa: E501
        :type: SystemReflectionParameterAttributes
        """

        self._attributes = attributes

    @property
    def member(self):
        """Gets the member of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The member of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: SystemReflectionMemberInfo
        """
        return self._member

    @member.setter
    def member(self, member):
        """Sets the member of this SystemReflectionParameterInfo.


        :param member: The member of this SystemReflectionParameterInfo.  # noqa: E501
        :type: SystemReflectionMemberInfo
        """

        self._member = member

    @property
    def name(self):
        """Gets the name of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The name of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SystemReflectionParameterInfo.


        :param name: The name of this SystemReflectionParameterInfo.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def parameter_type(self):
        """Gets the parameter_type of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The parameter_type of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: SystemType
        """
        return self._parameter_type

    @parameter_type.setter
    def parameter_type(self, parameter_type):
        """Sets the parameter_type of this SystemReflectionParameterInfo.


        :param parameter_type: The parameter_type of this SystemReflectionParameterInfo.  # noqa: E501
        :type: SystemType
        """

        self._parameter_type = parameter_type

    @property
    def position(self):
        """Gets the position of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The position of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this SystemReflectionParameterInfo.


        :param position: The position of this SystemReflectionParameterInfo.  # noqa: E501
        :type: int
        """

        self._position = position

    @property
    def is_in(self):
        """Gets the is_in of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The is_in of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: bool
        """
        return self._is_in

    @is_in.setter
    def is_in(self, is_in):
        """Sets the is_in of this SystemReflectionParameterInfo.


        :param is_in: The is_in of this SystemReflectionParameterInfo.  # noqa: E501
        :type: bool
        """

        self._is_in = is_in

    @property
    def is_lcid(self):
        """Gets the is_lcid of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The is_lcid of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: bool
        """
        return self._is_lcid

    @is_lcid.setter
    def is_lcid(self, is_lcid):
        """Sets the is_lcid of this SystemReflectionParameterInfo.


        :param is_lcid: The is_lcid of this SystemReflectionParameterInfo.  # noqa: E501
        :type: bool
        """

        self._is_lcid = is_lcid

    @property
    def is_optional(self):
        """Gets the is_optional of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The is_optional of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: bool
        """
        return self._is_optional

    @is_optional.setter
    def is_optional(self, is_optional):
        """Sets the is_optional of this SystemReflectionParameterInfo.


        :param is_optional: The is_optional of this SystemReflectionParameterInfo.  # noqa: E501
        :type: bool
        """

        self._is_optional = is_optional

    @property
    def is_out(self):
        """Gets the is_out of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The is_out of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: bool
        """
        return self._is_out

    @is_out.setter
    def is_out(self, is_out):
        """Sets the is_out of this SystemReflectionParameterInfo.


        :param is_out: The is_out of this SystemReflectionParameterInfo.  # noqa: E501
        :type: bool
        """

        self._is_out = is_out

    @property
    def is_retval(self):
        """Gets the is_retval of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The is_retval of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: bool
        """
        return self._is_retval

    @is_retval.setter
    def is_retval(self, is_retval):
        """Sets the is_retval of this SystemReflectionParameterInfo.


        :param is_retval: The is_retval of this SystemReflectionParameterInfo.  # noqa: E501
        :type: bool
        """

        self._is_retval = is_retval

    @property
    def default_value(self):
        """Gets the default_value of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The default_value of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: object
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this SystemReflectionParameterInfo.


        :param default_value: The default_value of this SystemReflectionParameterInfo.  # noqa: E501
        :type: object
        """

        self._default_value = default_value

    @property
    def raw_default_value(self):
        """Gets the raw_default_value of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The raw_default_value of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: object
        """
        return self._raw_default_value

    @raw_default_value.setter
    def raw_default_value(self, raw_default_value):
        """Sets the raw_default_value of this SystemReflectionParameterInfo.


        :param raw_default_value: The raw_default_value of this SystemReflectionParameterInfo.  # noqa: E501
        :type: object
        """

        self._raw_default_value = raw_default_value

    @property
    def has_default_value(self):
        """Gets the has_default_value of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The has_default_value of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: bool
        """
        return self._has_default_value

    @has_default_value.setter
    def has_default_value(self, has_default_value):
        """Sets the has_default_value of this SystemReflectionParameterInfo.


        :param has_default_value: The has_default_value of this SystemReflectionParameterInfo.  # noqa: E501
        :type: bool
        """

        self._has_default_value = has_default_value

    @property
    def custom_attributes(self):
        """Gets the custom_attributes of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The custom_attributes of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: list[SystemReflectionCustomAttributeData]
        """
        return self._custom_attributes

    @custom_attributes.setter
    def custom_attributes(self, custom_attributes):
        """Sets the custom_attributes of this SystemReflectionParameterInfo.


        :param custom_attributes: The custom_attributes of this SystemReflectionParameterInfo.  # noqa: E501
        :type: list[SystemReflectionCustomAttributeData]
        """

        self._custom_attributes = custom_attributes

    @property
    def metadata_token(self):
        """Gets the metadata_token of this SystemReflectionParameterInfo.  # noqa: E501


        :return: The metadata_token of this SystemReflectionParameterInfo.  # noqa: E501
        :rtype: int
        """
        return self._metadata_token

    @metadata_token.setter
    def metadata_token(self, metadata_token):
        """Sets the metadata_token of this SystemReflectionParameterInfo.


        :param metadata_token: The metadata_token of this SystemReflectionParameterInfo.  # noqa: E501
        :type: int
        """

        self._metadata_token = metadata_token

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SystemReflectionParameterInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SystemReflectionParameterInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
