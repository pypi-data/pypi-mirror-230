Metadata-Version: 2.1
Name: zos-utilities
Version: 0.6.1
Summary: Library for performing various utility functions for z/OS
Home-page: https://github.com/Tam-Lin/zos-utilities
Author: Kevin McKenzie
Author-email: kmckenzi@us.ibm.com
License: Apache Software License 2.0
Keywords: zos-utilities
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.7
License-File: LICENSE
License-File: AUTHORS.rst

=============
zos-utilities
=============


.. image:: https://img.shields.io/pypi/v/zos-utilities.svg
        :target: https://pypi.python.org/pypi/zos-utilities
        :alt:  Pypi

.. image:: https://github.com/Tam-Lin/zos-utilities/actions/workflows/build_and_test.yml/badge.svg
        :target: https://github.com/Tam-Lin/zos-utilities/actions/workflows/build_and_test.yml
        :alt: Build and Test Status

.. image:: https://readthedocs.org/projects/zos-utilities/badge/?version=latest
        :target: https://zos-utilities.readthedocs.io/en/latest/?version=latest
        :alt: Documentation Status

.. image:: https://img.shields.io/pypi/pyversions/zos-utilities.svg
        :target: https://img.shields.io/pypi/pyversions/zos-utilities.svg
        :alt: Python versions


Library for performing various utility functions needed for z/OS libraries. I have a couple of libraries that do
various things for/with z/OS, and they all need to convert from the z/OS Julian Date to datetime, so I thought I might
as well put it into a library.  I'm also starting to build a representation of z/OS and IBM Z from an infrastructure
perspective.


0.1.0 (2022-04-20)
------------------

* First release on PyPI.

0.2.0 (2022-05-02)
----------------------
* Add initial support for CPCs, LPARs, and logical CPUs
* Change minimum python level to 3.7 so I can use dataclasses.  3.6 is EOL anyway.

0.3.0 (2022-05-04)
----------------------
* Add support for PROCVIEW CPU systems

0.3.1 (2022-05-04)
----------------------
* Had conflicting requirements for twine in requirements_dev.txt

0.4.0 (2022-05-10)
----------------------
* Add some additional cpc and lpar fields
* Automate build and publishing to Pypi

0.5.0 (2022-05-25)
----------------------
* Strip out leading spaces from inputs (because sometimes they're getting passed in that way)

0.5.3 (2022-06-13)
----------------------
* Bugfixes

0.6.0 (2023-06-25)
----------------------
* Add initial support for IEE200I (D ASM output)
