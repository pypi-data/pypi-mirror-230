Metadata-Version: 2.1
Name: ticket-ynab-sync
Version: 0.0.1
Summary: Get transactions from ticket food card and sync them with a YNAB account.
Author-email: diogoaos <ticket_ynab_sync@diogoaos.com>
License: MIT License
        
        Copyright (c) 2023, Audrey Roy Greenfeld
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
        
Keywords: api,parser,transactions
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click
Requires-Dist: ynab-api
Requires-Dist: pyticketfood
Provides-Extra: dev
Requires-Dist: black; extra == "dev"
Requires-Dist: bumpver; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: pip-tools; extra == "dev"
Requires-Dist: pytest; extra == "dev"

================
ticket_ynab_sync
================


Sync Ticket transactions with a YNAB account.


# CLI `tys``

Commands:

- `tys init /path/to/db`: initializes a new Sync database (asks for YNAB and Ticket credentials) at the provided path
- `tys info /path/to/db`: displays information about the current state of the provided Sync database
- `tys sync /path/to/db`: runs a sync iteration - 1) get new transactions from Ticket, 2) push them to YNAB
  - `tys sync --period X /path/to/db`: ryns a sync iteration every X minutes
  - `tys sync --hour X /path/to/db`: ryns a sync iteration every X minutes



# TODO

[ ] CLI for configuring Ticket, e..g creds, start sync date, sync period, default category, etc.
[ ] CLI config YNAB, creds, which account to save new transactions to
[ ] init database with Ticket transactions
  [ ] extra: check if Ticket transactions already exist in YNAB account, based on value, description and date; store YNAB transaction id on local database
[ ] push new Ticket transactions (without YNAB id) to YNAB, get YNAB ID, associate ID to Ticket transaction
[ ] create loop for syncing
[ ] OR add to cronjob
[ ] EXTRA: alternative web based GUI to CLI


# Ticket API

https://github.com/diogo-aos/TicketYnacSync
