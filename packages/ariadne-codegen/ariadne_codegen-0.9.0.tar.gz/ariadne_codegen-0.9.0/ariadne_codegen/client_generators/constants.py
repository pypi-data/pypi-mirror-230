from pathlib import Path

SIMPLE_TYPE_MAP = {
    "String": "str",
    "ID": "str",
    "Int": "int",
    "Boolean": "bool",
    "Float": "float",
}

UPLOAD_CLASS_NAME = "Upload"
INPUT_SCALARS_MAP = {**SIMPLE_TYPE_MAP, "Upload": UPLOAD_CLASS_NAME}

OPTIONAL = "Optional"
LIST = "List"
UNION = "Union"
ANY = "Any"
DICT = "Dict"
CALLABLE = "Callable"
ANNOTATED = "Annotated"
LITERAL = "Literal"
ASYNC_ITERATOR = "AsyncIterator"

TIMESTAMP_COMMENT = "# Generated by ariadne-codegen on {}\n"
SOURCE_COMMENT = "# Source: {}\n"
COMMENT_DATETIME_FORMAT = "%Y-%m-%d %H:%M"

BASE_MODEL_CLASS_NAME = "BaseModel"

TYPENAME_FIELD_NAME = "__typename"
TYPENAME_ALIAS = "typename__"

TYPING_MODULE = "typing"
PYDANTIC_MODULE = "pydantic"
FIELD_CLASS = "Field"
ALIAS_KEYWORD = "alias"
DISCRIMINATOR_KEYWORD = "discriminator"
MODEL_REBUILD_METHOD = "model_rebuild"
MODEL_VALIDATE_METHOD = "model_validate"
PLAIN_SERIALIZER = "PlainSerializer"
BEFORE_VALIDATOR = "BeforeValidator"

ENUM_MODULE = "enum"
ENUM_CLASS = "Enum"

MIXIN_NAME = "mixin"
MIXIN_FROM_NAME = "from"
MIXIN_IMPORT_NAME = "import"

SKIP_DIRECTIVE_NAME = "skip"
INCLUDE_DIRECTIVE_NAME = "include"

DEFAULT_ASYNC_BASE_CLIENT_PATH = (
    Path(__file__).parent / "dependencies" / "async_base_client.py"
)
DEFAULT_BASE_CLIENT_PATH = Path(__file__).parent / "dependencies" / "base_client.py"

GRAPHQL_CLIENT_EXCEPTIONS_NAMES = [
    "GraphQLClientError",
    "GraphQLClientHttpError",
    "GraphQlClientInvalidResponseError",
    "GraphQLClientGraphQLError",
    "GraphQLClientGraphQLMultiError",
]

SCALARS_PARSE_DICT_NAME = "SCALARS_PARSE_FUNCTIONS"
SCALARS_SERIALIZE_DICT_NAME = "SCALARS_SERIALIZE_FUNCTIONS"

UNSET_NAME = "UNSET"
UNSET_TYPE_NAME = "UnsetType"
