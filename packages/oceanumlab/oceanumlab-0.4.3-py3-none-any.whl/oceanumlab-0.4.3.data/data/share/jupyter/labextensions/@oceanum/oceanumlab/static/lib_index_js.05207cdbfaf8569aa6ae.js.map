{"version":3,"file":"lib_index_js.05207cdbfaf8569aa6ae.js","mappings":"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Ae,eAAe,qBAAqB,sBAAsB,goBAAgoB,eAAe,eAAe,qBAAqB,sBAAsB,oLAAoL,sFAAsF,oEAAoE,eAAe,qVAAqV,eAAe,yVAAyV,eAAe,kUAAkU,iEAAiE,eAAe,eAAe,qBAAqB,sBAAsB,2NAA2N,eAAe,eAAe,qBAAqB,sBAAsB,4NAA4N,eAAe,eAAe,qBAAqB,sBAAsB,8NAA8N,eAAe,eAAe,qBAAqB,sBAAsB,2nBAA2nB;;;;;;;;;;;;;;;;;;ACA9iM;AACyB;AAC5C,yBAAyB,6DAAW;AAC3C;AACA,gBAAgB,0DAAmB,aAAa,QAAQ,kCAAmB,CAAC,iCAAiC;AAC7G;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNkF;AACrC;AACuB;AAChB;AACP;AACL;AACG;AACjB;AACwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kCAAkC,qBAAqB,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gEAAgE;AAC5G;AACA;AACA,uDAAuD,sBAAsB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,wDAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,iBAAiB;AACjB;AACA,gBAAgB,uDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA,kCAAkC,+DAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uDAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAU;AAC7B;AACA,iEAAiE,eAAe;AAChF,0BAA0B,wDAAM,iBAAiB,wDAAM;AACvD,aAAa;AACb;AACA;AACA;AACA,mBAAmB,gEAAU;AAC7B;AACA;AACA,0BAA0B,wDAAM;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAmB,UAAU,yCAAyC,sBAAsB,0DAAmB;AAC/H,YAAY,0DAAmB,WAAW,sCAAsC;AAChF,YAAY,0DAAmB;AAC/B;AACA;AACA,YAAY,0DAAmB,UAAU,iFAAiF;AAC1H,gBAAgB,0DAAmB,CAAC,2DAAc,IAAI;AACtD;AACA,uBAAuB;AACvB;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+DAAa,kBAAkB;AAClE,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kDAAI;AAC7B,0BAA0B,uDAAQ;AAClC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,oCAAoC,6DAAW;AACtD;AACA;AACA;AACA;AACA,gCAAgC,qDAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAmB,CAAC,uDAAc,sCAAsC,0DAAmB,6BAA6B,gJAAgJ,MAAM,0DAAmB,UAAU,sCAAsC;AACjW,YAAY,0DAAmB,QAAQ,oCAAoC;AAC3E;AACA;AACA;AACA,gBAAgB,0DAAmB,UAAU,+BAA+B;AAC5E,YAAY,0DAAmB,aAAa,sCAAsC;AAClF,gBAAgB,0DAAmB,0BAA0B,yFAAyF;AACtJ,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB,UAAU,8FAA8F,EAAE,0DAAmB,CAAC,8DAAO,UAAU,yCAAyC;AAC3N,YAAY,0DAAmB,CAAC,2DAAS,IAAI,8CAA8C;AAC3F;AACA;;;;;;;;;;;;;;;;;;;;;;ACtRwC;AACkC;AACtB;AACxB;AAC5B;AACA;AACA;AACO,0BAA0B,2CAA2C;AAC5E,yCAAyC,+CAAQ;AACjD;AACA;AACA;AACA,YAAY,0DAAmB,UAAU,mCAAmC;AAC5E,QAAQ,0DAAmB,UAAU,wDAAwD;AAC7F,YAAY,0DAAmB,aAAa,qHAAqH,cAAc,0DAAmB,CAAC,oEAAa,UAAU,uDAAuD,MAAM,0DAAmB,CAAC,qEAAc,UAAU,uDAAuD;AAC1X,YAAY,0DAAmB,WAAW;AAC1C;AACA,mIAAmI;AACnI,YAAY,0DAAmB,aAAa,2GAA2G;AACvJ,gBAAgB,0DAAmB,CAAC,8DAAkB,IAAI,sDAAsD;AAChH,qBAAqB,0DAAmB,UAAU,sCAAsC;AACxF,YAAY,0DAAmB,UAAU,qCAAqC;AAC9E;AACA,gBAAgB,0DAAmB;AACnC,qCAAqC,0DAAmB,UAAU,qCAAqC;AACvG;AACA,gBAAgB,0DAAmB;AACnC,qCAAqC,0DAAmB,UAAU,qCAAqC;AACvG;AACA,gBAAgB,0DAAmB;AACnC,sCAAsC,0DAAmB,UAAU,qCAAqC;AACxG;AACA,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB;AACnC,sCAAsC,0DAAmB,UAAU,qCAAqC;AACxG;AACA,gBAAgB,0DAAmB;AACnC,YAAY,0DAAmB;AAC/B,gBAAgB,0DAAmB,QAAQ,qCAAqC,sBAAsB,qBAAqB;AAC3H;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCsE;AACA;AACvB;AACK;AACX;AACe;AACO;AAChB;AACU;AACf;AACd;AACwB;AACpD,wBAAwB,8DAAO;AAC/B;AACA,YAAY,gEAAU;AACtB,CAAC;AACD;AACA;AACA;AACO;AACP;AACA;AACA;AACA,QAAQ,iEAAe;AACvB,QAAQ,oEAAe;AACvB,QAAQ,+DAAU;AAClB,QAAQ,yEAAgB;AACxB,QAAQ,yDAAQ;AAChB;AACA,eAAe,+DAAa;AAC5B;AACA;AACA;AACA,+BAA+B,kEAAgB;AAC/C,2BAA2B,yDAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wBAAwB,qBAAqB,GAAG;AAC/E,2CAA2C,4BAA4B;AACvE,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gDAAgD,SAAI;AACpD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAI;AACnC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,yCAAyC,oDAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mEAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iEAAe,0BAA0B,EAAC;;;;;;;;;;;;;;;;;;AC7F+C;AACzF,YAAuF;;AAEvF;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,sFAAO;;;;AAIxB,iEAAe,sFAAO,aAAa","sources":["webpack://@oceanum/oceanumlab/./style/index.css","webpack://@oceanum/oceanumlab/./style/icons/oceanum.svg","webpack://@oceanum/oceanumlab/./lib/DatameshUI.js","webpack://@oceanum/oceanumlab/./lib/DatameshWidget.js","webpack://@oceanum/oceanumlab/./lib/DatasourceItem.js","webpack://@oceanum/oceanumlab/./lib/index.js","webpack://@oceanum/oceanumlab/./style/index.css?0140"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".datasource-drag-image {\\n  border: var(--jp-border-width) solid var(--jp-cell-editor-border-color);\\n  width: var(--jp-private-notebook-dragImage-width);\\n  height: var(--jp-private-notebook-dragImage-height);\\n  color: var(--jp-ui-font-color1);\\n  background: var(--jp-layout-color1);\\n}\\n\\n.datamesh-iframe {\\n  width: 98%;\\n  height: 98%;\\n  padding: 5px;\\n}\\n\\n.datamesh-connect {\\n  color: var(--jp-ui-font-color1);\\n  background: var(--jp-layout-color1);\\n  height: 100%;\\n}\\n\\n.datamesh-connect a {\\n  color: var(--jp-content-link-color);\\n}\\n\\n.datamesh-connect-header {\\n  font-weight: bold;\\n  padding: 8px 10px;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.datamesh-connect-header p {\\n  font-weight: bold;\\n}\\n\\n.add-connection {\\n  border-radius: 4px;\\n}\\n\\n.add-connection :hover {\\n  background-color: #ddd;\\n}\\n\\n.datasource-list-item {\\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color2);\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.open-datamesh-ui {\\n  cursor: pointer;\\n}\\n\\n.datamesh-workspace-name {\\n  flex: 0 0 auto;\\n  font-weight: 600;\\n  text-transform: uppercase;\\n  letter-spacing: 1px;\\n  padding: 8px 8px 8px 12px;\\n  margin: 0;\\n  margin-left: 0;\\n  margin-bottom: 10px;\\n  font-size: var(--jp-ui-font-size1);\\n}\\n\\n.datasource-item-expand,\\n.datasource-item-action,\\n.datasource-item-expand.jp-mod-styled {\\n  background-color: transparent;\\n  vertical-align: middle;\\n  padding: 0;\\n  width: 20px;\\n  border: none;\\n}\\n\\n.datasource-item-expand:hover {\\n  cursor: pointer;\\n}\\n\\n.datasource-item-details {\\n  overflow-x: auto;\\n  overflow-y: auto;\\n  display: block;\\n  padding: 5px;\\n  margin: 5px;\\n  border: 1px solid var(--jp-border-color2);\\n  border-radius: 2px;\\n  color: var(--jp-ui-font-color1);\\n  background-color: var(--jp-layout-color1);\\n}\\n\\n.datasource-item-details textarea {\\n  color: var(--jp-ui-font-color1);\\n}\\n\\n.datasource-item-action {\\n  display: inline-flex;\\n  align-self: flex-end;\\n  align-items: center;\\n  height: 100%;\\n  border: none;\\n}\\n\\n.datasource-item-name {\\n  flex-grow: 1;\\n  font-size: var(--jp-ui-font-size1);\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  padding: 4px 0 4px 2px;\\n  line-height: 28px;\\n}\\n\\n.datasource-item-action:hover,\\n.datasource-item-name:hover {\\n  cursor: pointer;\\n}\\n\\n.datasource-item-title {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: row;\\n  padding: 0 4px;\\n  height: 36px;\\n}\\n\\n.datasource-item-title:hover {\\n  background-color: var(--jp-layout-color2);\\n}\\n\\n.datasource-query-field span {\\n  margin-left: 5px;\\n  white-space: nowrap;\\n  font-size: var(--jp-ui-font-size0);\\n}\\n\\n.expanded {\\n  background-color: var(--jp-layout-color2);\\n  padding: 2px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,uEAAuE;EACvE,iDAAiD;EACjD,mDAAmD;EACnD,+BAA+B;EAC/B,mCAAmC;AACrC;;AAEA;EACE,UAAU;EACV,WAAW;EACX,YAAY;AACd;;AAEA;EACE,+BAA+B;EAC/B,mCAAmC;EACnC,YAAY;AACd;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;EACjB,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,mEAAmE;EACnE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,gBAAgB;EAChB,yBAAyB;EACzB,mBAAmB;EACnB,yBAAyB;EACzB,SAAS;EACT,cAAc;EACd,mBAAmB;EACnB,kCAAkC;AACpC;;AAEA;;;EAGE,6BAA6B;EAC7B,sBAAsB;EACtB,UAAU;EACV,WAAW;EACX,YAAY;AACd;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,cAAc;EACd,YAAY;EACZ,WAAW;EACX,yCAAyC;EACzC,kBAAkB;EAClB,+BAA+B;EAC/B,yCAAyC;AAC3C;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,oBAAoB;EACpB,oBAAoB;EACpB,mBAAmB;EACnB,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,kCAAkC;EAClC,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;EACvB,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,aAAa;EACb,mBAAmB;EACnB,cAAc;EACd,YAAY;AACd;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,kCAAkC;AACpC;;AAEA;EACE,yCAAyC;EACzC,YAAY;AACd\",\"sourcesContent\":[\".datasource-drag-image {\\n  border: var(--jp-border-width) solid var(--jp-cell-editor-border-color);\\n  width: var(--jp-private-notebook-dragImage-width);\\n  height: var(--jp-private-notebook-dragImage-height);\\n  color: var(--jp-ui-font-color1);\\n  background: var(--jp-layout-color1);\\n}\\n\\n.datamesh-iframe {\\n  width: 98%;\\n  height: 98%;\\n  padding: 5px;\\n}\\n\\n.datamesh-connect {\\n  color: var(--jp-ui-font-color1);\\n  background: var(--jp-layout-color1);\\n  height: 100%;\\n}\\n\\n.datamesh-connect a {\\n  color: var(--jp-content-link-color);\\n}\\n\\n.datamesh-connect-header {\\n  font-weight: bold;\\n  padding: 8px 10px;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.datamesh-connect-header p {\\n  font-weight: bold;\\n}\\n\\n.add-connection {\\n  border-radius: 4px;\\n}\\n\\n.add-connection :hover {\\n  background-color: #ddd;\\n}\\n\\n.datasource-list-item {\\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color2);\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.open-datamesh-ui {\\n  cursor: pointer;\\n}\\n\\n.datamesh-workspace-name {\\n  flex: 0 0 auto;\\n  font-weight: 600;\\n  text-transform: uppercase;\\n  letter-spacing: 1px;\\n  padding: 8px 8px 8px 12px;\\n  margin: 0;\\n  margin-left: 0;\\n  margin-bottom: 10px;\\n  font-size: var(--jp-ui-font-size1);\\n}\\n\\n.datasource-item-expand,\\n.datasource-item-action,\\n.datasource-item-expand.jp-mod-styled {\\n  background-color: transparent;\\n  vertical-align: middle;\\n  padding: 0;\\n  width: 20px;\\n  border: none;\\n}\\n\\n.datasource-item-expand:hover {\\n  cursor: pointer;\\n}\\n\\n.datasource-item-details {\\n  overflow-x: auto;\\n  overflow-y: auto;\\n  display: block;\\n  padding: 5px;\\n  margin: 5px;\\n  border: 1px solid var(--jp-border-color2);\\n  border-radius: 2px;\\n  color: var(--jp-ui-font-color1);\\n  background-color: var(--jp-layout-color1);\\n}\\n\\n.datasource-item-details textarea {\\n  color: var(--jp-ui-font-color1);\\n}\\n\\n.datasource-item-action {\\n  display: inline-flex;\\n  align-self: flex-end;\\n  align-items: center;\\n  height: 100%;\\n  border: none;\\n}\\n\\n.datasource-item-name {\\n  flex-grow: 1;\\n  font-size: var(--jp-ui-font-size1);\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  padding: 4px 0 4px 2px;\\n  line-height: 28px;\\n}\\n\\n.datasource-item-action:hover,\\n.datasource-item-name:hover {\\n  cursor: pointer;\\n}\\n\\n.datasource-item-title {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: row;\\n  padding: 0 4px;\\n  height: 36px;\\n}\\n\\n.datasource-item-title:hover {\\n  background-color: var(--jp-layout-color2);\\n}\\n\\n.datasource-query-field span {\\n  margin-left: 5px;\\n  white-space: nowrap;\\n  font-size: var(--jp-ui-font-size0);\\n}\\n\\n.expanded {\\n  background-color: var(--jp-layout-color2);\\n  padding: 2px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"44\\\" height=\\\"44\\\" viewBox=\\\"0 0 44.079582 44.079582\\\" version=\\\"1.1\\\" id=\\\"svg5870\\\">\\n  <g\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-82.281595,-124.52568)\\\">\\n    <g\\n       style=\\\"stroke:#3b547c;stroke-opacity:1\\\"\\n       transform=\\\"matrix(0.26458333,0,0,0.26458333,69.475762,109.81485)\\\"\\n       id=\\\"g2915\\\"\\n       >\\n      <g\\n         style=\\\"stroke:#3b547c;stroke-opacity:1\\\"\\n         id=\\\"g2903\\\">\\n        <path\\n           id=\\\"path2897\\\"\\n           d=\\\"m 212.3,149.9 c -35.8,19.1 -58.2,-11 -80.6,-11 -22.4,0 -44.7,30.1 -80.6,11 1.2,8.7 3.8,17.2 7.7,25.1 38.7,13.5 55.8,-8.4 72.9,-8.4 17.1,0 34.1,22 72.9,8.4 3.9,-7.9 6.5,-16.3 7.7,-25.1 z\\\"\\n           class=\\\"st8\\\"\\n           \\n           style=\\\"fill:#dce1f9;stroke:#3b547c;stroke-opacity:1\\\" />\\n        <path\\n           id=\\\"path2899\\\"\\n           d=\\\"m 204.6,175 c -38.7,13.5 -55.8,-8.4 -72.9,-8.4 -17.1,0 -34.1,22 -72.9,8.4 4.4,8.9 10.4,16.9 17.7,23.6 31.1,6.8 43.1,-6.5 55.2,-6.5 12.1,0 24.1,13.3 55.2,6.5 7.3,-6.7 13.3,-14.7 17.7,-23.6 z\\\"\\n           class=\\\"st8\\\"\\n           \\n           style=\\\"fill:#dce1f9;stroke:#3b547c;stroke-opacity:1\\\" />\\n        <path\\n           id=\\\"path2901\\\"\\n           d=\\\"m 76.5,198.7 c 31.1,6.8 43.1,-6.5 55.2,-6.5 12.1,0 24.1,13.3 55.2,6.5 -15,13.9 -34.7,21.6 -55.2,21.6 -20.4,-0.1 -40.2,-7.8 -55.2,-21.6 z\\\"\\n           class=\\\"st8\\\"\\n           \\n           style=\\\"fill:#dce1f9;stroke:#3b547c;stroke-opacity:1\\\" />\\n      </g>\\n      <g\\n         style=\\\"stroke:#3b547c;stroke-opacity:1\\\"\\n         id=\\\"g2913\\\">\\n        <path\\n           id=\\\"path2905\\\"\\n           d=\\\"m 58.8,175 c 38.7,13.5 55.8,-8.4 72.9,-8.4 17.1,0 34.1,22 72.9,8.4\\\"\\n           class=\\\"st9\\\"\\n           \\n           style=\\\"fill:none;stroke:#3b547c;stroke-width:4;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1\\\" />\\n        <path\\n           id=\\\"path2907\\\"\\n           d=\\\"m 51.1,149.9 c 35.8,19.1 58.2,-11 80.6,-11 22.4,0 44.7,30.1 80.6,11\\\"\\n           class=\\\"st9\\\"\\n           \\n           style=\\\"fill:none;stroke:#3b547c;stroke-width:4;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1\\\" />\\n        <path\\n           id=\\\"path2909\\\"\\n           d=\\\"m 76.5,198.7 c 31.1,6.8 43.1,-6.5 55.2,-6.5 12.1,0 24.1,13.3 55.2,6.5\\\"\\n           class=\\\"st9\\\"\\n           \\n           style=\\\"fill:none;stroke:#3b547c;stroke-width:4;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1\\\" />\\n        <path\\n           id=\\\"path2911\\\"\\n           d=\\\"m 131.7,220.2 c 10.3,0 20.4,-1.9 29.9,-5.7 10.3,-4.1 19.7,-10.2 27.6,-18.1 7.9,-7.9 14,-17.2 18.1,-27.6 3.8,-9.5 5.7,-19.7 5.7,-29.9 0,-10.3 -1.9,-20.4 -5.7,-29.9 -4.1,-10.3 -10.2,-19.7 -18.1,-27.6 -7.9,-7.9 -17.2,-14 -27.6,-18.1 -9.5,-3.8 -19.7,-5.7 -29.9,-5.7 -10.3,0 -20.4,1.9 -29.9,5.7 -10.3,4.1 -19.7,10.2 -27.6,18.1 -7.9,7.9 -14,17.2 -18.1,27.6 -3.8,9.5 -5.7,19.7 -5.7,29.9 0,10.3 1.9,20.4 5.7,29.9 4.1,10.3 10.2,19.7 18.1,27.6 7.9,7.9 17.2,14 27.6,18.1 9.5,3.8 19.6,5.7 29.9,5.7 z\\\"\\n           class=\\\"st9\\\"\\n           \\n           style=\\\"fill:none;stroke:#3b547c;stroke-width:4;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1\\\" />\\n      </g>\\n    </g>\\n    <g\\n       id=\\\"g3308\\\"\\n       transform=\\\"matrix(0.26458333,0,0,0.26458333,69.475762,109.81485)\\\"\\n       style=\\\"stroke:#3b547c;stroke-opacity:1\\\">\\n      <g\\n         id=\\\"g3296\\\"\\n         style=\\\"stroke:#3b547c;stroke-opacity:1\\\">\\n        <path\\n           style=\\\"fill:#dce1f9;stroke:#3b547c;stroke-opacity:1\\\"\\n           \\n           class=\\\"st8\\\"\\n           d=\\\"m 212.3,149.9 c -35.8,19.1 -58.2,-11 -80.6,-11 -22.4,0 -44.7,30.1 -80.6,11 1.2,8.7 3.8,17.2 7.7,25.1 38.7,13.5 55.8,-8.4 72.9,-8.4 17.1,0 34.1,22 72.9,8.4 3.9,-7.9 6.5,-16.3 7.7,-25.1 z\\\"\\n           id=\\\"path3290\\\" />\\n        <path\\n           style=\\\"fill:#dce1f9;stroke:#3b547c;stroke-opacity:1\\\"\\n           \\n           class=\\\"st8\\\"\\n           d=\\\"m 204.6,175 c -38.7,13.5 -55.8,-8.4 -72.9,-8.4 -17.1,0 -34.1,22 -72.9,8.4 4.4,8.9 10.4,16.9 17.7,23.6 31.1,6.8 43.1,-6.5 55.2,-6.5 12.1,0 24.1,13.3 55.2,6.5 7.3,-6.7 13.3,-14.7 17.7,-23.6 z\\\"\\n           id=\\\"path3292\\\" />\\n        <path\\n           style=\\\"fill:#dce1f9;stroke:#3b547c;stroke-opacity:1\\\"\\n           \\n           class=\\\"st8\\\"\\n           d=\\\"m 76.5,198.7 c 31.1,6.8 43.1,-6.5 55.2,-6.5 12.1,0 24.1,13.3 55.2,6.5 -15,13.9 -34.7,21.6 -55.2,21.6 -20.4,-0.1 -40.2,-7.8 -55.2,-21.6 z\\\"\\n           id=\\\"path3294\\\" />\\n      </g>\\n      <g\\n         id=\\\"g3306\\\"\\n         style=\\\"stroke:#3b547c;stroke-opacity:1\\\">\\n        <path\\n           style=\\\"fill:none;stroke:#3b547c;stroke-width:4;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1\\\"\\n           \\n           class=\\\"st9\\\"\\n           d=\\\"m 58.8,175 c 38.7,13.5 55.8,-8.4 72.9,-8.4 17.1,0 34.1,22 72.9,8.4\\\"\\n           id=\\\"path3298\\\" />\\n        <path\\n           style=\\\"fill:none;stroke:#3b547c;stroke-width:4;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1\\\"\\n           \\n           class=\\\"st9\\\"\\n           d=\\\"m 51.1,149.9 c 35.8,19.1 58.2,-11 80.6,-11 22.4,0 44.7,30.1 80.6,11\\\"\\n           id=\\\"path3300\\\" />\\n        <path\\n           style=\\\"fill:none;stroke:#3b547c;stroke-width:4;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1\\\"\\n           \\n           class=\\\"st9\\\"\\n           d=\\\"m 76.5,198.7 c 31.1,6.8 43.1,-6.5 55.2,-6.5 12.1,0 24.1,13.3 55.2,6.5\\\"\\n           id=\\\"path3302\\\" />\\n        <path\\n           style=\\\"fill:none;stroke:#3b547c;stroke-width:4;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1\\\"\\n           \\n           class=\\\"st9\\\"\\n           d=\\\"m 131.7,220.2 c 10.3,0 20.4,-1.9 29.9,-5.7 10.3,-4.1 19.7,-10.2 27.6,-18.1 7.9,-7.9 14,-17.2 18.1,-27.6 3.8,-9.5 5.7,-19.7 5.7,-29.9 0,-10.3 -1.9,-20.4 -5.7,-29.9 -4.1,-10.3 -10.2,-19.7 -18.1,-27.6 -7.9,-7.9 -17.2,-14 -27.6,-18.1 -9.5,-3.8 -19.7,-5.7 -29.9,-5.7 -10.3,0 -20.4,1.9 -29.9,5.7 -10.3,4.1 -19.7,10.2 -27.6,18.1 -7.9,7.9 -14,17.2 -18.1,27.6 -3.8,9.5 -5.7,19.7 -5.7,29.9 0,10.3 1.9,20.4 5.7,29.9 4.1,10.3 10.2,19.7 18.1,27.6 7.9,7.9 17.2,14 27.6,18.1 9.5,3.8 19.6,5.7 29.9,5.7 z\\\"\\n           id=\\\"path3304\\\" />\\n      </g>\\n    </g>\\n  </g>\\n</svg>\\n\";","import React from 'react';\nimport { ReactWidget } from '@jupyterlab/apputils';\nexport class DatameshUI extends ReactWidget {\n    render() {\n        return (React.createElement(\"iframe\", { src: `${DATAMESH_UI_SERVICE}`, className: \"datamesh-iframe\" }));\n    }\n}\n","import { Dialog, ReactWidget, UseSignal, showDialog } from '@jupyterlab/apputils';\nimport { CodeCell } from '@jupyterlab/cells';\nimport { NotebookModel, NotebookPanel } from '@jupyterlab/notebook';\nimport { addIcon } from '@jupyterlab/ui-components';\nimport { MimeData } from '@lumino/coreutils';\nimport { Drag } from '@lumino/dragdrop';\nimport { Signal } from '@lumino/signaling';\nimport React from 'react';\nimport { DatasourceItem } from './DatasourceItem';\nconst JUPYTER_CELL_MIME = 'application/vnd.jupyter.cells';\nconst datameshToken = (notebook) => {\n    const datameshTokenInjected = notebook &&\n        notebook.widgets.find(cell => {\n            if (cell.editor) {\n                const line = cell.editor.getLine(0);\n                if (line && line.indexOf('DATAMESH_TOKEN=') >= 0) {\n                    return true;\n                }\n            }\n        });\n    if (!datameshTokenInjected) {\n        return `DATAMESH_TOKEN='${window.datameshToken}';`;\n    }\n    else {\n        return '';\n    }\n};\nconst datasourceCode = (datasource, notebook, icell) => {\n    const datameshImport = notebook &&\n        notebook.widgets.find(cell => {\n            if (cell.editor) {\n                let found = false;\n                for (let i = 0; i < icell; i++) {\n                    const line = cell.editor.getLine(i);\n                    if (line &&\n                        line.indexOf('from oceanum.datamesh import Connector') >= 0) {\n                        found = true;\n                        break;\n                    }\n                }\n                return found;\n            }\n        });\n    let datasourceStr = datasource.datasource.replace(/[\\s-.]/g, '_');\n    const tokenString = window.injectToken ? 'token=DATAMESH_TOKEN' : '';\n    if (datasource.variables ||\n        datasource.geofilter ||\n        datasource.timefilter ||\n        datasource.spatialref) {\n        datasourceStr += `=datamesh.query(${JSON.stringify(datasource, null, '  ').replace(/null/g, 'None')})`;\n    }\n    else {\n        datasourceStr += `=datamesh.load_datasource('${datasource.datasource}')`;\n    }\n    if (!datameshImport) {\n        datasourceStr =\n            'from oceanum.datamesh import Connector' +\n                '\\n' +\n                '#Put your datamesh token in the Jupyterlab settings, or as argument in the constructor below' +\n                '\\n' +\n                `datamesh=Connector(${tokenString})` +\n                '\\n' +\n                datasourceStr;\n    }\n    return datasourceStr;\n};\nclass DatameshWorkspaceDisplay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.injectToken = (notebookWidget) => {\n            const notebookContent = notebookWidget.content;\n            const datameshTokenInject = datameshToken(notebookContent);\n            if (datameshTokenInject) {\n                const tokenCell = notebookContent.model.contentFactory.createCodeCell({\n                    cell: {\n                        cell_type: 'code',\n                        source: datameshTokenInject,\n                        metadata: { tags: ['hide_input'] }\n                    }\n                });\n                notebookContent.model.cells.insert(0, tokenCell);\n                CodeCell.execute(notebookContent.widgets[0], notebookWidget.sessionContext);\n            }\n        };\n        // Handle code datasource insert into an editor\n        this.insertDatameshConnect = async (datasource) => {\n            const widget = this.props.getCurrentWidget();\n            if (widget instanceof NotebookPanel) {\n                const notebookWidget = widget;\n                const notebookContent = notebookWidget.content;\n                const notebookCell = notebookContent.activeCell;\n                const notebookCellIndex = notebookContent.activeCellIndex;\n                const notebookCellEditor = notebookCell.editor;\n                const datasourceStr = datasourceCode(datasource, notebookContent, notebookCellIndex);\n                if (notebookCell instanceof CodeCell) {\n                    this.verifyLanguageAndInsert(datasourceStr, 'python', notebookCellEditor);\n                }\n                else {\n                    notebookCellEditor.replaceSelection(datasourceStr);\n                }\n                if (window.injectToken) {\n                    this.injectToken(notebookWidget);\n                }\n            }\n            else {\n                this.showErrDialog('Datamesh datasource insert failed: Please select code cell');\n            }\n        };\n        // Handle language compatibility between code datasource and editor\n        this.verifyLanguageAndInsert = async (datasourceStr, editorLanguage, editor) => {\n            if (editorLanguage && 'python' !== editorLanguage.toLowerCase()) {\n                const result = await this.showWarnDialog(editorLanguage);\n                if (result.button.accept) {\n                    editor.replaceSelection(datasourceStr);\n                }\n            }\n            else {\n                // Language match or editorLanguage is unavailable\n                editor.replaceSelection(datasourceStr);\n            }\n        };\n        // Display warning dialog when inserting a code datasource incompatible with editor's language\n        this.showWarnDialog = async (editorLanguage) => {\n            return showDialog({\n                title: 'Warning',\n                body: `Datamesh connector is incompatible with ${editorLanguage}. Continue?`,\n                buttons: [Dialog.cancelButton(), Dialog.okButton()]\n            });\n        };\n        // Display error dialog when inserting a code datasource into unsupported widget (i.e. not an editor)\n        this.showErrDialog = (errMsg) => {\n            return showDialog({\n                title: 'Error',\n                body: errMsg,\n                buttons: [Dialog.okButton()]\n            });\n        };\n        this._drag = null;\n        this._dragData = null;\n        this.handleDragMove = this.handleDragMove.bind(this);\n        this._evtMouseUp = this._evtMouseUp.bind(this);\n    }\n    render() {\n        return (React.createElement(\"div\", { className: 'datamesh-workspace-display' }, this.props.spec && (React.createElement(\"div\", null,\n            React.createElement(\"span\", { className: \"datamesh-workspace-name\" }, this.props.spec.name),\n            React.createElement(\"hr\", null),\n            this.props.spec.data.map(datasource => (\n            // Render display of a code datasource\n            React.createElement(\"div\", { key: datasource.id, \"data-item-id\": datasource.id, className: 'datasource-item' },\n                React.createElement(DatasourceItem, { datasource: datasource, insertDatasource: this.insertDatameshConnect, onMouseDown: (event) => {\n                        this.handleDragSnippet(event, datasource);\n                    } }))))))));\n    }\n    // Initial setup to handle dragging a code datasource\n    handleDragSnippet(event, datasource) {\n        const { button } = event;\n        // do nothing if left mouse button is clicked\n        if (button !== 0) {\n            return;\n        }\n        this._dragData = {\n            pressX: event.clientX,\n            pressY: event.clientY,\n            dragImage: null\n        };\n        const mouseUpListener = (event) => {\n            this._evtMouseUp(event, datasource, mouseMoveListener);\n        };\n        const mouseMoveListener = (event) => {\n            this.handleDragMove(event, datasource, mouseMoveListener, mouseUpListener);\n        };\n        const target = event.target;\n        target.addEventListener('mouseup', mouseUpListener, {\n            once: true,\n            capture: true\n        });\n        target.addEventListener('mousemove', mouseMoveListener, true);\n        // since a browser has its own drag'n'drop support for images and some other elements.\n        target.ondragstart = () => false;\n    }\n    _evtMouseUp(event, datasource, mouseMoveListener) {\n        event.preventDefault();\n        event.stopPropagation();\n        const target = event.target;\n        target.removeEventListener('mousemove', mouseMoveListener, true);\n    }\n    handleDragMove(event, datasource, mouseMoveListener, mouseUpListener) {\n        event.preventDefault();\n        event.stopPropagation();\n        const data = this._dragData;\n        if (data &&\n            this.shouldStartDrag(data.pressX, data.pressY, event.clientX, event.clientY)) {\n            // Create drag image\n            const element = document.createElement('div');\n            element.innerHTML = datasource.description;\n            element.classList.add('datasource-drag-image');\n            data.dragImage = element;\n            // Remove mouse listeners and start the drag.\n            const target = event.target;\n            target.removeEventListener('mousemove', mouseMoveListener, true);\n            target.removeEventListener('mouseup', mouseUpListener, true);\n            void this.startDrag(data.dragImage, datasource, event.clientX, event.clientY);\n        }\n    }\n    /**\n     * Detect if a drag event should be started. This is down if the\n     * mouse is moved beyond a certain distance (DRAG_THRESHOLD).\n     *\n     * @param prevX - X Coordinate of the mouse pointer during the mousedown event\n     * @param prevY - Y Coordinate of the mouse pointer during the mousedown event\n     * @param nextX - Current X Coordinate of the mouse pointer\n     * @param nextY - Current Y Coordinate of the mouse pointer\n     */\n    shouldStartDrag(prevX, prevY, nextX, nextY) {\n        const dx = Math.abs(nextX - prevX);\n        const dy = Math.abs(nextY - prevY);\n        return dx >= 0 || dy >= 5;\n    }\n    async startDrag(dragImage, datasource, clientX, clientY) {\n        const contentFactory = new NotebookModel.ContentFactory({});\n        const model = contentFactory.createCodeCell({});\n        let content = datasourceCode(datasource, null, 0);\n        if (window.injectToken) {\n            const notebookPanel = this.props.getCurrentWidget();\n            content = datameshToken(notebookPanel.content) + '\\n' + content;\n        }\n        model.value.text = content;\n        this._drag = new Drag({\n            mimeData: new MimeData(),\n            dragImage: dragImage,\n            supportedActions: 'copy-move',\n            proposedAction: 'copy',\n            source: this\n        });\n        const selected = [model.toJSON()];\n        this._drag.mimeData.setData(JUPYTER_CELL_MIME, selected);\n        this._drag.mimeData.setData('text/plain', datasource.description);\n        return this._drag.start(clientX, clientY).then(() => {\n            this._drag = null;\n            this._dragData = null;\n        });\n    }\n}\n/**\n * A widget for Datamesh Connections.\n */\nexport class DatameshConnectWidget extends ReactWidget {\n    constructor(props) {\n        super();\n        this.datameshWorkspaceSpec = null;\n        this.props = props;\n        this.renderSignal = new Signal(this);\n        this.renderDisplay = this.renderDisplay.bind(this);\n        window.addEventListener('message', this.receiveIFrameMessage.bind(this), false);\n    }\n    receiveIFrameMessage(event) {\n        if (event.data && event.data.action === 'workspace-modify') {\n            this.datameshWorkspaceSpec = {\n                id: event.data.id,\n                name: event.data.name,\n                data: event.data.data\n            };\n            this.renderSignal.emit(this.datameshWorkspaceSpec);\n        }\n    }\n    renderDisplay(datameshWorkspace) {\n        return (React.createElement(React.Fragment, null, this.datameshWorkspaceSpec ? (React.createElement(DatameshWorkspaceDisplay, { spec: datameshWorkspace, openDatameshUI: this.props.openDatameshUI, getCurrentWidget: this.props.getCurrentWidget, shell: this.props.app.shell })) : (React.createElement(\"div\", { className: \"datasource-item-details\" },\n            React.createElement(\"a\", { onClick: this.props.openDatameshUI }, \"Open\"),\n            \" the Oceanum datamesh UI to add datasources. You will need to allow popups on this page if you are not already logged in to Oceanum.io.\"))));\n    }\n    render() {\n        return (React.createElement(\"div\", { className: 'datamesh-connect' },\n            React.createElement(\"header\", { className: 'datamesh-connect-header' },\n                React.createElement(this.props.icon.react, { tag: \"span\", width: \"auto\", height: \"24px\", verticalAlign: \"middle\", marginRight: \"5px\" }),\n                React.createElement(\"p\", null, \" Datamesh workspace \"),\n                React.createElement(\"div\", { className: \"open-datamesh-ui\", onClick: this.props.openDatameshUI, title: 'Open Datamesh UI' }, React.createElement(addIcon.react, { height: \"24px\", verticalAlign: \"middle\" }))),\n            React.createElement(UseSignal, { signal: this.renderSignal, initialArgs: null }, (_, datameshWorkspace) => this.renderDisplay(datameshWorkspace))));\n    }\n}\n","import React, { useState } from 'react';\nimport { caretDownIcon, caretRightIcon } from '@jupyterlab/ui-components';\nimport { ArrowBendDownRight } from 'phosphor-react';\nimport '../style/index.css';\n/**\n * A React component for expandable containers.\n */\nexport const DatasourceItem = ({ datasource, insertDatasource, onMouseDown }) => {\n    const [expanded, setExpandedValue] = useState(false);\n    const handleToggleExpand = () => {\n        setExpandedValue(!expanded);\n    };\n    return (React.createElement(\"div\", { className: expanded && 'expanded' },\n        React.createElement(\"div\", { key: datasource.id, className: \"datasource-item-title\" },\n            React.createElement(\"button\", { title: expanded ? 'Hide Details' : 'Show Details', onClick: handleToggleExpand, className: \"datasource-item-expand\" }, expanded ? (React.createElement(caretDownIcon.react, { tag: \"span\", elementPosition: \"center\", width: \"20px\" })) : (React.createElement(caretRightIcon.react, { tag: \"span\", elementPosition: \"center\", width: \"20px\" }))),\n            React.createElement(\"span\", { title: datasource.description, className: onMouseDown\n                    ? 'datasource-item-name'\n                    : 'datasource-item-name draggable', onClick: handleToggleExpand, onMouseDown: e => onMouseDown(e, datasource) }, datasource.description),\n            React.createElement(\"button\", { title: \"Insert code to load datasource\", onClick: handleToggleExpand, className: \"datasource-item-action\" },\n                React.createElement(ArrowBendDownRight, { size: 18, onClick: e => insertDatasource(datasource) }))),\n        expanded && (React.createElement(\"div\", { className: 'datasource-item-details' },\n            React.createElement(\"div\", { className: \"datasource-query-field\" },\n                \"Datasource id: \",\n                React.createElement(\"span\", null, datasource.datasource)),\n            datasource.geofilter && (React.createElement(\"div\", { className: \"datasource-query-field\" },\n                \"Geofilter type:\",\n                React.createElement(\"span\", null, datasource.geofilter.type))),\n            datasource.variables && (React.createElement(\"div\", { className: \"datasource-query-field\" },\n                \"Variables:\",\n                React.createElement(\"span\", null, datasource.variables.join(',')))),\n            datasource.timefilter && (React.createElement(\"div\", { className: \"datasource-query-field\" },\n                \"Timefilter:\",\n                React.createElement(\"span\", null, datasource.timefilter.times[0]),\n                React.createElement(\"span\", null, \"to\"),\n                React.createElement(\"span\", null, datasource.timefilter.times[1]))),\n            datasource.spatialref && (React.createElement(\"div\", { className: \"datasource-query-field\" },\n                \"Spatial ref:\",\n                React.createElement(\"span\", null, datasource.spatialref))),\n            React.createElement(\"div\", null,\n                React.createElement(\"a\", { href: `https://oceanum.io/datasets/${datasource.datasource}`, target: \"_blank\" }, \"Datasource details\"))))));\n};\n","import { ILayoutRestorer, ILabStatus } from '@jupyterlab/application';\nimport { ICommandPalette, IThemeManager } from '@jupyterlab/apputils';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { find } from '@lumino/algorithm';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { IStateDB } from '@jupyterlab/statedb';\nimport { DatameshConnectWidget } from './DatameshWidget';\nimport { DatameshUI } from './DatameshUI';\nimport '../style/index.css';\nimport oceanumSvg from '../style/icons/oceanum.svg';\nconst oceanumIcon = new LabIcon({\n    name: 'oceanum:main',\n    svgstr: oceanumSvg\n});\n/**\n * Initialization data for the extension.\n */\nexport const datamesh_connect_extension = {\n    id: 'datamesh-connect',\n    autoStart: true,\n    requires: [\n        ICommandPalette,\n        ILayoutRestorer,\n        ILabStatus,\n        ISettingRegistry,\n        IStateDB\n    ],\n    optional: [IThemeManager],\n    activate: (app, palette, restorer, status, settingRegistry, themeManager) => {\n        console.log('Oceanum datamesh connect extension is loaded');\n        //Try to get the datamesh token from the settings\n        const serversettings = ServerConnection.makeSettings();\n        const requestUrl = URLExt.join(serversettings.baseUrl, 'oceanum', 'env');\n        const updateSettings = (set) => {\n            const token = set.get('datameshToken');\n            if (token && token.user) {\n                window.datameshToken = token.user;\n                fetch(requestUrl + '/', {\n                    method: 'POST',\n                    headers: { authorization: `Token ${serversettings.token}` },\n                    body: JSON.stringify({ DATAMESH_TOKEN: token.user })\n                }).then(res => console.log(res));\n            }\n            window.injectToken = set.get('injectToken').user;\n        };\n        //Try to get the datamesh token from the envars\n        settingRegistry.load('@oceanum/oceanumlab:plugin').then(set => {\n            set.changed.connect(updateSettings, this);\n            updateSettings(set);\n        });\n        const getCurrentWidget = () => {\n            return app.shell.currentWidget;\n        };\n        const openDatameshUI = (event) => {\n            const widgetId = 'datamesh-ui';\n            const openWidget = find(app.shell.widgets('main'), (widget, index) => {\n                return widget.id === widgetId;\n            });\n            if (openWidget) {\n                app.shell.activateById(widgetId);\n                return;\n            }\n            const datameshUIWidget = new DatameshUI();\n            datameshUIWidget.title.label = 'Oceanum Datamesh';\n            datameshUIWidget.id = widgetId;\n            datameshUIWidget.title.closable = true;\n            datameshUIWidget.title.icon = oceanumIcon;\n            datameshUIWidget.addClass('datamesh-ui');\n            app.shell.add(datameshUIWidget, 'main');\n        };\n        const datameshConnectWidget = new DatameshConnectWidget({\n            app,\n            name: 'Datamesh Connect',\n            icon: oceanumIcon,\n            openDatameshUI: openDatameshUI,\n            getCurrentWidget\n        });\n        datameshConnectWidget.id = 'datamesh-connect';\n        datameshConnectWidget.title.icon = oceanumIcon;\n        datameshConnectWidget.title.caption = 'Datamesh Connect';\n        restorer.add(datameshConnectWidget, 'datamesh-connect');\n        // Rank has been chosen somewhat arbitrarily to give priority to the running\n        // sessions widget in the sidebar.\n        app.shell.add(datameshConnectWidget, 'left', { rank: 900 });\n        app.commands.addCommand('datamesh-ui:open', {\n            execute: (args) => {\n                openDatameshUI(args);\n            }\n        });\n    }\n};\nexport default datamesh_connect_extension;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}