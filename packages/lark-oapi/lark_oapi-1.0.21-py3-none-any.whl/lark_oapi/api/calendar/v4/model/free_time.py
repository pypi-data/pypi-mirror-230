# Code generated by Lark OpenAPI.

from typing import Optional

from lark_oapi.core.construct import init


class FreeTime(object):
    _types = {
        "free_time_start": str,
        "free_time_end": str,
    }

    def __init__(self, d=None):
        self.free_time_start: Optional[str] = None
        self.free_time_end: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "FreeTimeBuilder":
        return FreeTimeBuilder()


class FreeTimeBuilder(object):
    def __init__(self) -> None:
        self._free_time = FreeTime()

    def free_time_start(self, free_time_start: str) -> "FreeTimeBuilder":
        self._free_time.free_time_start = free_time_start
        return self

    def free_time_end(self, free_time_end: str) -> "FreeTimeBuilder":
        self._free_time.free_time_end = free_time_end
        return self

    def build(self) -> "FreeTime":
        return self._free_time
