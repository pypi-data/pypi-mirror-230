# Code generated by Lark OpenAPI.

from typing import Optional

from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify
from ..model.create_ticket_message_request import CreateTicketMessageRequest
from ..model.create_ticket_message_response import CreateTicketMessageResponse
from ..model.list_ticket_message_request import ListTicketMessageRequest
from ..model.list_ticket_message_response import ListTicketMessageResponse


class TicketMessage(object):
    def __init__(self, config: Config) -> None:
        self.config: Config = config

    def create(self, request: CreateTicketMessageRequest,
               option: Optional[RequestOption] = None) -> CreateTicketMessageResponse:
        if option is None:
            option = RequestOption()

        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateTicketMessageResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateTicketMessageResponse)
        response.raw = resp

        return response

    def list(self, request: ListTicketMessageRequest,
             option: Optional[RequestOption] = None) -> ListTicketMessageResponse:
        if option is None:
            option = RequestOption()

        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListTicketMessageResponse = JSON.unmarshal(str(resp.content, UTF_8), ListTicketMessageResponse)
        response.raw = resp

        return response
