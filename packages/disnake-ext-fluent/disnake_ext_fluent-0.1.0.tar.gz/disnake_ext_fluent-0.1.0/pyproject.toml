[project]
name = "disnake-ext-fluent"
description = "Path to high-quality bot translations, opened."
authors = [
    { name = "elenakrittik", email = "dev.elenakrittik@gmail.com" },
]
dependencies = [
    "disnake==2.9.*",
    "fluent-runtime>=0.4.0",
    "typing-extensions>=4.7.1",
]
requires-python = ">=3.8"
readme = "README.md"
dynamic = []
keywords = [
    "disnake",
    "disnake.ext",
    "discord",
    "fluent",
    "projectfluent",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Localization",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]
version = "0.1.0"

[project.license]
text = "LGPL-3.0-only"

[project.urls]
Repository = "https://github.com/disnake-era/disnake-ext-fluent"
Documentation = "https://disnake-ext-fluent.readthedocs.io/"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm.dev-dependencies]
dev = [
    "pre-commit>=3.3.3",
]
type-check = [
    "pyright>=1.1.324",
]
lint = [
    "ruff>=0.0.286",
]
format = [
    "yapf>=0.40.1",
]
docs = [
    "Sphinx>=7.1.2",
    "sphinxcontrib-trio>=1.1.2",
    "sphinx-autobuild>=2021.3.14",
    "sphinxcontrib-towncrier>=0.3.2a0",
    "sphinx-rtd-theme>=1.3.0",
]

[tool.pdm.version]
source = "file"
path = "disnake/ext/fluent/__init__.py"

[tool.pdm.scripts.format]
composite = [
    "yapf disnake --recursive --in-place",
    "yapf docs --recursive --in-place",
    "yapf example --recursive --diff",
]
help = "Run yapf"

[tool.pdm.scripts.docs]
cmd = "sphinx-autobuild docs docs/_build/html"
help = "Run Sphinx documentation server"

[tool.pdm.scripts.lint]
cmd = "ruff ./disnake ./docs ./example"
help = "Run ruff"

[tool.pdm.scripts.pyright]
cmd = "pyright disnake docs example"
help = "Run pyright"

[tool.pdm.scripts.yapf_check]
composite = [
    "yapf disnake --recursive --diff",
    "yapf docs --recursive --diff",
    "yapf example --recursive --diff",
]

[tool.pdm.scripts.setup_env]
cmd = "pdm install -d -G:all"
help = "Set up the local environment and all dependencies"

[tool.pdm.scripts.post_setup_env]
cmd = "pre-commit install --install-hooks"

[tool.pdm.options]
install = [
    "--no-editable",
]
add = [
    "--no-editable",
]
remove = [
    "--no-editable",
]
sync = [
    "--no-editable",
]
update = [
    "--no-editable",
]

[tool.pdm.build]
includes = [
    "disnake/ext/fluent",
]
source-includes = [
    "LICENSE",
    "README.md",
]

[tool.pyright]
typeCheckingMode = "strict"
reportUnnecessaryTypeIgnoreComment = true
reportMissingTypeStubs = false
venvPath = "."
venv = ".venv"
pythonVersion = "3.8"

[tool.yapf]
based_on_style = "pep8"
column_limit = 100
spaces_around_default_or_named_assign = true
spaces_around_dict_delimiters = true
spaces_before_comment = 2
split_before_dot = true

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "F",
    "E",
    "W",
    "D2",
    "D4",
    "ANN",
    "ASYNC",
    "S",
    "B",
    "COM",
    "C4",
    "DTZ",
    "EM",
    "PIE",
    "Q",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "TCH",
    "TD",
    "ERA",
    "PGH",
    "PL",
    "TRY",
    "FLY",
    "PERF",
    "RUF",
]
ignore = [
    "D203",
    "D213",
    "RET503",
    "F403",
    "EM101",
    "EM102",
    "TRY003",
    "B028",
]

[tool.ruff.per-file-ignores]
"example/main.py" = [
    "DTZ011",
]

[tool.towncrier]
directory = "changelogs"
package = "disnake.ext.fluent"
filename = "docs/changelog.rst"
template = "changelogs/_template.rst.jinja"
title_format = false
underlines = "-~"
issue_format = ":issue:`{issue}`"
type = [
    { directory = "breaking", name = "Breaking Changes", showcontent = true },
    { directory = "deprecate", name = "Deprecations", showcontent = true },
    { directory = "feat", name = "New Features", showcontent = true },
    { directory = "fix", name = "Bug Fixes", showcontent = true },
    { directory = "docs", name = "Documentation", showcontent = true },
    { directory = "misc", name = "Miscellaneous", showcontent = true },
]
