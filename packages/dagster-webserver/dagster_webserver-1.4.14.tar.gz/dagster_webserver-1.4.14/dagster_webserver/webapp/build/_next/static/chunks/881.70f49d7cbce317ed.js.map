{"version":3,"file":"static/chunks/881.70f49d7cbce317ed.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/workspace/GuessJobLocationRoot.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import {\n  Alert,\n  Box,\n  NonIdealState,\n  Page,\n  PageHeader,\n  Table,\n  Heading,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, Redirect, useLocation, useParams, useRouteMatch} from 'react-router-dom';\n\nimport {useTrackPageView} from '../app/analytics';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {LoadingSpinner} from '../ui/Loading';\n\nimport {isThisThingAJob, optionToRepoAddress, useRepositoryOptions} from './WorkspaceContext';\nimport {buildRepoPathForHuman} from './buildRepoAddress';\nimport {findRepoContainingPipeline} from './findRepoContainingPipeline';\nimport {workspacePath, workspacePathFromAddress} from './workspacePath';\n\nexport const GuessJobLocationRoot = () => {\n  useTrackPageView();\n\n  const params = useParams<{jobPath: string}>();\n  const {jobPath} = params;\n\n  const entireMatch = useRouteMatch('/guess/(/?.*)');\n  const location = useLocation();\n\n  const toAppend = (entireMatch!.params as any)[0];\n  const {search} = location;\n\n  const {pipelineName} = explorerPathFromString(jobPath);\n  const {loading, options} = useRepositoryOptions();\n\n  if (loading) {\n    return <LoadingSpinner purpose=\"page\" />;\n  }\n\n  const reposWithMatch = findRepoContainingPipeline(options, pipelineName);\n  if (reposWithMatch.length === 0) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"no-results\"\n          title=\"No matching jobs\"\n          description={\n            <div>\n              <div>\n                <strong>{pipelineName}</strong>\n              </div>\n              was not found in any of your definitions.\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  if (reposWithMatch.length === 1) {\n    const match = reposWithMatch[0]!;\n    const repoAddress = optionToRepoAddress(match);\n    const isJob = isThisThingAJob(match, pipelineName);\n    const to = workspacePathFromAddress(\n      repoAddress,\n      `/${isJob ? 'jobs' : 'pipelines'}/${toAppend}${search}`,\n    );\n    return <Redirect to={to} />;\n  }\n\n  const anyPipelines = reposWithMatch.some((repo) => !isThisThingAJob(repo, pipelineName));\n\n  return (\n    <Page>\n      <PageHeader\n        title={<Heading>{pipelineName}</Heading>}\n        icon=\"job\"\n        description={\n          anyPipelines\n            ? 'Job / pipeline in multiple code locations'\n            : 'Job in multiple code locations'\n        }\n      />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Alert\n          intent=\"info\"\n          title={\n            <div>\n              {anyPipelines ? (\n                <>\n                  Jobs or pipelines named <strong>{pipelineName}</strong> were found in multiple\n                  code locations.\n                </>\n              ) : (\n                <>\n                  Jobs named <strong>{pipelineName}</strong> were found in multiple code locations.\n                </>\n              )}\n            </div>\n          }\n        />\n      </Box>\n      <Table>\n        <thead>\n          <tr>\n            <th>Code location</th>\n            <th>{anyPipelines ? 'Job / Pipeline' : 'Job'}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {reposWithMatch.map((repository) => {\n            const {\n              repository: {name},\n              repositoryLocation: {name: location},\n            } = repository;\n            const repoString = buildRepoPathForHuman(name, location);\n            return (\n              <tr key={repoString}>\n                <td style={{width: '40%'}}>{repoString}</td>\n                <td>\n                  <Link\n                    to={workspacePath(\n                      name,\n                      location,\n                      `/${\n                        isThisThingAJob(repository, pipelineName) ? 'jobs' : 'pipelines'\n                      }/${pipelineName}`,\n                    )}\n                  >\n                    {pipelineName}\n                  </Link>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default GuessJobLocationRoot;\n"],"names":["Page","styled","div","withConfig","PageHeader","props","title","tags","right","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","PageHeaderContainer","background","Colors","Gray50","padding","top","left","border","side","width","color","KeylineGray","Box","flex","direction","justifyContent","bottom","alignItems","gap","wrap","GuessJobLocationRoot","useTrackPageView","jobPath","params","useParams","entireMatch","useRouteMatch","location","useLocation","toAppend","search","pipelineName","explorerPathFromString","useRepositoryOptions","loading","options","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","LoadingSpinner","purpose","reposWithMatch","findRepoContainingPipeline","length","vertical","NonIdealState","icon","description","strong","match","repoAddress","optionToRepoAddress","isJob","isThisThingAJob","to","workspacePathFromAddress","concat","Redirect","anyPipelines","some","repo","Heading","horizontal","Alert","intent","Fragment","Table","thead","tr","th","tbody","map","repository","name","repositoryLocation","repoString","buildRepoPathForHuman","td","style","Link","workspacePath","__webpack_exports__"],"sourceRoot":""}