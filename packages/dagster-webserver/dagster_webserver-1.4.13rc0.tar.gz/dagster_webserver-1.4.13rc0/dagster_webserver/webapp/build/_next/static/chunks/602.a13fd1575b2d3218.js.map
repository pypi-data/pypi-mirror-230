{"version":3,"file":"static/chunks/602.a13fd1575b2d3218.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/runs/RunListTabs.tsx","webpack://_N_E/../ui-core/src/schedules/SchedulesNextTicks.tsx","webpack://_N_E/../ui-core/src/runs/ScheduledRunListRoot.tsx","webpack://_N_E/../ui-core/src/schedules/SchedulerInfo.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import {gql, useQuery} from '@apollo/client';\nimport {Colors, JoinedButtons, TokenizingFieldValue} from '@dagster-io/ui-components';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {useLocation} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {RunStatus, RunsFilter} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {AnchorButton} from '../ui/AnchorButton';\n\nimport {failedStatuses, inProgressStatuses, queuedStatuses} from './RunStatuses';\nimport {runsPathWithFilters, useQueryPersistedRunFilters} from './RunsFilterInput';\nimport {RunTabsCountQuery, RunTabsCountQueryVariables} from './types/RunListTabs.types';\n\nconst getDocumentTitle = (selected: ReturnType<typeof useSelectedRunsTab>) => {\n  switch (selected) {\n    case 'all':\n      return 'Runs | All runs';\n    case 'failed':\n      return 'Runs | Failed';\n    case 'in-progress':\n      return 'Runs | In progress';\n    case 'queued':\n      return 'Runs | Queued';\n    case 'scheduled':\n      return 'Runs | Scheduled';\n    default:\n      return 'Runs';\n  }\n};\n\nexport const useRunListTabs = (filter: RunsFilter = {}) => {\n  const queryResult = useQuery<RunTabsCountQuery, RunTabsCountQueryVariables>(\n    RUN_TABS_COUNT_QUERY,\n    {\n      variables: {\n        queuedFilter: {...filter, statuses: Array.from(queuedStatuses)},\n        inProgressFilter: {...filter, statuses: Array.from(inProgressStatuses)},\n      },\n    },\n  );\n\n  const {data: countData} = queryResult;\n  const {queuedCount, inProgressCount} = React.useMemo(() => {\n    return {\n      queuedCount:\n        countData?.queuedCount?.__typename === 'Runs' ? countData.queuedCount.count : null,\n      inProgressCount:\n        countData?.inProgressCount?.__typename === 'Runs' ? countData.inProgressCount.count : null,\n    };\n  }, [countData]);\n\n  const [filterTokens] = useQueryPersistedRunFilters();\n  const selectedTab = useSelectedRunsTab(filterTokens);\n\n  useDocumentTitle(getDocumentTitle(selectedTab));\n\n  const urlForStatus = (statuses: RunStatus[]) => {\n    const tokensMinusStatus = filterTokens.filter((token) => token.token !== 'status');\n    const statusTokens = statuses.map((status) => ({token: 'status' as const, value: status}));\n    return runsPathWithFilters([...statusTokens, ...tokensMinusStatus]);\n  };\n\n  const tabs = (\n    <JoinedButtons>\n      <ActivatableButton to={urlForStatus([])} id=\"all\" $active={selectedTab === 'all'}>\n        All runs\n      </ActivatableButton>\n      <ActivatableButton\n        to={urlForStatus(Array.from(queuedStatuses))}\n        id=\"queued\"\n        $active={selectedTab === 'queued'}\n      >\n        Queued ({queuedCount ?? 'indeterminate'})\n      </ActivatableButton>\n      <ActivatableButton\n        to={urlForStatus(Array.from(inProgressStatuses))}\n        id=\"in-progress\"\n        $active={selectedTab === 'in-progress'}\n      >\n        In progress ({inProgressCount ?? 'indeterminate'})\n      </ActivatableButton>\n      <ActivatableButton\n        to={urlForStatus(Array.from(failedStatuses))}\n        id=\"failed\"\n        $active={selectedTab === 'failed'}\n      >\n        Failed\n      </ActivatableButton>\n      <ActivatableButton\n        title=\"Scheduled\"\n        to=\"/runs/scheduled\"\n        id=\"scheduled\"\n        $active={selectedTab === 'scheduled'}\n      >\n        Scheduled\n      </ActivatableButton>\n    </JoinedButtons>\n  );\n\n  return {tabs, queryResult};\n};\n\nexport const ActivatableButton = styled(AnchorButton)<{$active: boolean}>`\n  ${(props) =>\n    props.$active &&\n    `\n    background: ${Colors.Gray200};\n  `}\n`;\n\nexport const useSelectedRunsTab = (filterTokens: TokenizingFieldValue[]) => {\n  const {pathname} = useLocation();\n  if (pathname === '/runs/timeline') {\n    return 'timeline';\n  }\n  if (pathname === '/runs/scheduled') {\n    return 'scheduled';\n  }\n  if (pathname === '/overview/backfills') {\n    return 'backfills';\n  }\n\n  const statusTokens = new Set(\n    filterTokens.filter((token) => token.token === 'status').map((token) => token.value),\n  );\n  if (isEqual(queuedStatuses, statusTokens)) {\n    return 'queued';\n  }\n  if (isEqual(inProgressStatuses, statusTokens)) {\n    return 'in-progress';\n  }\n  if (isEqual(failedStatuses, statusTokens)) {\n    return 'failed';\n  }\n  return 'all';\n};\n\nexport const RUN_TABS_COUNT_QUERY = gql`\n  query RunTabsCountQuery($queuedFilter: RunsFilter!, $inProgressFilter: RunsFilter!) {\n    queuedCount: pipelineRunsOrError(filter: $queuedFilter) {\n      ... on Runs {\n        count\n      }\n    }\n    inProgressCount: pipelineRunsOrError(filter: $inProgressFilter) {\n      ... on Runs {\n        count\n      }\n    }\n  }\n`;\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  MenuItem,\n  Menu,\n  NonIdealState,\n  Popover,\n  Spinner,\n  Table,\n  Subheading,\n  ExternalAnchorButton,\n  StyledRawCodeMirror,\n} from '@dagster-io/ui-components';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {showSharedToaster} from '../app/DomUtils';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {useCopyToClipboard} from '../app/browser';\nimport {InstigationStatus} from '../graphql/types';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {RunTags} from '../runs/RunTags';\nimport {MenuLink} from '../ui/MenuLink';\nimport {\n  findRepositoryAmongOptions,\n  isThisThingAJob,\n  useRepository,\n  useRepositoryOptions,\n} from '../workspace/WorkspaceContext';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {TimestampDisplay} from './TimestampDisplay';\nimport {\n  RepositoryForNextTicksFragment,\n  ScheduleFutureTickEvaluationResultFragment,\n  ScheduleFutureTickRunRequestFragment,\n  ScheduleNextFiveTicksFragment,\n  ScheduleTickConfigQuery,\n  ScheduleTickConfigQueryVariables,\n} from './types/SchedulesNextTicks.types';\n\ninterface ScheduleTick {\n  schedule: ScheduleNextFiveTicksFragment;\n  timestamp: number;\n  repoAddress: RepoAddress;\n}\n\nexport const SchedulesNextTicks: React.FC<{\n  repos: RepositoryForNextTicksFragment[];\n}> = React.memo(({repos}) => {\n  const nextTicks: ScheduleTick[] = [];\n  let anyPipelines = false;\n  let anySchedules = false;\n\n  const {options} = useRepositoryOptions();\n\n  repos.forEach((repo) => {\n    const {schedules} = repo;\n    anySchedules = anySchedules || schedules.length > 0;\n\n    const repoAddress = {\n      name: repo.name,\n      location: repo.location.name,\n    };\n\n    const futureTickSchedules = schedules.filter(\n      (schedule) =>\n        schedule.futureTicks.results.length &&\n        schedule.scheduleState.status === InstigationStatus.RUNNING,\n    );\n\n    const minMaxTimestamp = Math.min(\n      ...futureTickSchedules.map(\n        (schedule) =>\n          schedule.futureTicks.results[schedule.futureTicks.results.length - 1]!.timestamp!,\n      ),\n    );\n\n    futureTickSchedules.forEach((schedule) => {\n      schedule.futureTicks.results.forEach((tick) => {\n        if (tick.timestamp! <= minMaxTimestamp) {\n          nextTicks.push({schedule, timestamp: tick.timestamp!, repoAddress});\n        }\n      });\n    });\n\n    if (!anyPipelines) {\n      anyPipelines = schedules.some((schedule) => !!schedule.mode);\n    }\n  });\n\n  nextTicks.sort((a, b) => a.timestamp - b.timestamp);\n\n  if (!nextTicks.length) {\n    return (\n      <Box padding={{vertical: 32}}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"No scheduled ticks\"\n          description={\n            anySchedules ? (\n              <>\n                There are no running schedules.{' '}\n                <Link to=\"/overview/schedules\">Start a schedule</Link> to see scheduled ticks.\n              </>\n            ) : (\n              <>\n                There are no schedules in this workspace. Create a running schedule to view its\n                scheduled ticks.\n              </>\n            )\n          }\n          action={\n            anySchedules ? null : (\n              <ExternalAnchorButton\n                icon={<Icon name=\"open_in_new\" />}\n                href=\"https://docs.dagster.io/concepts/partitions-schedules-sensors/schedules\"\n              >\n                View documentation\n              </ExternalAnchorButton>\n            )\n          }\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th style={{width: '260px'}}>Timestamp</th>\n          <th style={{width: '30%'}}>Schedule</th>\n          <th>{anyPipelines ? 'Job / Pipeline' : 'Job'}</th>\n          <th>Metadata</th>\n        </tr>\n      </thead>\n      <tbody>\n        {nextTicks.map(({schedule, timestamp, repoAddress}) => {\n          const repo = findRepositoryAmongOptions(options, repoAddress);\n          return (\n            <tr key={`${schedule.id}:${timestamp}`}>\n              <td>\n                <TimestampDisplay\n                  timestamp={timestamp}\n                  timezone={schedule.executionTimezone}\n                  timeFormat={{showSeconds: false, showTimezone: true}}\n                />\n              </td>\n              <td>\n                <Link to={workspacePathFromAddress(repoAddress, `/schedules/${schedule.name}`)}>\n                  {schedule.name}\n                </Link>\n              </td>\n              <td>\n                <PipelineReference\n                  pipelineName={schedule.pipelineName}\n                  pipelineHrefContext={repoAddress}\n                  isJob={!!repo && isThisThingAJob(repo, schedule.pipelineName)}\n                />\n              </td>\n              <td>\n                <NextTickMenu\n                  repoAddress={repoAddress}\n                  schedule={schedule}\n                  tickTimestamp={timestamp}\n                />\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n});\n\nconst NextTickMenu: React.FC<{\n  repoAddress: RepoAddress;\n  schedule: ScheduleNextFiveTicksFragment;\n  tickTimestamp: number;\n}> = React.memo(({repoAddress, schedule, tickTimestamp}) => {\n  const scheduleSelector = {\n    ...repoAddressToSelector(repoAddress),\n    scheduleName: schedule.name,\n  };\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const [loadTickConfig, {called, loading, data}] = useLazyQuery<\n    ScheduleTickConfigQuery,\n    ScheduleTickConfigQueryVariables\n  >(SCHEDULE_TICK_CONFIG_QUERY, {\n    variables: {\n      scheduleSelector,\n      tickTimestamp,\n    },\n  });\n\n  const infoReady = called ? !loading : false;\n  const evaluationResult =\n    data?.scheduleOrError?.__typename === 'Schedule'\n      ? data.scheduleOrError.futureTick.evaluationResult\n      : null;\n\n  const menuItems = infoReady ? (\n    <NextTickMenuItems\n      repoAddress={repoAddress}\n      schedule={schedule}\n      loading={loading}\n      onItemOpen={setOpen}\n      evaluationResult={evaluationResult}\n    />\n  ) : (\n    <Spinner purpose=\"body-text\" />\n  );\n  return (\n    <>\n      <Popover\n        content={<Menu>{menuItems}</Menu>}\n        position=\"bottom-right\"\n        onOpening={() => {\n          if (!called) {\n            loadTickConfig();\n          }\n        }}\n      >\n        <Button icon={<Icon name=\"expand_more\" />} />\n      </Popover>\n      <NextTickDialog\n        repoAddress={repoAddress}\n        isOpen={isOpen}\n        setOpen={setOpen}\n        schedule={schedule}\n        tickTimestamp={tickTimestamp}\n        evaluationResult={evaluationResult}\n      />\n    </>\n  );\n});\n\nconst NextTickMenuItems: React.FC<{\n  repoAddress: RepoAddress;\n  evaluationResult: ScheduleFutureTickEvaluationResultFragment | null;\n  schedule: ScheduleNextFiveTicksFragment;\n  loading: boolean;\n  onItemOpen: (value: boolean) => void;\n}> = ({repoAddress, schedule, evaluationResult, loading, onItemOpen}) => {\n  if (!evaluationResult) {\n    return <MenuItem text=\"Could not preview tick for this schedule\" />;\n  }\n\n  if (evaluationResult.skipReason) {\n    return <MenuItem text=\"View skip reason...\" onClick={() => onItemOpen(true)} />;\n  }\n\n  if (evaluationResult.error) {\n    return <MenuItem text=\"View error...\" onClick={() => onItemOpen(true)} />;\n  }\n\n  if (!evaluationResult.runRequests || !evaluationResult.runRequests.length) {\n    return <MenuItem text=\"No runs requested for this projected schedule tick\" />;\n  }\n\n  if (evaluationResult.runRequests.length === 1) {\n    const runRequest = evaluationResult.runRequests[0];\n    const runConfigYaml = runRequest ? runRequest.runConfigYaml : '';\n    return (\n      <>\n        <MenuItem\n          text={loading ? 'Loading Configuration...' : 'View Configuration...'}\n          icon=\"open_in_new\"\n          onClick={() => onItemOpen(true)}\n        />\n        <MenuLink\n          text=\"Open in Launchpad...\"\n          icon=\"edit\"\n          target=\"_blank\"\n          to={workspacePathFromAddress(\n            repoAddress,\n            `/pipeline_or_job/${schedule.pipelineName}/playground/setup?${qs.stringify({\n              mode: schedule.mode,\n              config: runConfigYaml,\n              solidSelection: schedule.solidSelection,\n            })}`,\n          )}\n        />\n      </>\n    );\n  }\n\n  return (\n    <MenuItem\n      text={`View ${evaluationResult.runRequests.length} run requests...`}\n      icon=\"edit\"\n      target=\"_blank\"\n      onClick={() => onItemOpen(true)}\n    />\n  );\n};\n\nconst NextTickDialog: React.FC<{\n  repoAddress: RepoAddress;\n  isOpen: boolean;\n  setOpen: (value: boolean) => void;\n  evaluationResult: ScheduleFutureTickEvaluationResultFragment | null;\n  schedule: ScheduleNextFiveTicksFragment;\n  tickTimestamp: number;\n}> = ({repoAddress, evaluationResult, schedule, tickTimestamp, setOpen, isOpen}) => {\n  const [\n    selectedRunRequest,\n    setSelectedRunRequest,\n  ] = React.useState<ScheduleFutureTickRunRequestFragment | null>(\n    evaluationResult && evaluationResult.runRequests && evaluationResult.runRequests.length === 1\n      ? evaluationResult.runRequests[0]!\n      : null,\n  );\n\n  const copy = useCopyToClipboard();\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, schedule.pipelineName);\n\n  React.useEffect(() => {\n    if (\n      evaluationResult &&\n      evaluationResult.runRequests &&\n      evaluationResult.runRequests.length === 1\n    ) {\n      setSelectedRunRequest(evaluationResult.runRequests[0]!);\n    }\n  }, [evaluationResult]);\n\n  const close = () => {\n    setSelectedRunRequest(null);\n    setOpen(false);\n  };\n\n  let body;\n  if (!evaluationResult) {\n    body = null;\n  } else if (selectedRunRequest) {\n    body = (\n      <Box flex={{direction: 'column', gap: 20}}>\n        <Box flex={{direction: 'column', gap: 12}} padding={{top: 16, horizontal: 24}}>\n          <Subheading>Tags</Subheading>\n          {selectedRunRequest.tags.length ? (\n            <RunTags tags={selectedRunRequest.tags} mode={isJob ? null : schedule.mode} />\n          ) : null}\n        </Box>\n        <div>\n          <Box\n            border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n            padding={{left: 24, bottom: 16}}\n          >\n            <Subheading>Config</Subheading>\n          </Box>\n          <StyledRawCodeMirror\n            value={selectedRunRequest.runConfigYaml}\n            options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n          />\n        </div>\n      </Box>\n    );\n  } else if (evaluationResult.error) {\n    body = (\n      <DialogBody>\n        <PythonErrorInfo error={evaluationResult.error} />\n      </DialogBody>\n    );\n  } else if (evaluationResult.skipReason) {\n    body = (\n      <DialogBody>\n        <SkipWrapper>{evaluationResult.skipReason}</SkipWrapper>\n      </DialogBody>\n    );\n  } else if (evaluationResult.runRequests) {\n    body = (\n      <DialogBody>\n        <RunRequestBody>\n          <Table>\n            <thead>\n              <tr>\n                <th>Run key</th>\n                <th>Config</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {evaluationResult.runRequests.map((runRequest, idx) => {\n                if (!runRequest) {\n                  return null;\n                }\n                return (\n                  <tr key={idx}>\n                    <td>{runRequest.runKey || <span>&mdash;</span>}</td>\n                    <td>\n                      <ButtonLink\n                        onClick={() => setSelectedRunRequest(runRequest)}\n                        underline={false}\n                      >\n                        <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                          <Icon name=\"open_in_new\" color={Colors.Gray400} />\n                          <span>View config</span>\n                        </Group>\n                      </ButtonLink>\n                    </td>\n                    <td>\n                      <Popover\n                        content={\n                          <Menu>\n                            <MenuLink\n                              text=\"Open in Launchpad...\"\n                              icon=\"edit\"\n                              target=\"_blank\"\n                              to={workspacePathFromAddress(\n                                repoAddress,\n                                `/${isJob ? 'jobs' : 'pipelines'}/${\n                                  schedule.pipelineName\n                                }/playground/setup?${qs.stringify({\n                                  mode: schedule.mode,\n                                  config: runRequest.runConfigYaml,\n                                  solidSelection: schedule.solidSelection,\n                                })}`,\n                              )}\n                            />\n                          </Menu>\n                        }\n                        position=\"bottom\"\n                      >\n                        <Button icon={<Icon name=\"expand_more\" />} />\n                      </Popover>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </RunRequestBody>\n      </DialogBody>\n    );\n  }\n\n  return (\n    <Dialog\n      onClose={() => close()}\n      style={{width: '50vw'}}\n      title={\n        <Box flex={{direction: 'row', gap: 4}}>\n          <TimestampDisplay timestamp={tickTimestamp} timezone={schedule.executionTimezone} />\n          {selectedRunRequest?.runKey ? <div>: {selectedRunRequest?.runKey}</div> : null}\n        </Box>\n      }\n      isOpen={isOpen}\n    >\n      {body}\n      <DialogFooter topBorder>\n        {selectedRunRequest ? (\n          <Button\n            autoFocus={false}\n            onClick={async () => {\n              copy(selectedRunRequest.runConfigYaml);\n              await showSharedToaster({\n                intent: 'success',\n                icon: 'copy_to_clipboard_done',\n                message: 'Copied!',\n              });\n            }}\n          >\n            Copy config\n          </Button>\n        ) : null}\n        <Button intent=\"primary\" autoFocus={true} onClick={() => close()}>\n          OK\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst SCHEDULE_NEXT_FIVE_TICKS_FRAGMENT = gql`\n  fragment ScheduleNextFiveTicksFragment on Schedule {\n    id\n    name\n    executionTimezone\n    mode\n    solidSelection\n    pipelineName\n    scheduleState {\n      id\n      status\n    }\n    futureTicks(limit: 5) {\n      results {\n        timestamp\n      }\n    }\n  }\n`;\n\nexport const REPOSITORY_FOR_NEXT_TICKS_FRAGMENT = gql`\n  fragment RepositoryForNextTicksFragment on Repository {\n    name\n    id\n    location {\n      id\n      name\n    }\n    schedules {\n      id\n      ...ScheduleNextFiveTicksFragment\n    }\n  }\n\n  ${SCHEDULE_NEXT_FIVE_TICKS_FRAGMENT}\n`;\n\nconst SCHEDULE_TICK_CONFIG_QUERY = gql`\n  query ScheduleTickConfigQuery($scheduleSelector: ScheduleSelector!, $tickTimestamp: Int!) {\n    scheduleOrError(scheduleSelector: $scheduleSelector) {\n      ... on Schedule {\n        id\n        futureTick(tickTimestamp: $tickTimestamp) {\n          evaluationResult {\n            ...ScheduleFutureTickEvaluationResult\n          }\n        }\n      }\n    }\n  }\n\n  fragment ScheduleFutureTickEvaluationResult on TickEvaluation {\n    runRequests {\n      ...ScheduleFutureTickRunRequest\n    }\n    skipReason\n    error {\n      ...PythonErrorFragment\n    }\n  }\n\n  fragment ScheduleFutureTickRunRequest on RunRequest {\n    runKey\n    runConfigYaml\n    tags {\n      key\n      value\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RunRequestBody = styled.div`\n  font-size: 13px;\n`;\n\nconst SkipWrapper = styled.div`\n  background-color: #fdfcf2;\n  border: 1px solid ${Colors.Yellow500};\n  border-radius: 3px;\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Page, Alert, ButtonLink, Colors, Group, Box} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useMergedRefresh,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {INSTANCE_HEALTH_FRAGMENT} from '../instance/InstanceHealthFragment';\nimport {SchedulerInfo} from '../schedules/SchedulerInfo';\nimport {\n  REPOSITORY_FOR_NEXT_TICKS_FRAGMENT,\n  SchedulesNextTicks,\n} from '../schedules/SchedulesNextTicks';\nimport {Loading} from '../ui/Loading';\n\nimport {useRunListTabs} from './RunListTabs';\nimport {\n  ScheduledRunsListQuery,\n  ScheduledRunsListQueryVariables,\n} from './types/ScheduledRunListRoot.types';\n\nexport const ScheduledRunListRoot = () => {\n  useTrackPageView();\n  useDocumentTitle('Runs | Scheduled');\n\n  const queryResult = useQuery<ScheduledRunsListQuery, ScheduledRunsListQueryVariables>(\n    SCHEDULED_RUNS_LIST_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  const {tabs, queryResult: runQueryResult} = useRunListTabs();\n  const countRefreshState = useQueryRefreshAtInterval(runQueryResult, FIFTEEN_SECONDS);\n  const combinedRefreshState = useMergedRefresh(countRefreshState, refreshState);\n\n  return (\n    <Page>\n      <Box\n        flex={{direction: 'row', gap: 8, alignItems: 'center', justifyContent: 'space-between'}}\n        padding={{vertical: 8, left: 24, right: 12}}\n      >\n        {tabs}\n        <QueryRefreshCountdown refreshState={combinedRefreshState} />\n      </Box>\n      <Loading queryResult={queryResult} allowStaleData>\n        {(result) => {\n          const {repositoriesOrError, instance} = result;\n          if (repositoriesOrError.__typename === 'PythonError') {\n            const message = repositoriesOrError.message;\n            return (\n              <Alert\n                intent=\"warning\"\n                title={\n                  <Group direction=\"row\" spacing={4}>\n                    <div>Could not load scheduled ticks.</div>\n                    <ButtonLink\n                      color={Colors.Link}\n                      underline=\"always\"\n                      onClick={() => {\n                        showCustomAlert({\n                          title: 'Python error',\n                          body: message,\n                        });\n                      }}\n                    >\n                      View error\n                    </ButtonLink>\n                  </Group>\n                }\n              />\n            );\n          }\n          return (\n            <>\n              <SchedulerInfo\n                daemonHealth={instance.daemonHealth}\n                padding={{vertical: 16, horizontal: 24}}\n              />\n              <SchedulesNextTicks repos={repositoriesOrError.nodes} />\n            </>\n          );\n        }}\n      </Loading>\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default ScheduledRunListRoot;\n\nconst SCHEDULED_RUNS_LIST_QUERY = gql`\n  query ScheduledRunsListQuery {\n    instance {\n      id\n      ...InstanceHealthFragment\n    }\n    repositoriesOrError {\n      ... on RepositoryConnection {\n        nodes {\n          id\n          ... on Repository {\n            id\n            ...RepositoryForNextTicksFragment\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n  ${REPOSITORY_FOR_NEXT_TICKS_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {Alert, Box} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {DaemonHealthFragment} from '../instance/types/DaemonList.types';\n\ntype Props = React.ComponentPropsWithRef<typeof Box> & {\n  daemonHealth: DaemonHealthFragment | undefined;\n};\n\nexport const SchedulerInfo: React.FC<Props> = ({daemonHealth, ...boxProps}) => {\n  let healthy = undefined;\n\n  if (daemonHealth) {\n    const schedulerHealths = daemonHealth.allDaemonStatuses.filter(\n      (daemon) => daemon.daemonType === 'SCHEDULER',\n    );\n    if (schedulerHealths.length > 0) {\n      const schedulerHealth = schedulerHealths[0]!;\n      healthy = schedulerHealth.required && schedulerHealth.healthy;\n    }\n  }\n\n  if (healthy === false) {\n    return (\n      <Box {...boxProps}>\n        <Alert\n          intent=\"warning\"\n          title=\"The scheduler daemon is not running.\"\n          description={\n            <div>\n              See the{' '}\n              <a href=\"https://docs.dagster.io/deployment/dagster-daemon\">\n                dagster-daemon documentation\n              </a>{' '}\n              for more information on how to deploy the dagster-daemon process.\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  return null;\n};\n"],"names":["getDocumentTitle","selected","useRunListTabs","filter","queryResult","useQuery","RUN_TABS_COUNT_QUERY","variables","queuedFilter","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_9__","_","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_10__","statuses","Array","from","queuedStatuses","inProgressFilter","inProgressStatuses","data","React","countData","queuedCount","__typename","count","inProgressCount","filterTokens","useQueryPersistedRunFilters","selectedTab","useSelectedRunsTab","useDocumentTitle","urlForStatus","tokensMinusStatus","token","statusTokens","map","status","value","runsPathWithFilters","_swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_12__","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","JoinedButtons","jsx","ActivatableButton","to","id","$active","failedStatuses","title","styled","AnchorButton","props","concat","Colors","Gray200","pathname","useLocation","Set","isEqual","gql","SchedulesNextTicks","param","repos","nextTicks","anyPipelines","anySchedules","options","useRepositoryOptions","forEach","repo","Math","schedules","length","repoAddress","name","location","futureTickSchedules","schedule","futureTicks","results","scheduleState","InstigationStatus","RUNNING","minMaxTimestamp","min","_to_consumable_array","timestamp","tick","push","some","mode","sort","a","b","jsx_runtime","Table","thead","tr","th","style","width","tbody","findRepositoryAmongOptions","td","TimestampDisplay","timezone","executionTimezone","timeFormat","showSeconds","showTimezone","Link","workspacePathFromAddress","PipelineReference","pipelineName","pipelineHrefContext","isJob","isThisThingAJob","NextTickMenu","tickTimestamp","Box","padding","vertical","NonIdealState","icon","description","Fragment","action","ExternalAnchorButton","Icon","href","scheduleSelector","_object_spread_props","_object_spread","repoAddressToSelector","scheduleName","isOpen","setOpen","useLazyQuery","SCHEDULE_TICK_CONFIG_QUERY","loadTickConfig","called","loading","evaluationResult","scheduleOrError","futureTick","menuItems","infoReady","NextTickMenuItems","onItemOpen","Spinner","purpose","Popover","content","Menu","position","onOpening","Button","NextTickDialog","MenuItem","text","skipReason","onClick","error","runRequests","runRequest","runConfigYaml","MenuLink","target","qs","config","solidSelection","body","selectedRunRequest","setSelectedRunRequest","copy","useCopyToClipboard","useRepository","close","flex","direction","gap","top","horizontal","Subheading","tags","RunTags","div","border","side","color","KeylineGray","left","bottom","StyledRawCodeMirror","readOnly","lineNumbers","DialogBody","PythonErrorInfo","SkipWrapper","RunRequestBody","idx","runKey","span","ButtonLink","underline","Group","spacing","alignItems","Gray400","Dialog","onClose","DialogFooter","topBorder","autoFocus","_async_to_generator","showSharedToaster","intent","message","_state","sent","SCHEDULE_NEXT_FIVE_TICKS_FRAGMENT","REPOSITORY_FOR_NEXT_TICKS_FRAGMENT","PYTHON_ERROR_FRAGMENT","withConfig","Yellow500","ScheduledRunListRoot","useTrackPageView","SCHEDULED_RUNS_LIST_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","countRefreshState","runQueryResult","combinedRefreshState","useMergedRefresh","Page","justifyContent","right","QueryRefreshCountdown","Loading","allowStaleData","result","repositoriesOrError","instance","Alert","showCustomAlert","SchedulerInfo","daemonHealth","nodes","runs_ScheduledRunListRoot","INSTANCE_HEALTH_FRAGMENT","_param","boxProps","healthy","undefined","schedulerHealths","allDaemonStatuses","daemon","daemonType","schedulerHealth","required","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__"],"sourceRoot":""}