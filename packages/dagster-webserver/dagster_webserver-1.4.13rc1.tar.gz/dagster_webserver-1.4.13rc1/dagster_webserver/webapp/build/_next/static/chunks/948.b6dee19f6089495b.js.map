{"version":3,"file":"static/chunks/948.b6dee19f6089495b.js","mappings":"6fAcO,IAAMA,EAAqB,WAChCC,CAAAA,EAAAA,EAAAA,EAAAA,IACAC,CAAAA,EAAAA,EAAAA,CAAAA,EAAiB,WAEjB,IAAMC,EAAcC,EAAAA,UAAgB,CAACC,EAAAA,CAAmBA,EAAjDF,SAAAA,CACDG,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,EAChBC,EACA,CACEC,4BAA6B,EAC/B,GAEIC,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,EAA0BL,EAAWM,EAAAA,EAAeA,EAClEC,EAAiBP,EAAjBO,OAAAA,CAASC,EAAQR,EAARQ,IAAAA,CAehB,MACE,GAAAC,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CACTC,MAAO,GAAAL,EAAAG,GAAA,EAACG,EAAAA,EAAOA,CAAAA,UAAElB,IACjBmB,KAAM,GAAAP,EAAAG,GAAA,EAACK,EAAAA,CAAYA,CAAAA,CAACC,IAAI,SAASd,aAAcA,MAEjD,GAAAK,EAAAG,GAAA,EAACO,EAAAA,CAAGA,CAAAA,CAACC,QAAS,CAACC,SAAU,GAAIC,WAAY,EAAE,WACzC,GAAAb,EAAAG,GAAA,EAACW,EAAAA,EAAUA,CAAAA,UAAC,sBAnBhB,CAAIhB,GAAW,OAACC,EAAAA,KAAAA,EAAAA,EAAMgB,QAAQ,EAOvBhB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMgB,QAAQ,EACnB,GAAAf,EAAAG,GAAA,EAACa,EAAAA,CAAUA,CAAAA,CAACC,eAAgBlB,EAAKgB,QAAQ,CAACG,YAAY,CAACC,iBAAiB,GACtE,KAPA,GAAAnB,EAAAG,GAAA,EAACO,EAAAA,CAAGA,CAAAA,CAACC,QAAS,CAACE,WAAY,EAAE,EAAGO,MAAO,CAACC,MAAOC,EAAAA,CAAMA,CAACC,OAAO,WAAG,eAsBxE,CAIAC,CAAAA,EAAA,QAAevC,EAEf,IAAMQ,EAAwBgC,CAAAA,EAAAA,EAAAA,EAAAA,EAAGA,IAQ7BC,EAAAA,CAAwBA","sources":["webpack://_N_E/../ui-core/src/instance/InstanceHealthPage.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, PageHeader, Heading, Subheading} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nimport {DaemonList} from './DaemonList';\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceHealthQuery, InstanceHealthQueryVariables} from './types/InstanceHealthPage.types';\n\nexport const InstanceHealthPage = () => {\n  useTrackPageView();\n  useDocumentTitle('Daemons');\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const queryData = useQuery<InstanceHealthQuery, InstanceHealthQueryVariables>(\n    INSTANCE_HEALTH_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n  const refreshState = useQueryRefreshAtInterval(queryData, FIFTEEN_SECONDS);\n  const {loading, data} = queryData;\n\n  const daemonContent = () => {\n    if (loading && !data?.instance) {\n      return (\n        <Box padding={{horizontal: 24}} style={{color: Colors.Gray400}}>\n          Loadingâ€¦\n        </Box>\n      );\n    }\n    return data?.instance ? (\n      <DaemonList daemonStatuses={data.instance.daemonHealth.allDaemonStatuses} />\n    ) : null;\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"health\" refreshState={refreshState} />}\n      />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Subheading>Daemon statuses</Subheading>\n      </Box>\n      {daemonContent()}\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceHealthPage;\n\nconst INSTANCE_HEALTH_QUERY = gql`\n  query InstanceHealthQuery {\n    instance {\n      id\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n"],"names":["InstanceHealthPage","useTrackPageView","useDocumentTitle","pageTitle","React","InstancePageContext","queryData","useQuery","INSTANCE_HEALTH_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","loading","data","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","Fragment","jsx","PageHeader","title","Heading","tabs","InstanceTabs","tab","Box","padding","vertical","horizontal","Subheading","instance","DaemonList","daemonStatuses","daemonHealth","allDaemonStatuses","style","color","Colors","Gray400","__webpack_exports__","gql","INSTANCE_HEALTH_FRAGMENT"],"sourceRoot":""}