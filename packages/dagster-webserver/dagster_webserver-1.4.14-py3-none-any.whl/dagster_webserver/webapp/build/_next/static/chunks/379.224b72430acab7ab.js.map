{"version":3,"file":"static/chunks/379.224b72430acab7ab.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/assets/AssetGroupSuggest.tsx","webpack://_N_E/../ui-core/src/assets/AssetsGroupsGlobalGraphRoot.tsx","webpack://_N_E/../ui-core/src/assets/globalAssetGraphPathToString.tsx","webpack://_N_E/../ui-core/src/instance/RepoFilterButton.tsx","webpack://_N_E/../ui-core/src/workspace/ReloadAllButton.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import {Box, Checkbox, Icon, MenuItem, Suggest} from '@dagster-io/ui-components';\nimport isEqual from 'lodash/isEqual';\nimport uniqBy from 'lodash/uniqBy';\nimport * as React from 'react';\n\nimport {AssetGroupSelector} from '../graphql/types';\nimport {ClearButton} from '../ui/ClearButton';\nimport {buildRepoPathForHuman} from '../workspace/buildRepoAddress';\n\ntype Asset = {\n  definition: {\n    groupName: string | null;\n    repository: {name: string; location: {name: string}};\n  } | null;\n};\n\nexport function useAssetGroupSelectorsForAssets(assets: Asset[] | undefined) {\n  return React.useMemo(\n    () =>\n      uniqBy(\n        (assets || []).map(buildAssetGroupSelector).filter((a) => !!a) as AssetGroupSelector[],\n        (a) => JSON.stringify(a),\n      ).sort((a, b) => a.groupName.localeCompare(b.groupName)),\n    [assets],\n  );\n}\n\n// We're using a <Suggest /> component because it's convenient to have typeahead behavior,\n// but we want to support mulit-selection. To achieve this, we show checkboxes on the items\n// and override the label text (\"2 groups\"). Blueprint doesn't need to know what the real\n// selection is, just that one exists.\nconst FAKE_SELECTED_ITEM: AssetGroupSelector = {\n  groupName: '-',\n  repositoryLocationName: '-',\n  repositoryName: '-',\n};\n\nexport const AssetGroupSuggest: React.FC<{\n  assetGroups: AssetGroupSelector[];\n  value: AssetGroupSelector[];\n  onChange: (g: AssetGroupSelector[]) => void;\n}> = ({assetGroups, value, onChange}) => {\n  const repoKey = (g: AssetGroupSelector) => `${g.repositoryName}@${g.repositoryLocationName}`;\n  const repoKey1 = assetGroups[0] ? repoKey(assetGroups[0]) : '';\n  const repoContextNeeded = !assetGroups.every((g) => repoKey1 === repoKey(g));\n\n  return (\n    <Suggest<AssetGroupSelector>\n      selectedItem={value.length ? FAKE_SELECTED_ITEM : null}\n      items={assetGroups}\n      menuWidth={300}\n      inputProps={{\n        style: {width: 200},\n        placeholder: 'Filter asset groups…',\n        rightElement: value.length ? (\n          <ClearButton onClick={() => onChange([])} style={{marginTop: 5, marginRight: 4}}>\n            <Icon name=\"cancel\" />\n          </ClearButton>\n        ) : undefined,\n      }}\n      inputValueRenderer={() =>\n        value.length === 1 ? value[0]!.groupName : value.length > 1 ? `${value.length} groups` : ``\n      }\n      itemPredicate={(query, partition) =>\n        query.length === 0 || partition.groupName.toLowerCase().includes(query.toLowerCase())\n      }\n      itemsEqual={isEqual}\n      itemRenderer={(assetGroup, props) => (\n        <MenuItem\n          active={props.modifiers.active}\n          onClick={props.handleClick}\n          key={JSON.stringify(assetGroup)}\n          text={\n            <Box\n              flex={{direction: 'row', gap: 6, alignItems: 'center'}}\n              margin={{left: 4}}\n              style={{maxWidth: '500px'}}\n            >\n              <Checkbox checked={value.some((g) => isEqual(g, assetGroup))} size=\"small\" readOnly />\n              <Box\n                flex={{direction: 'row', alignItems: 'center', grow: 1, shrink: 1}}\n                style={{overflow: 'hidden'}}\n              >\n                <div style={{overflow: 'hidden'}}>\n                  {assetGroup.groupName}\n                  {repoContextNeeded ? (\n                    <span style={{opacity: 0.5, paddingLeft: 4}}>\n                      {buildRepoPathForHuman(\n                        assetGroup.repositoryName,\n                        assetGroup.repositoryLocationName,\n                      )}\n                    </span>\n                  ) : undefined}\n                </div>\n              </Box>\n            </Box>\n          }\n        />\n      )}\n      noResults={<MenuItem disabled={true} text=\"No asset groups\" />}\n      closeOnSelect={false}\n      resetOnQuery={false}\n      onItemSelect={(item) => {\n        const nextValue = value.filter((g) => !isEqual(item, g));\n        if (nextValue.length === value.length) {\n          nextValue.push(item);\n        }\n        onChange(nextValue);\n      }}\n    />\n  );\n};\n\nexport function buildAssetGroupSelector(a: Asset) {\n  return a.definition && a.definition.groupName\n    ? {\n        groupName: a.definition.groupName,\n        repositoryName: a.definition.repository.name,\n        repositoryLocationName: a.definition.repository.location.name,\n      }\n    : null;\n}\n","import {Page, PageHeader, Heading} from '@dagster-io/ui-components';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphFetchScope} from '../asset-graph/useAssetGraphData';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {AssetGroupSelector} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {RepoFilterButton} from '../instance/RepoFilterButton';\nimport {ExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nimport {AssetGroupSuggest, buildAssetGroupSelector} from './AssetGroupSuggest';\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {\n  globalAssetGraphPathFromString,\n  globalAssetGraphPathToString,\n} from './globalAssetGraphPathToString';\n\ninterface AssetGroupRootParams {\n  0: string;\n}\n\nexport const AssetsGroupsGlobalGraphRoot: React.FC = () => {\n  const {0: path} = useParams<AssetGroupRootParams>();\n  const {allRepos, visibleRepos} = React.useContext(WorkspaceContext);\n  const history = useHistory();\n\n  const [filters, setFilters] = useQueryPersistedState<{groups: AssetGroupSelector[]}>({\n    encode: ({groups}) => ({groups: JSON.stringify(groups)}),\n    decode: (qs) => ({groups: qs.groups ? JSON.parse(qs.groups) : []}),\n  });\n\n  useDocumentTitle(`Global Asset Lineage`);\n\n  const onChangeExplorerPath = React.useCallback(\n    (path: ExplorerPath, mode: 'push' | 'replace') => {\n      history[mode]({\n        pathname: globalAssetGraphPathToString(path),\n        search: history.location.search,\n      });\n    },\n    [history],\n  );\n\n  const onNavigateToSourceAssetNode = React.useCallback(\n    (node: AssetLocation) => {\n      history.push(assetDetailsPathForKey(node.assetKey, {view: 'definition'}));\n    },\n    [history],\n  );\n\n  const fetchOptions = React.useMemo(() => {\n    const options: AssetGraphFetchScope = {\n      hideEdgesToNodesOutsideQuery: false,\n      hideNodesMatching: (node) => {\n        if (\n          !visibleRepos.some(\n            (repo) =>\n              repo.repositoryLocation.name === node.repository.location.name &&\n              repo.repository.name === node.repository.name,\n          )\n        ) {\n          return true;\n        }\n        if (filters.groups?.length) {\n          const nodeGroup = buildAssetGroupSelector({definition: node});\n          if (!filters.groups.some((g) => isEqual(g, nodeGroup))) {\n            return true;\n          }\n        }\n\n        return false;\n      },\n    };\n    return options;\n  }, [filters.groups, visibleRepos]);\n\n  const assetGroups: AssetGroupSelector[] = React.useMemo(() => {\n    return visibleRepos.flatMap((repo) =>\n      repo.repository.assetGroups.map((g) => ({\n        groupName: g.groupName,\n        repositoryLocationName: repo.repositoryLocation.name,\n        repositoryName: repo.repository.name,\n      })),\n    );\n  }, [visibleRepos]);\n\n  return (\n    <Page style={{display: 'flex', flexDirection: 'column', paddingBottom: 0}}>\n      <PageHeader\n        title={<Heading>Global Asset Lineage</Heading>}\n        right={\n          <div style={{marginBottom: -8}}>\n            <ReloadAllButton label=\"Reload definitions\" />\n          </div>\n        }\n      />\n      <AssetGraphExplorer\n        fetchOptions={fetchOptions}\n        fetchOptionFilters={\n          <>\n            {allRepos.length > 1 && <RepoFilterButton />}\n            <AssetGroupSuggest\n              assetGroups={assetGroups}\n              value={filters.groups || []}\n              onChange={(groups) => setFilters({...filters, groups})}\n            />\n          </>\n        }\n        options={{preferAssetRendering: true, explodeComposites: true}}\n        explorerPath={globalAssetGraphPathFromString(path)}\n        onChangeExplorerPath={onChangeExplorerPath}\n        onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n      />\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default AssetsGroupsGlobalGraphRoot;\n","import {tokenForAssetKey} from '../asset-graph/Utils';\nimport {AssetKeyInput} from '../graphql/types';\nimport {\n  ExplorerPath,\n  explorerPathFromString,\n  explorerPathToString,\n} from '../pipelines/PipelinePathUtils';\n\n// https://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\nconst URL_MAX_LENGTH = 32000;\nconst __GLOBAL__ = '__GLOBAL__';\n\nexport function globalAssetGraphPathToString(path: Omit<ExplorerPath, 'pipelineName'>) {\n  const str = explorerPathToString({...path, pipelineName: __GLOBAL__}).replace(__GLOBAL__, '');\n  return `/asset-groups${str}`;\n}\n\nexport function globalAssetGraphPathFromString(pathName: string) {\n  return explorerPathFromString(__GLOBAL__ + pathName || '/');\n}\n\nexport function globalAssetGraphPathForAssetsAndDescendants(assetKeys: AssetKeyInput[]) {\n  // In a perfect world we populate ops query to \"asset1*,asset2*\" and then select the roots\n  // by passing opNames. If we don't have enough characters to do both, just populate the ops\n  // query. It might still be too long, but we tried.\n  const opsQuery = assetKeys.map((a) => `${tokenForAssetKey(a)}*`).join(', ');\n  const opNames =\n    opsQuery.length > URL_MAX_LENGTH / 2 ? [] : [assetKeys.map(tokenForAssetKey).join(',')];\n  return globalAssetGraphPathToString({opNames, opsQuery});\n}\n","import {Box, Button, DialogFooter, DialogHeader, Dialog, Icon} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {RepoSelector} from '../nav/RepoSelector';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nexport const RepoFilterButton: React.FC = () => {\n  const {allRepos, visibleRepos, toggleVisible} = React.useContext(WorkspaceContext);\n  const [open, setOpen] = React.useState(false);\n  return (\n    <>\n      <Dialog\n        canOutsideClickClose\n        canEscapeKeyClose\n        isOpen={open}\n        style={{width: 'auto'}}\n        onClose={() => setOpen(false)}\n      >\n        <DialogHeader icon=\"repo\" label=\"Filter code locations\" />\n        <RepoSelector\n          options={allRepos}\n          onBrowse={() => setOpen(false)}\n          onToggle={toggleVisible}\n          selected={visibleRepos}\n        />\n        <DialogFooter>\n          <Box padding={{top: 8}}>\n            <Button intent=\"none\" onClick={() => setOpen(false)}>\n              Done\n            </Button>\n          </Box>\n        </DialogFooter>\n      </Dialog>\n\n      <Button\n        intent=\"none\"\n        icon={<Icon name=\"folder\" />}\n        rightIcon={<Icon name=\"expand_more\" />}\n        onClick={() => setOpen(true)}\n      >\n        {`${visibleRepos.length} of ${allRepos.length}`}\n      </Button>\n    </>\n  );\n};\n","import {Button, Dialog, DialogBody, DialogFooter, Icon, Tooltip} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {useUnscopedPermissions} from '../app/Permissions';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {\n  reloadFnForWorkspace,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\nimport {RepositoryLocationErrorDialog} from './RepositoryLocationErrorDialog';\n\nexport const ReloadAllButton: React.FC<{label?: string}> = ({label = 'Reload all'}) => {\n  const {\n    permissions: {canReloadWorkspace},\n    disabledReasons,\n  } = useUnscopedPermissions();\n  const {reloading, tryReload, error, errorLocationId} = useRepositoryLocationReload({\n    scope: 'workspace',\n    reloadFn: reloadFnForWorkspace,\n  });\n\n  const [isOpen, setIsOpen] = React.useState(!!error);\n  React.useEffect(() => setIsOpen(!!error), [error]);\n\n  if (!canReloadWorkspace) {\n    return (\n      <Tooltip content={disabledReasons.canReloadWorkspace}>\n        <Button icon={<Icon name=\"refresh\" />} disabled intent=\"none\">\n          {label}\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <Button onClick={tryReload} icon={<Icon name=\"refresh\" />} loading={reloading} intent=\"none\">\n        {label}\n      </Button>\n      {errorLocationId ? (\n        <RepositoryLocationErrorDialog\n          error={error}\n          location={errorLocationId}\n          reloading={reloading}\n          onTryReload={tryReload}\n          onDismiss={() => setIsOpen(false)}\n          isOpen={isOpen}\n        />\n      ) : (\n        <Dialog\n          icon=\"error\"\n          title=\"Reload error\"\n          canEscapeKeyClose={false}\n          canOutsideClickClose={false}\n          style={{width: '90%'}}\n          isOpen={isOpen}\n        >\n          <DialogBody>{error && <PythonErrorInfo error={error} />}</DialogBody>\n          <DialogFooter>\n            <Button onClick={() => setIsOpen(false)}>Dismiss</Button>\n          </DialogFooter>\n        </Dialog>\n      )}\n    </>\n  );\n};\n"],"names":["Page","styled","div","withConfig","PageHeader","props","title","tags","right","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","PageHeaderContainer","background","Colors","Gray50","padding","top","left","border","side","width","color","KeylineGray","Box","flex","direction","justifyContent","bottom","alignItems","gap","wrap","useAssetGroupSelectorsForAssets","assets","React","uniqBy","map","buildAssetGroupSelector","filter","a","JSON","stringify","sort","b","groupName","localeCompare","FAKE_SELECTED_ITEM","repositoryLocationName","repositoryName","AssetGroupSuggest","param","assetGroups","value","onChange","repoKey","g","concat","repoKey1","repoContextNeeded","every","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Suggest","selectedItem","length","items","menuWidth","inputProps","style","placeholder","rightElement","ClearButton","onClick","marginTop","marginRight","Icon","name","undefined","inputValueRenderer","itemPredicate","query","partition","toLowerCase","includes","itemsEqual","isEqual","itemRenderer","assetGroup","MenuItem","active","modifiers","handleClick","text","margin","maxWidth","Checkbox","checked","some","size","readOnly","grow","shrink","overflow","span","opacity","paddingLeft","buildRepoPathForHuman","noResults","disabled","closeOnSelect","resetOnQuery","onItemSelect","item","nextValue","push","definition","repository","location","AssetsGroupsGlobalGraphRoot","path","useParams","WorkspaceContext","allRepos","visibleRepos","history","useHistory","useQueryPersistedState","encode","groups","decode","qs","parse","filters","setFilters","useDocumentTitle","onChangeExplorerPath","mode","pathname","globalAssetGraphPathToString","search","onNavigateToSourceAssetNode","node","assetDetailsPathForKey","assetKey","view","fetchOptions","hideEdgesToNodesOutsideQuery","hideNodesMatching","repo","repositoryLocation","nodeGroup","flatMap","display","flexDirection","paddingBottom","Heading","marginBottom","ReloadAllButton","label","AssetGraphExplorer","fetchOptionFilters","Fragment","RepoFilterButton","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_17__","_","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_18__","options","preferAssetRendering","explodeComposites","explorerPath","globalAssetGraphPathFromString","__webpack_exports__","__GLOBAL__","str","explorerPathToString","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_2__","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_3__","pipelineName","replace","pathName","explorerPathFromString","globalAssetGraphPathForAssetsAndDescendants","assetKeys","opsQuery","tokenForAssetKey","join","opNames","URL_MAX_LENGTH","toggleVisible","open","setOpen","Dialog","canOutsideClickClose","canEscapeKeyClose","isOpen","onClose","DialogHeader","icon","RepoSelector","onBrowse","onToggle","selected","DialogFooter","Button","intent","rightIcon","_param_label","useUnscopedPermissions","permissions","canReloadWorkspace","disabledReasons","useRepositoryLocationReload","scope","reloadFn","reloadFnForWorkspace","reloading","tryReload","error","errorLocationId","setIsOpen","loading","RepositoryLocationErrorDialog","onTryReload","onDismiss","DialogBody","PythonErrorInfo","Tooltip","content"],"sourceRoot":""}