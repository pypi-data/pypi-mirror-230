{"version":3,"file":"static/chunks/379.129f42bd071dcb23.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/assets/AssetGroupSuggest.tsx","webpack://_N_E/../ui-core/src/assets/AssetsGroupsGlobalGraphRoot.tsx","webpack://_N_E/../ui-core/src/instance/RepoFilterButton.tsx","webpack://_N_E/../ui-core/src/workspace/ReloadAllButton.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import {Box, Checkbox, Icon, MenuItem, Suggest} from '@dagster-io/ui-components';\nimport isEqual from 'lodash/isEqual';\nimport uniqBy from 'lodash/uniqBy';\nimport * as React from 'react';\n\nimport {AssetGroupSelector} from '../graphql/types';\nimport {ClearButton} from '../ui/ClearButton';\nimport {buildRepoPathForHuman} from '../workspace/buildRepoAddress';\n\ntype Asset = {\n  definition: {\n    groupName: string | null;\n    repository: {name: string; location: {name: string}};\n  } | null;\n};\n\nexport function useAssetGroupSelectorsForAssets(assets: Asset[] | undefined) {\n  return React.useMemo(\n    () =>\n      uniqBy(\n        (assets || []).map(buildAssetGroupSelector).filter((a) => !!a) as AssetGroupSelector[],\n        (a) => JSON.stringify(a),\n      ).sort((a, b) => a.groupName.localeCompare(b.groupName)),\n    [assets],\n  );\n}\n\n// We're using a <Suggest /> component because it's convenient to have typeahead behavior,\n// but we want to support mulit-selection. To achieve this, we show checkboxes on the items\n// and override the label text (\"2 groups\"). Blueprint doesn't need to know what the real\n// selection is, just that one exists.\nconst FAKE_SELECTED_ITEM: AssetGroupSelector = {\n  groupName: '-',\n  repositoryLocationName: '-',\n  repositoryName: '-',\n};\n\nexport const AssetGroupSuggest: React.FC<{\n  assetGroups: AssetGroupSelector[];\n  value: AssetGroupSelector[];\n  onChange: (g: AssetGroupSelector[]) => void;\n}> = ({assetGroups, value, onChange}) => {\n  const repoKey = (g: AssetGroupSelector) => `${g.repositoryName}@${g.repositoryLocationName}`;\n  const repoKey1 = assetGroups[0] ? repoKey(assetGroups[0]) : '';\n  const repoContextNeeded = !assetGroups.every((g) => repoKey1 === repoKey(g));\n\n  return (\n    <Suggest<AssetGroupSelector>\n      selectedItem={value.length ? FAKE_SELECTED_ITEM : null}\n      items={assetGroups}\n      menuWidth={300}\n      inputProps={{\n        style: {width: 200},\n        placeholder: 'Filter asset groups…',\n        rightElement: value.length ? (\n          <ClearButton onClick={() => onChange([])} style={{marginTop: 5, marginRight: 4}}>\n            <Icon name=\"cancel\" />\n          </ClearButton>\n        ) : undefined,\n      }}\n      inputValueRenderer={() =>\n        value.length === 1 ? value[0]!.groupName : value.length > 1 ? `${value.length} groups` : ``\n      }\n      itemPredicate={(query, partition) =>\n        query.length === 0 || partition.groupName.toLowerCase().includes(query.toLowerCase())\n      }\n      itemsEqual={isEqual}\n      itemRenderer={(assetGroup, props) => (\n        <MenuItem\n          active={props.modifiers.active}\n          onClick={props.handleClick}\n          key={JSON.stringify(assetGroup)}\n          text={\n            <Box\n              flex={{direction: 'row', gap: 6, alignItems: 'center'}}\n              margin={{left: 4}}\n              style={{maxWidth: '500px'}}\n            >\n              <Checkbox checked={value.some((g) => isEqual(g, assetGroup))} size=\"small\" readOnly />\n              <Box\n                flex={{direction: 'row', alignItems: 'center', grow: 1, shrink: 1}}\n                style={{overflow: 'hidden'}}\n              >\n                <div style={{overflow: 'hidden'}}>\n                  {assetGroup.groupName}\n                  {repoContextNeeded ? (\n                    <span style={{opacity: 0.5, paddingLeft: 4}}>\n                      {buildRepoPathForHuman(\n                        assetGroup.repositoryName,\n                        assetGroup.repositoryLocationName,\n                      )}\n                    </span>\n                  ) : undefined}\n                </div>\n              </Box>\n            </Box>\n          }\n        />\n      )}\n      noResults={<MenuItem disabled={true} text=\"No asset groups\" />}\n      closeOnSelect={false}\n      resetOnQuery={false}\n      onItemSelect={(item) => {\n        const nextValue = value.filter((g) => !isEqual(item, g));\n        if (nextValue.length === value.length) {\n          nextValue.push(item);\n        }\n        onChange(nextValue);\n      }}\n    />\n  );\n};\n\nexport function buildAssetGroupSelector(a: Asset) {\n  return a.definition && a.definition.groupName\n    ? {\n        groupName: a.definition.groupName,\n        repositoryName: a.definition.repository.name,\n        repositoryLocationName: a.definition.repository.location.name,\n      }\n    : null;\n}\n","import {Page, PageHeader, Heading} from '@dagster-io/ui-components';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphFetchScope} from '../asset-graph/useAssetGraphData';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {AssetGroupSelector} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {RepoFilterButton} from '../instance/RepoFilterButton';\nimport {\n  ExplorerPath,\n  explorerPathFromString,\n  explorerPathToString,\n} from '../pipelines/PipelinePathUtils';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nimport {AssetGroupSuggest, buildAssetGroupSelector} from './AssetGroupSuggest';\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\n\ninterface AssetGroupRootParams {\n  0: string;\n}\n\nconst __GLOBAL__ = '__GLOBAL__';\n\nexport const AssetsGroupsGlobalGraphRoot: React.FC = () => {\n  const {0: path} = useParams<AssetGroupRootParams>();\n  const {allRepos, visibleRepos} = React.useContext(WorkspaceContext);\n  const history = useHistory();\n\n  const [filters, setFilters] = useQueryPersistedState<{groups: AssetGroupSelector[]}>({\n    encode: ({groups}) => ({groups: JSON.stringify(groups)}),\n    decode: (qs) => ({groups: qs.groups ? JSON.parse(qs.groups) : []}),\n  });\n\n  useDocumentTitle(`Global Asset Lineage`);\n\n  const onChangeExplorerPath = React.useCallback(\n    (path: ExplorerPath, mode: 'push' | 'replace') => {\n      const str = explorerPathToString({...path, pipelineName: __GLOBAL__}).replace(__GLOBAL__, '');\n      history[mode]({pathname: `/asset-groups${str}`, search: history.location.search});\n    },\n    [history],\n  );\n\n  const onNavigateToSourceAssetNode = React.useCallback(\n    (node: AssetLocation) => {\n      history.push(assetDetailsPathForKey(node.assetKey, {view: 'definition'}));\n    },\n    [history],\n  );\n\n  const fetchOptions = React.useMemo(() => {\n    const options: AssetGraphFetchScope = {\n      hideEdgesToNodesOutsideQuery: false,\n      hideNodesMatching: (node) => {\n        if (\n          !visibleRepos.some(\n            (repo) =>\n              repo.repositoryLocation.name === node.repository.location.name &&\n              repo.repository.name === node.repository.name,\n          )\n        ) {\n          return true;\n        }\n        if (filters.groups?.length) {\n          const nodeGroup = buildAssetGroupSelector({definition: node});\n          if (!filters.groups.some((g) => isEqual(g, nodeGroup))) {\n            return true;\n          }\n        }\n\n        return false;\n      },\n    };\n    return options;\n  }, [filters.groups, visibleRepos]);\n\n  const assetGroups: AssetGroupSelector[] = React.useMemo(() => {\n    return visibleRepos.flatMap((repo) =>\n      repo.repository.assetGroups.map((g) => ({\n        groupName: g.groupName,\n        repositoryLocationName: repo.repositoryLocation.name,\n        repositoryName: repo.repository.name,\n      })),\n    );\n  }, [visibleRepos]);\n\n  return (\n    <Page style={{display: 'flex', flexDirection: 'column', paddingBottom: 0}}>\n      <PageHeader\n        title={<Heading>Global Asset Lineage</Heading>}\n        right={\n          <div style={{marginBottom: -8}}>\n            <ReloadAllButton label=\"Reload definitions\" />\n          </div>\n        }\n      />\n      <AssetGraphExplorer\n        fetchOptions={fetchOptions}\n        fetchOptionFilters={\n          <>\n            {allRepos.length > 1 && <RepoFilterButton />}\n            <AssetGroupSuggest\n              assetGroups={assetGroups}\n              value={filters.groups || []}\n              onChange={(groups) => setFilters({...filters, groups})}\n            />\n          </>\n        }\n        options={{preferAssetRendering: true, explodeComposites: true}}\n        explorerPath={explorerPathFromString(__GLOBAL__ + path || '/')}\n        onChangeExplorerPath={onChangeExplorerPath}\n        onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n      />\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default AssetsGroupsGlobalGraphRoot;\n","import {Box, Button, DialogFooter, DialogHeader, Dialog, Icon} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {RepoSelector} from '../nav/RepoSelector';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nexport const RepoFilterButton: React.FC = () => {\n  const {allRepos, visibleRepos, toggleVisible} = React.useContext(WorkspaceContext);\n  const [open, setOpen] = React.useState(false);\n  return (\n    <>\n      <Dialog\n        canOutsideClickClose\n        canEscapeKeyClose\n        isOpen={open}\n        style={{width: 'auto'}}\n        onClose={() => setOpen(false)}\n      >\n        <DialogHeader icon=\"repo\" label=\"Filter code locations\" />\n        <RepoSelector\n          options={allRepos}\n          onBrowse={() => setOpen(false)}\n          onToggle={toggleVisible}\n          selected={visibleRepos}\n        />\n        <DialogFooter>\n          <Box padding={{top: 8}}>\n            <Button intent=\"none\" onClick={() => setOpen(false)}>\n              Done\n            </Button>\n          </Box>\n        </DialogFooter>\n      </Dialog>\n\n      <Button\n        intent=\"none\"\n        icon={<Icon name=\"folder\" />}\n        rightIcon={<Icon name=\"expand_more\" />}\n        onClick={() => setOpen(true)}\n      >\n        {`${visibleRepos.length} of ${allRepos.length}`}\n      </Button>\n    </>\n  );\n};\n","import {Button, Dialog, DialogBody, DialogFooter, Icon, Tooltip} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {useUnscopedPermissions} from '../app/Permissions';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {\n  reloadFnForWorkspace,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\nimport {RepositoryLocationErrorDialog} from './RepositoryLocationErrorDialog';\n\nexport const ReloadAllButton: React.FC<{label?: string}> = ({label = 'Reload all'}) => {\n  const {\n    permissions: {canReloadWorkspace},\n    disabledReasons,\n  } = useUnscopedPermissions();\n  const {reloading, tryReload, error, errorLocationId} = useRepositoryLocationReload({\n    scope: 'workspace',\n    reloadFn: reloadFnForWorkspace,\n  });\n\n  const [isOpen, setIsOpen] = React.useState(!!error);\n  React.useEffect(() => setIsOpen(!!error), [error]);\n\n  if (!canReloadWorkspace) {\n    return (\n      <Tooltip content={disabledReasons.canReloadWorkspace}>\n        <Button icon={<Icon name=\"refresh\" />} disabled intent=\"none\">\n          {label}\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <Button onClick={tryReload} icon={<Icon name=\"refresh\" />} loading={reloading} intent=\"none\">\n        {label}\n      </Button>\n      {errorLocationId ? (\n        <RepositoryLocationErrorDialog\n          error={error}\n          location={errorLocationId}\n          reloading={reloading}\n          onTryReload={tryReload}\n          onDismiss={() => setIsOpen(false)}\n          isOpen={isOpen}\n        />\n      ) : (\n        <Dialog\n          icon=\"error\"\n          title=\"Reload error\"\n          canEscapeKeyClose={false}\n          canOutsideClickClose={false}\n          style={{width: '90%'}}\n          isOpen={isOpen}\n        >\n          <DialogBody>{error && <PythonErrorInfo error={error} />}</DialogBody>\n          <DialogFooter>\n            <Button onClick={() => setIsOpen(false)}>Dismiss</Button>\n          </DialogFooter>\n        </Dialog>\n      )}\n    </>\n  );\n};\n"],"names":["useAssetGroupSelectorsForAssets","assets","React","uniqBy","map","buildAssetGroupSelector","filter","a","JSON","stringify","sort","b","groupName","localeCompare","FAKE_SELECTED_ITEM","repositoryLocationName","repositoryName","AssetGroupSuggest","param","assetGroups","value","onChange","repoKey","g","concat","repoKey1","repoContextNeeded","every","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Suggest","selectedItem","length","items","menuWidth","inputProps","style","width","placeholder","rightElement","ClearButton","onClick","marginTop","marginRight","Icon","name","undefined","inputValueRenderer","itemPredicate","query","partition","toLowerCase","includes","itemsEqual","isEqual","itemRenderer","assetGroup","props","MenuItem","active","modifiers","handleClick","text","jsxs","Box","flex","direction","gap","alignItems","margin","left","maxWidth","Checkbox","checked","some","size","readOnly","grow","shrink","overflow","div","span","opacity","paddingLeft","buildRepoPathForHuman","noResults","disabled","closeOnSelect","resetOnQuery","onItemSelect","item","nextValue","push","definition","repository","location","__GLOBAL__","AssetsGroupsGlobalGraphRoot","path","useParams","WorkspaceContext","allRepos","visibleRepos","history","useHistory","useQueryPersistedState","encode","groups","decode","qs","parse","filters","setFilters","useDocumentTitle","onChangeExplorerPath","mode","str","explorerPathToString","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_14__","_","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_15__","pipelineName","replace","pathname","search","onNavigateToSourceAssetNode","node","assetDetailsPathForKey","assetKey","view","fetchOptions","hideEdgesToNodesOutsideQuery","hideNodesMatching","repo","repositoryLocation","nodeGroup","flatMap","Page","display","flexDirection","paddingBottom","PageHeader","title","Heading","right","marginBottom","ReloadAllButton","label","AssetGraphExplorer","fetchOptionFilters","Fragment","RepoFilterButton","options","preferAssetRendering","explodeComposites","explorerPath","explorerPathFromString","__webpack_exports__","toggleVisible","open","setOpen","Dialog","canOutsideClickClose","canEscapeKeyClose","isOpen","onClose","DialogHeader","icon","RepoSelector","onBrowse","onToggle","selected","DialogFooter","padding","top","Button","intent","rightIcon","_param_label","useUnscopedPermissions","permissions","canReloadWorkspace","disabledReasons","useRepositoryLocationReload","scope","reloadFn","reloadFnForWorkspace","reloading","tryReload","error","errorLocationId","setIsOpen","loading","RepositoryLocationErrorDialog","onTryReload","onDismiss","DialogBody","PythonErrorInfo","Tooltip","content"],"sourceRoot":""}