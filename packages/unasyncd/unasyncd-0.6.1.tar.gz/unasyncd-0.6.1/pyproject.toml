[tool.poetry]
name = "unasyncd"
version = "0.6.1"
description = "A tool to transform asynchronous Python code to synchronous Python code."
authors = ["Janek Nouvertn√© <j.a.nouvertne@posteo.de>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
libcst = "^1.0.0"
click = "^8.1.7"
rich = "^13.5.2"
anyio = "^3.7.0"
msgspec = "^0.17.0"
tomli-w = "^1.0.0"
rich-click = "^1.6.1"
ruff = {version = "*", optional = true}
importlib-metadata = { version = "^6.8.0", python = "<3.10" }


[tool.poetry.extras]
ruff = ["ruff"]


[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pre-commit = "^3.3.2"
pytest-mock = "^3.10.0"
ruff = "*"


[tool.poetry.scripts]
unasyncd = "unasyncd.cli:main"


[tool.ruff]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "ERA", # eradicate
    "I",   # isort
    "RUF", # Ruff-specific rules
    "TCH", # flake8-type-checking
    "UP",  # pyupgrade
]
target-version = "py39"

[tool.mypy]
strict = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
