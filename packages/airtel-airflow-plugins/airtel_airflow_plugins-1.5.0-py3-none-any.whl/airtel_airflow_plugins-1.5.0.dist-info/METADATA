Metadata-Version: 2.1
Name: airtel-airflow-plugins
Version: 1.5.0
Summary: DARTS airflow plugins containing custom operators, sensors, callbacks and hooks
Home-page: https://code.airtelworld.in:7990/bitbucket/scm/sr/darts-airflow-plugins.git
Author: Ashutosh, Ankita, Deepak
Author-email: ashutosh1.joshi@airtel.com, ankita1.verma@airtel.com, deepak.lamba@airtel.com
License: UNKNOWN
Keywords: airflow,scheduler
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License 
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: apache-airflow (==2.3.2)
Requires-Dist: apache-airflow-providers-hashicorp (==2.2.0)
Requires-Dist: apache-airflow-providers-oracle (==2.2.3)
Requires-Dist: apache-airflow-providers-ssh (==2.4.4)

**##### Airtel Airflow Plugins Library**

##### **Table of Contents**

Overview
Setup
Usage

Overview
Airtel Airflow Plugins Library containing all custom operators, sensors, callbacks and hooks. 

Setup
first create virtual env in your local setup - 
Note - make sure to create virtual env ending with _venv so the at the time of pushing code to git it must be ignored.
`python3 -m venv <virtual_env_name_venv>`
`source <virtual_env_name_venv>/bin/activate`
Change the interpreter setting in your IDE to point it to correct virtual env

First, clone this repo to your local system. After you clone the repo, make sure to run the setup.py file, so you can install any dependencies you may need. To run the setup.py file, run the following command in your terminal.

Run requirement.txt in your virtual env. This will install all the dependencies listed in the requirements.txt file
`pip install -r requirements.txt`

Below command will create wheel file.
`python setup.py bdist_wheel`

Please make sure to have .pypirc file in your local home directory. We have attached sample in project home dir as well. 
This file contains repository url along with credential which we would be needing while running below command to publish 
the package on PYPI repository.

Below command will publish the package on PyPI repository
`twine upload --repository nexus dist/*`

Usage
The plugins package can be used in any Airflow setup for custom modules (Operators / Plugins / Sensors / Callbacks).  

