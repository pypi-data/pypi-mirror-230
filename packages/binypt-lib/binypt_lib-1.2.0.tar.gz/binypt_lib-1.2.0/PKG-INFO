Metadata-Version: 2.1
Name: binypt-lib
Version: 1.2.0
Summary: Library to download data charts from Binance
Home-page: https://github.com/Tejaromalius/Binypt-lib
License: MIT
Keywords: crypto,binance
Author: tejaromalius
Author-email: tayefi.ilia@protonmail.com
Requires-Python: ==3.10.*
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Utilities
Requires-Dist: datetime (>=5.2,<6.0)
Requires-Dist: loguru (>=0.7.2,<0.8.0)
Requires-Dist: numpy (>=1.25.2,<2.0.0)
Requires-Dist: pandas (>=2.1.0,<3.0.0)
Requires-Dist: progress (>=1.6,<2.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Project-URL: Repository, https://github.com/Tejaromalius/Binypt-lib
Description-Content-Type: text/markdown

# Binypt: A Python Library for Cryptocurrency Data Retrieval and Processing

![MIT License](https://img.shields.io/badge/license-MIT-blue.svg)
![version](https://img.shields.io/badge/version-1.2.0-white?labelColor=purple&style=flat)

## Overview

**Binypt** is a Python library designed for retrieving historical cryptocurrency price data from the Binance exchange. It allows you to specify trading pairs, time intervals, and date ranges to download and work with historical price data efficiently. This library is a helpful tool for anyone interested in analyzing or visualizing cryptocurrency price trends.

## Features

- Retrieve historical cryptocurrency price data from Binance.
- Specify trading pairs, time intervals, and date ranges.
- Export data in various formats such as CSV, Excel, or Pickle.
- Access data as a Pandas DataFrame for easy analysis.

## Installation

You can install Binypt using `pip`:

```bash
pip install binypt-lib
```

## Usage

Here's a brief overview of how to use Binypt:

```python
from binypt import Binypt

# Initialize Binypt with your desired parameters
trading_pair = "BTCUSDT"
interval = "1h"
starting_date = "01/01/2023-00:00:00"
ending_date = "01/31/2023-23:59:59"
verbosity = ["bar", "logging"]

binypt = Binypt(trading_pair, interval, starting_date, ending_date, verbosity)

# Download and process the data
output_path = "my_file.csv"
output_file_extension = "csv"
binypt.export(output_path, output_file_extension)

# Access the data as a Pandas DataFrame
price_data = binypt.data

# You can now perform various data analysis or visualization tasks with the price_data DataFrame
```

## Contributions

Contributions to this project are welcome. Feel free to submit bug reports, feature requests, or pull requests!
---

*Generated by ChatGPT*

