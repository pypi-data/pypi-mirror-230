Metadata-Version: 2.1
Name: option-wiz
Version: 0.0.2
Summary: Package for option calculations
Home-page: https://github.com/nisaac21/option_py
Author: Neil Isaac et al.
Author-email: neilisaac08@gmail.com
License: MIT
Platform: Windows
Platform: Linux
Platform: Solaris
Platform: Mac OS-X
Platform: Unix
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development
Classifier: Topic :: Office/Business :: Financial
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# Option Wiz

Package for option traders and developers 

## About the Package

Options are versatile financial instruments that provide investors and traders with unique opportunities in the world of finance. These contracts grant the holder the right, but not the obligation, to buy or sell an underlying asset, such as stocks, at a predetermined price (strike price) within a specified time frame (expiration date). Options are used for various purposes, including hedging against price fluctuations, generating income, and speculating on market movements. However, navigating the complexities of options pricing and risk analysis can be a daunting task. This is where an options calculator becomes an invaluable asset. An options calculator automates the intricate mathematical calculations required to assess option prices and risk metrics, allowing traders to make well-informed decisions swiftly. It simplifies the evaluation of potential profit and loss scenarios, helping traders optimize their strategies and minimize risk. Whether you're a seasoned professional or just entering the world of options, having an options calculator at your disposal is essential for enhancing your trading strategies and financial decision-making.

- Easily calculate option prices using the Black-Scholes, Binomial, or other popular pricing models.
- Assess risk and reward with delta, gamma, theta, and other essential option Greeks.
- Customize your analysis by specifying strike prices, expiration dates, and implied volatility.
- Integrate seamlessly with your Python projects for quantitative analysis and strategy development.

## Installation 

```pip install option-wiz```

## Contributing 

Option Wiz encourages all contributors to fix/find bugs, develop tests, and implement new features. Make sure to use a virtual environment or package manager when developing, using the versions specified in requirements.txt Please follow these steps when contributing

1. Fork the repository
2. Clone the fork to your local machine
3. Create a new branch for you work 
4. Make the changes to your code. Ensure no breaking changes 
5. Write test for all functionality, ensure all existing tests still pass
6. Commit changes to your forked branch with clear and concise commit messages
7. Create a pull request (PR) to main repository's branch
8. Descripe purpose and scope of your PR
9. Await feedback and collaborate with administrative managers
10. Address feedback and make necessary changes 
11. After approval, changes will be merged 

Reporting Bugs: Please report all bugs via the [repository's github issues](https://github.com/nisaac21/option_wiz/issues) with the label bug. In the report, include... 
- bug descriptions: describe encountered bug, provide concise and clear description of the issue 
- reproduction: describe the steps on how to reproduce the bug 
- actula behavior: desribe what is happening when bug occurs
- expected behavior: describe what is supposed to happen if bug were fixed
- error message: include any error messages if there 
- versions: pacakge version and python version, 
- local set up: descripe local set ups such as operating system and RAM 
- additional context: include any additional context if needed 


Suggesting Features: Please describe all desired features via the [repository's github issues](https://github.com/nisaac21/option_wiz/issues) with the label enhancements. In submition include
- feature description: include as much detail as relevant
- use case: explain why this feature would be useful and what scenarios 
- expected behavior: describe what the specific feature(s) is and how it will work (and technical implementation ideas if relevant)
- additional context: any additional context required not covered by the above 
