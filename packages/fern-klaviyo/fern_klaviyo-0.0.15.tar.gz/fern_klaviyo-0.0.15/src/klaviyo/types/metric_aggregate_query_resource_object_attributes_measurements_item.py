# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class MetricAggregateQueryResourceObjectAttributesMeasurementsItem(str, enum.Enum):
    """
    Supported measurements for aggregation
    """

    COUNT = "count"
    SUM_VALUE = "sum_value"
    UNIQUE = "unique"

    def visit(
        self,
        count: typing.Callable[[], T_Result],
        sum_value: typing.Callable[[], T_Result],
        unique: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is MetricAggregateQueryResourceObjectAttributesMeasurementsItem.COUNT:
            return count()
        if self is MetricAggregateQueryResourceObjectAttributesMeasurementsItem.SUM_VALUE:
            return sum_value()
        if self is MetricAggregateQueryResourceObjectAttributesMeasurementsItem.UNIQUE:
            return unique()
