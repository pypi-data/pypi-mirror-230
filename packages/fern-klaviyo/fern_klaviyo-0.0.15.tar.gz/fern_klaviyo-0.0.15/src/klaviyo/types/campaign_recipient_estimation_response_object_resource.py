# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .campaign_recipient_estimation_enum import CampaignRecipientEstimationEnum
from .campaign_recipient_estimation_response_object_resource_attributes import (
    CampaignRecipientEstimationResponseObjectResourceAttributes,
)
from .object_links import ObjectLinks


class CampaignRecipientEstimationResponseObjectResource(pydantic.BaseModel):
    type: CampaignRecipientEstimationEnum
    id: str = pydantic.Field(description="The ID of the campaign for which to get the estimated number of recipients")
    attributes: CampaignRecipientEstimationResponseObjectResourceAttributes
    links: ObjectLinks

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
