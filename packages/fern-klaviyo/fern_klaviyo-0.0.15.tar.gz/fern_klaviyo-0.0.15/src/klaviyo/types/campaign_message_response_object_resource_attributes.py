# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .campaign_message_response_object_resource_attributes_content import (
    CampaignMessageResponseObjectResourceAttributesContent,
)
from .render_options_sub_object import RenderOptionsSubObject
from .send_time_sub_object import SendTimeSubObject


class CampaignMessageResponseObjectResourceAttributes(pydantic.BaseModel):
    label: str = pydantic.Field(description="The label or name on the message")
    channel: str = pydantic.Field(description="The channel the message is to be sent on")
    content: CampaignMessageResponseObjectResourceAttributesContent = pydantic.Field(
        description="Additional attributes relating to the content of the message"
    )
    send_times: typing.Optional[typing.List[SendTimeSubObject]] = pydantic.Field(
        description="The list of appropriate Send Time Sub-objects associated with the message"
    )
    render_options: typing.Optional[RenderOptionsSubObject] = pydantic.Field(
        description="Additional options for rendering the message"
    )
    created_at: typing.Optional[dt.datetime] = pydantic.Field(description="The datetime when the message was created")
    updated_at: typing.Optional[dt.datetime] = pydantic.Field(
        description="The datetime when the message was last updated"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
