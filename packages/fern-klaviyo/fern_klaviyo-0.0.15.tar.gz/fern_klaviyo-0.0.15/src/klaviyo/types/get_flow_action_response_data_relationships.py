# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .get_flow_action_response_data_relationships_flow import GetFlowActionResponseDataRelationshipsFlow
from .get_flow_action_response_data_relationships_flow_messages import (
    GetFlowActionResponseDataRelationshipsFlowMessages,
)


class GetFlowActionResponseDataRelationships(pydantic.BaseModel):
    flow: typing.Optional[GetFlowActionResponseDataRelationshipsFlow]
    flow_messages: typing.Optional[GetFlowActionResponseDataRelationshipsFlowMessages] = pydantic.Field(
        alias="flow-messages"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
