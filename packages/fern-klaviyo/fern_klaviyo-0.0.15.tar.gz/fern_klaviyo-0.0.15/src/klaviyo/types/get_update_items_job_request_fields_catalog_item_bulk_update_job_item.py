# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class GetUpdateItemsJobRequestFieldsCatalogItemBulkUpdateJobItem(str, enum.Enum):
    JOB_ID = "job_id"
    STATUS = "status"
    CREATED_AT = "created_at"
    TOTAL_COUNT = "total_count"
    COMPLETED_COUNT = "completed_count"
    FAILED_COUNT = "failed_count"
    COMPLETED_AT = "completed_at"
    ERRORS = "errors"
    EXPIRES_AT = "expires_at"

    def visit(
        self,
        job_id: typing.Callable[[], T_Result],
        status: typing.Callable[[], T_Result],
        created_at: typing.Callable[[], T_Result],
        total_count: typing.Callable[[], T_Result],
        completed_count: typing.Callable[[], T_Result],
        failed_count: typing.Callable[[], T_Result],
        completed_at: typing.Callable[[], T_Result],
        errors: typing.Callable[[], T_Result],
        expires_at: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is GetUpdateItemsJobRequestFieldsCatalogItemBulkUpdateJobItem.JOB_ID:
            return job_id()
        if self is GetUpdateItemsJobRequestFieldsCatalogItemBulkUpdateJobItem.STATUS:
            return status()
        if self is GetUpdateItemsJobRequestFieldsCatalogItemBulkUpdateJobItem.CREATED_AT:
            return created_at()
        if self is GetUpdateItemsJobRequestFieldsCatalogItemBulkUpdateJobItem.TOTAL_COUNT:
            return total_count()
        if self is GetUpdateItemsJobRequestFieldsCatalogItemBulkUpdateJobItem.COMPLETED_COUNT:
            return completed_count()
        if self is GetUpdateItemsJobRequestFieldsCatalogItemBulkUpdateJobItem.FAILED_COUNT:
            return failed_count()
        if self is GetUpdateItemsJobRequestFieldsCatalogItemBulkUpdateJobItem.COMPLETED_AT:
            return completed_at()
        if self is GetUpdateItemsJobRequestFieldsCatalogItemBulkUpdateJobItem.ERRORS:
            return errors()
        if self is GetUpdateItemsJobRequestFieldsCatalogItemBulkUpdateJobItem.EXPIRES_AT:
            return expires_at()
