# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class StreetAddress(pydantic.BaseModel):
    address_1: str = pydantic.Field(alias="address1")
    address_2: str = pydantic.Field(alias="address2")
    city: str
    region: str = pydantic.Field(description="State, province, or region.")
    country: str = pydantic.Field(
        description="Two-letter [ISO country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)"
    )
    zip: str

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
