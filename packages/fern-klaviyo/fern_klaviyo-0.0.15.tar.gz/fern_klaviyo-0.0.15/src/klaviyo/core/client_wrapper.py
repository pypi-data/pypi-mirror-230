# This file was auto-generated by Fern from our API Definition.

import typing

import httpx
import typing_extensions


class BaseClientWrapper:
    def __init__(self, *, revision: typing_extensions.Literal["2023-08-15"], api_key: str, base_url: str):
        self._revision = revision
        self.api_key = api_key
        self._base_url = base_url

    def get_headers(self) -> typing.Dict[str, str]:
        headers: typing.Dict[str, str] = {
            "X-Fern-Language": "Python",
            "X-Fern-SDK-Name": "fern-klaviyo",
            "X-Fern-SDK-Version": "0.0.15",
        }
        headers["revision"] = self._revision
        headers["Authorization"] = self.api_key
        return headers

    def get_base_url(self) -> str:
        return self._base_url


class SyncClientWrapper(BaseClientWrapper):
    def __init__(
        self,
        *,
        revision: typing_extensions.Literal["2023-08-15"],
        api_key: str,
        base_url: str,
        httpx_client: httpx.Client
    ):
        super().__init__(revision=revision, api_key=api_key, base_url=base_url)
        self.httpx_client = httpx_client


class AsyncClientWrapper(BaseClientWrapper):
    def __init__(
        self,
        *,
        revision: typing_extensions.Literal["2023-08-15"],
        api_key: str,
        base_url: str,
        httpx_client: httpx.AsyncClient
    ):
        super().__init__(revision=revision, api_key=api_key, base_url=base_url)
        self.httpx_client = httpx_client
