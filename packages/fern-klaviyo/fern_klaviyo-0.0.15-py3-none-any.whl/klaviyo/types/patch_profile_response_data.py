# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .object_links import ObjectLinks
from .patch_profile_response_data_attributes import PatchProfileResponseDataAttributes
from .patch_profile_response_data_relationships import PatchProfileResponseDataRelationships
from .profile_enum import ProfileEnum


class PatchProfileResponseData(pydantic.BaseModel):
    type: ProfileEnum
    id: typing.Optional[str] = pydantic.Field(
        description="Primary key that uniquely identifies this profile. Generated by Klaviyo."
    )
    attributes: PatchProfileResponseDataAttributes
    relationships: typing.Optional[PatchProfileResponseDataRelationships]
    links: ObjectLinks

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
