# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class PostCatalogCategoryDeleteJobResponseDataAttributesStatus(str, enum.Enum):
    """
    Status of the asynchronous job.
    """

    CANCELLED = "cancelled"
    COMPLETE = "complete"
    PROCESSING = "processing"
    QUEUED = "queued"

    def visit(
        self,
        cancelled: typing.Callable[[], T_Result],
        complete: typing.Callable[[], T_Result],
        processing: typing.Callable[[], T_Result],
        queued: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is PostCatalogCategoryDeleteJobResponseDataAttributesStatus.CANCELLED:
            return cancelled()
        if self is PostCatalogCategoryDeleteJobResponseDataAttributesStatus.COMPLETE:
            return complete()
        if self is PostCatalogCategoryDeleteJobResponseDataAttributesStatus.PROCESSING:
            return processing()
        if self is PostCatalogCategoryDeleteJobResponseDataAttributesStatus.QUEUED:
            return queued()
