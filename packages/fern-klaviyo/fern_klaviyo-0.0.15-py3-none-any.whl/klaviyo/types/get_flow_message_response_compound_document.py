# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .get_flow_message_response_compound_document_data import GetFlowMessageResponseCompoundDocumentData
from .get_flow_message_response_compound_document_included_item import (
    GetFlowMessageResponseCompoundDocumentIncludedItem,
)


class GetFlowMessageResponseCompoundDocument(pydantic.BaseModel):
    data: GetFlowMessageResponseCompoundDocumentData
    included: typing.Optional[typing.List[GetFlowMessageResponseCompoundDocumentIncludedItem]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
