# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .flow_action_response_object_resource_attributes_tracking_options import (
    FlowActionResponseObjectResourceAttributesTrackingOptions,
)
from .send_options import SendOptions
from .sms_render_options import SmsRenderOptions


class FlowActionResponseObjectResourceAttributes(pydantic.BaseModel):
    action_type: typing.Optional[str]
    status: typing.Optional[str]
    created: typing.Optional[dt.datetime]
    updated: typing.Optional[dt.datetime]
    settings: typing.Optional[typing.Dict[str, typing.Any]]
    tracking_options: typing.Optional[FlowActionResponseObjectResourceAttributesTrackingOptions]
    send_options: typing.Optional[SendOptions]
    render_options: typing.Optional[SmsRenderOptions]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
