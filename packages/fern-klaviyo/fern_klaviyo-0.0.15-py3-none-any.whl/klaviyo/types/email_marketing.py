# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .email_marketing_list_suppression import EmailMarketingListSuppression
from .email_marketing_suppression import EmailMarketingSuppression


class EmailMarketing(pydantic.BaseModel):
    consent: str = pydantic.Field(description="The consent status for email marketing.")
    timestamp: typing.Optional[dt.datetime] = pydantic.Field(
        description="The timestamp when consent record or updated for email marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
    )
    method: str = pydantic.Field(description="The method by which the profile was subscribed to email marketing.")
    method_detail: typing.Optional[str] = pydantic.Field(
        description="Additional details about the method by which the profile was subscribed to SMS marketing. This may be empty if no details were provided."
    )
    custom_method_detail: typing.Optional[str] = pydantic.Field(
        description="Additional detail provided by the caller when the profile was subscribed. This may be empty if no details were provided."
    )
    double_optin: typing.Optional[bool] = pydantic.Field(
        description="Whether the profile was subscribed to email marketing using a double opt-in."
    )
    suppressions: typing.Optional[typing.List[EmailMarketingSuppression]] = pydantic.Field(
        description="The global email marketing suppressions for this profile."
    )
    list_suppressions: typing.Optional[typing.List[EmailMarketingListSuppression]] = pydantic.Field(
        description="The list suppressions for this profile."
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
