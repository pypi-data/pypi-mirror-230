# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class GetFlowActionFlowRequestFieldsFlowItem(str, enum.Enum):
    NAME = "name"
    STATUS = "status"
    ARCHIVED = "archived"
    CREATED = "created"
    UPDATED = "updated"
    TRIGGER_TYPE = "trigger_type"

    def visit(
        self,
        name: typing.Callable[[], T_Result],
        status: typing.Callable[[], T_Result],
        archived: typing.Callable[[], T_Result],
        created: typing.Callable[[], T_Result],
        updated: typing.Callable[[], T_Result],
        trigger_type: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is GetFlowActionFlowRequestFieldsFlowItem.NAME:
            return name()
        if self is GetFlowActionFlowRequestFieldsFlowItem.STATUS:
            return status()
        if self is GetFlowActionFlowRequestFieldsFlowItem.ARCHIVED:
            return archived()
        if self is GetFlowActionFlowRequestFieldsFlowItem.CREATED:
            return created()
        if self is GetFlowActionFlowRequestFieldsFlowItem.UPDATED:
            return updated()
        if self is GetFlowActionFlowRequestFieldsFlowItem.TRIGGER_TYPE:
            return trigger_type()
