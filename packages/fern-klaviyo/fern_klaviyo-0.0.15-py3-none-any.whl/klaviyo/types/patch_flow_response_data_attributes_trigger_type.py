# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class PatchFlowResponseDataAttributesTriggerType(str, enum.Enum):
    """
    Corresponds to the object which triggered the flow.
    """

    ADDED_TO_LIST = "Added to List"
    DATE_BASED = "Date Based"
    METRIC = "Metric"
    PRICE_DROP = "Price Drop"
    UNCONFIGURED = "Unconfigured"

    def visit(
        self,
        added_to_list: typing.Callable[[], T_Result],
        date_based: typing.Callable[[], T_Result],
        metric: typing.Callable[[], T_Result],
        price_drop: typing.Callable[[], T_Result],
        unconfigured: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is PatchFlowResponseDataAttributesTriggerType.ADDED_TO_LIST:
            return added_to_list()
        if self is PatchFlowResponseDataAttributesTriggerType.DATE_BASED:
            return date_based()
        if self is PatchFlowResponseDataAttributesTriggerType.METRIC:
            return metric()
        if self is PatchFlowResponseDataAttributesTriggerType.PRICE_DROP:
            return price_drop()
        if self is PatchFlowResponseDataAttributesTriggerType.UNCONFIGURED:
            return unconfigured()
