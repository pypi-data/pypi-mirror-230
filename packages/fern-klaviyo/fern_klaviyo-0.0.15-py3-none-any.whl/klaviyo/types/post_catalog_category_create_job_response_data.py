# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .catalog_category_bulk_create_job_enum import CatalogCategoryBulkCreateJobEnum
from .object_links import ObjectLinks
from .post_catalog_category_create_job_response_data_attributes import (
    PostCatalogCategoryCreateJobResponseDataAttributes,
)
from .post_catalog_category_create_job_response_data_relationships import (
    PostCatalogCategoryCreateJobResponseDataRelationships,
)


class PostCatalogCategoryCreateJobResponseData(pydantic.BaseModel):
    type: CatalogCategoryBulkCreateJobEnum
    attributes: PostCatalogCategoryCreateJobResponseDataAttributes
    relationships: typing.Optional[PostCatalogCategoryCreateJobResponseDataRelationships]
    links: ObjectLinks

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
