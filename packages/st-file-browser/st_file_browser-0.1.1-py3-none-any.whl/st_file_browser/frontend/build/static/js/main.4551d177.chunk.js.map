{"version":3,"sources":["actions.jsx","StFileBrowser.tsx","index.tsx"],"names":["Actions","props","selectedItems","isFolder","icons","nameFilter","canCreateFolder","onCreateFolder","canRenameFile","onRenameFile","canRenameFolder","onRenameFolder","canDeleteFile","onDeleteFile","canDownloadFile","canDeleteFolder","onDeleteFolder","onDownloadFile","canDownloadFolder","onDownloadFolder","canChooseFile","onChooseFile","canChooseFolder","onChooseFolder","actions","length","selectedItemsAction","filter","item","action","_toConsumableArray","Set","actionText","React","createElement","className","Loading","push","key","onClick","href","role","Folder","itemsWithoutKeyDerived","find","keyDerived","Rename","Delete","Download","aria-hidden","defaultProps","StreamlitEventType","FileBrowserNative","_StreamlitComponentBa","_inherits","_super","_createSuper","_this","_classCallCheck","call","args","folderOpenHandler","opts","ajustHeight","folderCloseHandler","fileSelectedHandler","ignore_file_select_event","file","files","path","event","type","SELECT_FILE","target","Streamlit","setComponentValue","convertFiles","map","modified","update_time","size","noop","Fragment","render","that","_assertThisInitialized","FileBrowser","Object","assign","showActionBar","canFilter","detailRenderer","Icons","FontAwesome","onFolderOpen","onFolderClose","onSelect","actionRenderer","_objectSpread","arguments","undefined","show_choose_file","_createClass","value","revoke_step","root","document","getElementById","height","Math","min","clientHeight","scrollHeight","offsetHeight","setFrameHeight","setTimeout","this","StreamlitComponentBase","StreamlitFileBrowserNative","withStreamlitConnection","FileBrowserWrapper","_StreamlitComponentBa2","_super2","_this2","ReactDOM","StrictMode","StFileBrowser"],"mappings":"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","file":"static/js/main.4551d177.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Actions = (props) => {\r\n  const {\r\n    selectedItems,\r\n    isFolder,\r\n    icons,\r\n    nameFilter,\r\n\r\n    canCreateFolder,\r\n    onCreateFolder,\r\n\r\n    canRenameFile,\r\n    onRenameFile,\r\n\r\n    canRenameFolder,\r\n    onRenameFolder,\r\n\r\n    canDeleteFile,\r\n    onDeleteFile,\r\n\r\n    canDeleteFolder,\r\n    onDeleteFolder,\r\n\r\n    canDownloadFile,\r\n    onDownloadFile,\r\n\r\n    canDownloadFolder,\r\n    onDownloadFolder,\r\n\r\n    canChooseFile,\r\n    onChooseFile,\r\n\r\n    canChooseFolder,\r\n    onChooseFolder,\r\n  } = props\r\n\r\n  /** @type any */\r\n  let actions = []\r\n\r\n  if (selectedItems.length) {\r\n    // Something is selected. Build custom actions depending on what it is.\r\n    const selectedItemsAction = selectedItems.filter(item => item.action)\r\n    if (selectedItemsAction.length === selectedItems.length && [...new Set(selectedItemsAction)].length === 1) {\r\n      // Selected item has an active action against it. Disable all other actions.\r\n      let actionText\r\n      switch (selectedItemsAction[0].action) {\r\n        case 'delete':\r\n          actionText = 'Deleting ...'\r\n          break\r\n\r\n        case 'rename':\r\n          actionText = 'Renaming ...'\r\n          break\r\n\r\n        default:\r\n          actionText = 'Moving ...'\r\n          break\r\n      }\r\n\r\n      actions = (\r\n        // TODO: Enable plugging in custom spinner.\r\n        <div className=\"item-actions\">\r\n          {icons.Loading} {actionText}\r\n        </div>\r\n      )\r\n    } else {\r\n      if (isFolder && canCreateFolder && !nameFilter) {\r\n        actions.push(\r\n          <li key=\"action-add-folder\">\r\n            <a\r\n              onClick={onCreateFolder}\r\n              href=\"#\"\r\n              role=\"button\"\r\n            >\r\n              {icons.Folder}\r\n              &nbsp;Add Subfolder\r\n            </a>\r\n          </li>\r\n        )\r\n      }\r\n\r\n      const itemsWithoutKeyDerived = selectedItems.find(item => !item.keyDerived)\r\n      if (!itemsWithoutKeyDerived && !isFolder && canRenameFile && selectedItems.length === 1) {\r\n        actions.push(\r\n          <li key=\"action-rename\">\r\n            <a\r\n              onClick={onRenameFile}\r\n              href=\"#\"\r\n              role=\"button\"\r\n            >\r\n              {icons.Rename}\r\n              &nbsp;Rename\r\n            </a>\r\n          </li>\r\n        )\r\n      } else if (!itemsWithoutKeyDerived && isFolder && canRenameFolder) {\r\n        actions.push(\r\n          <li key=\"action-rename\">\r\n            <a\r\n              onClick={onRenameFolder}\r\n              href=\"#\"\r\n              role=\"button\"\r\n            >\r\n              {icons.Rename}\r\n              &nbsp;Rename\r\n            </a>\r\n          </li>\r\n        )\r\n      }\r\n\r\n      if (!itemsWithoutKeyDerived && !isFolder && canDeleteFile) {\r\n        actions.push(\r\n          <li key=\"action-delete\">\r\n            <a\r\n              onClick={onDeleteFile}\r\n              href=\"#\"\r\n              role=\"button\"\r\n            >\r\n              {icons.Delete}\r\n              &nbsp;Delete\r\n            </a>\r\n          </li>\r\n        )\r\n      }\r\n      // else if (!itemsWithoutKeyDerived && isFolder && canDeleteFolder) {\r\n      //   actions.push(\r\n      //     <li key=\"action-delete\">\r\n      //       <a\r\n      //         onClick={onDeleteFolder}\r\n      //         href=\"#\"\r\n      //         role=\"button\"\r\n      //       >\r\n      //         {icons.Delete}\r\n      //         &nbsp;Delete\r\n      //       </a>\r\n      //     </li>\r\n      //   )\r\n      // }\r\n\r\n      if ((!isFolder && canDownloadFile) || (isFolder && canDownloadFolder)) {\r\n        actions.push(\r\n          <li key=\"action-download\">\r\n            <a\r\n              onClick={isFolder ? onDownloadFolder : onDownloadFile}\r\n              href=\"#\"\r\n              role=\"button\"\r\n            >\r\n              {icons.Download}\r\n              &nbsp;Download\r\n            </a>\r\n          </li>\r\n        )\r\n      }\r\n\r\n      if ((!isFolder && canChooseFile) || (isFolder && canChooseFolder)) {\r\n        actions.push(\r\n          <li key=\"action-choose\">\r\n            <a\r\n              onClick={isFolder ? onChooseFolder : onChooseFile}\r\n              href=\"#\"\r\n              role=\"button\"\r\n            >\r\n              <i className=\"fa fa-plus\" aria-hidden=\"true\" />\r\n              &nbsp;Choose\r\n            </a>\r\n          </li>\r\n        )\r\n      }\r\n\r\n      if (actions.length) {\r\n        actions = (<ul className=\"item-actions\">{actions}</ul>)\r\n      } else {\r\n        actions = (<div className=\"item-actions\">&nbsp;</div>)\r\n      }\r\n    }\r\n  } else {\r\n    // Nothing selected: We're in the 'root' folder. Only allowed action is adding a folder.\r\n    if (canCreateFolder && !nameFilter) {\r\n      actions.push(\r\n        <li key=\"action-add-folder\">\r\n          <a\r\n            onClick={onCreateFolder}\r\n            href=\"#\"\r\n            role=\"button\"\r\n          >\r\n            {icons.Folder}\r\n            &nbsp;Add Folder\r\n          </a>\r\n        </li>\r\n      )\r\n    }\r\n\r\n    if (actions.length) {\r\n      actions = (<ul className=\"item-actions\">{actions}</ul>)\r\n    } else {\r\n      actions = (<div className=\"item-actions\">&nbsp;</div>)\r\n    }\r\n  }\r\n\r\n  return actions\r\n}\r\n\r\nActions.propTypes = {\r\n  selectedItems: PropTypes.arrayOf(PropTypes.object),\r\n  isFolder: PropTypes.bool,\r\n  icons: PropTypes.object,\r\n  nameFilter: PropTypes.string,\r\n\r\n  canCreateFolder: PropTypes.bool,\r\n  onCreateFolder: PropTypes.func,\r\n\r\n  canRenameFile: PropTypes.bool,\r\n  onRenameFile: PropTypes.func,\r\n\r\n  canRenameFolder: PropTypes.bool,\r\n  onRenameFolder: PropTypes.func,\r\n\r\n  canDeleteFile: PropTypes.bool,\r\n  onDeleteFile: PropTypes.func,\r\n\r\n  canDeleteFolder: PropTypes.bool,\r\n  onDeleteFolder: PropTypes.func,\r\n\r\n  canDownloadFile: PropTypes.bool,\r\n  onDownloadFile: PropTypes.func,\r\n\r\n  canDownloadFolder: PropTypes.bool,\r\n  onDownloadFolder: PropTypes.func,\r\n\r\n  canChooseFile: PropTypes.bool,\r\n  onChooseFile: PropTypes.func,\r\n\r\n  canChooseFolder: PropTypes.bool,\r\n  onChooseFolder: PropTypes.func,\r\n}\r\n\r\nActions.defaultProps = {\r\n  selectedItems: [],\r\n  isFolder: false,\r\n  icons: {},\r\n  nameFilter: '',\r\n\r\n  canCreateFolder: false,\r\n  onCreateFolder: null,\r\n\r\n  canRenameFile: false,\r\n  onRenameFile: null,\r\n\r\n  canRenameFolder: false,\r\n  onRenameFolder: null,\r\n\r\n  canDeleteFile: false,\r\n  onDeleteFile: null,\r\n\r\n  canDeleteFolder: false,\r\n  onDeleteFolder: null,\r\n\r\n  canDownloadFile: false,\r\n  onDownloadFile: null,\r\n\r\n  canDownloadFolder: false,\r\n  onDownloadFolder: null,\r\n\r\n  canChooseFile: false,\r\n  onChooseFile: null,\r\n\r\n  canChooseFolder: false,\r\n  onChooseFolder: null,\r\n}\r\n\r\nexport default Actions\r\n","import React from \"react\"\r\nimport {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n  ComponentProps,\r\n} from \"streamlit-component-lib\"\r\nimport FileBrowser, {\r\n  Icons,\r\n  FileBrowserFile,\r\n  FileBrowserFolder,\r\n} from \"react-keyed-file-browser\"\r\n\r\nimport get from 'lodash.get'\r\nimport IframeResizer from 'iframe-resizer-react'\r\nimport Actions from \"./actions\"\r\nimport \"react-keyed-file-browser/dist/react-keyed-file-browser.css\"\r\nimport \"font-awesome/css/font-awesome.min.css\"\r\n\r\ninterface File {\r\n  path: string\r\n  name?: string\r\n  size?: number\r\n  create_time?: number\r\n  update_time?: number\r\n  access_time?: number\r\n}\r\n\r\nenum StreamlitEventType {\r\n  SELECT_FILE = \"SELECT_FILE\",\r\n  SELECT_FOLDER = \"SELECT_FOLDER\",\r\n  DOWNLOAD = \"DOWNLOAD\",\r\n  DELETE_FILE = \"DELETE_FILE\",\r\n  DELETE_FOLDER = \"DELETE_FOLDER\",\r\n  RENAME_FOLDER = \"RENAME_FOLDER\",\r\n  RENAME_FILE = \"RENAME_FILE\",\r\n  CREATE_FILE = \"CREATE_FILE\",\r\n  CREATE_FOLDER = \"CREATE_FOLDER\",\r\n  MOVE_FILE = \"MOVE_FILE\",\r\n  MOVE_FOLDER = \"MOVE_FOLDER\",\r\n  CHOOSE_FILE = \"CHOOSE_FILE\",\r\n}\r\n\r\ninterface StreamlitEvent {\r\n  type: StreamlitEventType\r\n  target: File | File[]\r\n}\r\n\r\ninterface State {\r\n  numClicks: number\r\n  isFocused: boolean\r\n}\r\n\r\ninterface IArgs {\r\n  files: File[]\r\n  path: string\r\n  show_choose_file: boolean\r\n  ignore_file_select_event: boolean\r\n}\r\n\r\nconst noticeStreamlit = (event: StreamlitEvent) =>\r\n  Streamlit.setComponentValue(event)\r\n\r\n  \r\nclass FileBrowserNative extends StreamlitComponentBase<State> {\r\n  private args: IArgs\r\n\r\n  constructor(props: ComponentProps) {\r\n    super(props)\r\n    this.args = props.args\r\n  }\r\n\r\n  ajustHeight(revoke_step?: number) {\r\n    const root = document.getElementById(\"root\")\r\n    if (root) {\r\n      const height = Math.min(\r\n        root.clientHeight,\r\n        root.scrollHeight,\r\n        root.offsetHeight\r\n      )\r\n      Streamlit.setFrameHeight(height - (revoke_step ? revoke_step : 0))\r\n      setTimeout(Streamlit.setFrameHeight, 1)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.ajustHeight()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.ajustHeight()\r\n  }\r\n\r\n  folderOpenHandler = (opts: FileBrowserFolder) => this.ajustHeight()\r\n  folderCloseHandler = (opts: FileBrowserFolder) => this.ajustHeight()\r\n\r\n  fileSelectedHandler = (opts: FileBrowserFile) => {\r\n    if (!this.args.ignore_file_select_event) {\r\n      const file = this.args.files.find((file) => file.path === opts.key)\r\n      file &&\r\n        noticeStreamlit({ type: StreamlitEventType.SELECT_FILE, target: file })\r\n    }\r\n  }\r\n\r\n  convertFiles = (files: File[]): FileBrowserFile[] =>\r\n    files.map((file) => ({\r\n      key: file.path,\r\n      modified: file.update_time || 0,\r\n      size: file.size || 0,\r\n    }))\r\n\r\n  noop = () => <></>\r\n  public render = () => {\r\n    let that = this\r\n    return (\r\n      <div>\r\n        <FileBrowser\r\n          {...this.args}\r\n          showActionBar\r\n          canFilter={true}\r\n          detailRenderer={this.noop}\r\n          icons={Icons.FontAwesome(4)}\r\n          files={this.convertFiles(this.args.files)}\r\n          onFolderOpen={this.folderOpenHandler}\r\n          onFolderClose={this.folderCloseHandler}\r\n          onSelect={this.fileSelectedHandler}\r\n          actionRenderer={(...args: any) => {\r\n            return Actions({\r\n              ...args[0],\r\n              ...{\r\n                canChooseFile: that.args.show_choose_file,\r\n              },\r\n            })\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst StreamlitFileBrowserNative = withStreamlitConnection(FileBrowserNative)\r\n\r\nclass FileBrowserWrapper extends StreamlitComponentBase<State> {\r\n  private args: IArgs\r\n  \r\n  constructor(props: ComponentProps) {\r\n    super(props)\r\n    this.args = props.args\r\n  }\r\n\r\n  public render(): React.ReactNode {\r\n      return (\r\n        <div>\r\n          <StreamlitFileBrowserNative {...this.props} />\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(FileBrowserWrapper)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport StFileBrowser from \"./StFileBrowser\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StFileBrowser />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}