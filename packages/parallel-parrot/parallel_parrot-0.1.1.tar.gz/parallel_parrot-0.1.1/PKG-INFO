Metadata-Version: 2.1
Name: parallel-parrot
Version: 0.1.1
Summary: A library for easily and efficiently using LLMs on tabular data
Home-page: https://github.com/novex-ai/parallel-parrot
License: MIT
Keywords: generative ai,pandas,llm,parallel,openai
Author: Brad Ito
Author-email: phlogisticfugu@gmail.com
Requires-Python: >=3.9,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Provides-Extra: pandas
Requires-Dist: aiohttp (>=3.8.5,<4.0.0)
Requires-Dist: aiohttp-retry (>=2.8.3,<3.0.0)
Requires-Dist: pandas ; extra == "pandas"
Requires-Dist: pydantic (>=2.3.0,<3.0.0)
Requires-Dist: tiktoken (>=0.4.0,<0.5.0)
Requires-Dist: uvloop (>=0.17.0,<0.18.0) ; sys_platform == "linux" or sys_platform == "darwin"
Project-URL: Changelog, https://github.com/novex-ai/parallel-parrot/releases
Project-URL: Repository, https://github.com/novex-ai/parallel-parrot
Description-Content-Type: text/markdown

# parallel-parrot

A Python library for easily and efficiently using LLMs on tabular data.

[![Poetry](https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json)](https://python-poetry.org/)

Some use cases:
- generate questions from documents for better Retrieval Augmented Generation (match questions to questions, not documents)
- sentiment analysis on a large number of documents
- data extraction and summarization
- removal of personal identifiers
- generate instructions from documents for fine tuning of LLMs

Features:
- Operates on both pandas dataframes and native python lists of dictionaries
- Supports OpenAI Chat Completion API, with structured output ("functions") - more LLMs planned in the future
- Automatically determines your rate limit from the API and executes API requests in parallel, as fast as possible
- Automatic retries, with exponential backoff and jitter
- Uses simple/robust Python [string.Template](https://docs.python.org/3/library/string.html#string.Template) for prompt templates
- create fine-tuning jsonl files from data that also avoids truncation due to token limits
- tracking of API usage statistics, to support cost governance
- fast asynchronous (concurrent) requests using aiohttp and uvloop

## Getting Started

```python
pip install parallel-parrot
```

Define an API configuration object:
```python
import parallel_parrot as pp

config = pp.OpenAIChatCompletionConfig(
    openai_api_key="*your API key*"
)
```

see the [declaration](https://github.com/novex-ai/parallel-parrot/blob/v0.1.0/parallel_parrot/types.py#L22) of `OpenAIChatCompletionConfig` for more available parameters, including the `system_message`.
All [Open API parameters](https://platform.openai.com/docs/api-reference/chat/create) can be passed.

## Generate Text - pp.parallel_text_generation()

LLM text generation can be used for a wide variety of tasks:
- Sentiment analysis: for understanding large amounts of customer input.
- Summarization: for making a large number of documents easier to digest/use.
- Text transformation: such as the removal of PII from text

see the [prompt_templates](https://github.com/novex-ai/parallel-parrot/blob/v0.1.0/parallel_parrot/prompt_templates.py) for some pre-engineered templates.

Example of `pp.parallel_text_generation()`:
```python
import json
import parallel_parrot as pp


input_data = [
    {
        "input": "this is a super duper product that will change the world",
        "source": "shopify",
    },
    {
        "input": "this is a horrible product that does not work",
        "source": "amazon"
    }
]

(output, usage_stats) = pp.sync_run(
    pp.parallel_text_generation(
        config=config,
        input_data=input_data,
        prompt_template="""
What is the sentiment of this product review?
POSITIVE, NEUTRAL or NEGATIVE?
product review: ${input}
sentiment:""",
        output_key="sentiment",
    )
)
print(json.dumps(output, indent=2))
```

example output:
```json
[
    {
        "input": "this is a super duper product that will change the world",
        "source": "shopify",
        "sentiment": "POSITIVE",
    },
    {
        "input": "this is a horrible product that does not work",
        "source": "amazon",
        "sentiment": "NEGATIVE",
    }
]
```


## Generate Data - pp.parallel_data_generation()

Some use-cases are more demanding than the above, and require multiple structured outputs.  This package handles all of that API and data wrangling for you.

Some examples of these use cases include:
- generating multiple question/answer pairs from each input document
- generating multiple title/summary paris from each input document

see the [prompt_templates](https://github.com/novex-ai/parallel-parrot/blob/v0.1.0/parallel_parrot/prompt_templates.py) for some pre-engineered templates.

Example of `pp.parallel_data_generation()`:
```python
import json
import parallel_parrot as pp

input_data = [
    {
        "input": """
George Washington (February 22, 1732 - December 14, 1799) was an American military officer, statesman, and Founding Father who served as the first president of the United States from 1789 to 1797. Appointed by the Second Continental Congress as commander of the Continental Army in June 1775, Washington led Patriot forces to victory in the American Revolutionary War and then served as president of the Constitutional Convention in 1787, which drafted and ratified the Constitution of the United States and established the American federal government. Washington has thus been called the "Father of his Country".
        """
    },
    {
        "input": """
John Adams (October 30, 1735 - July 4, 1826) was an American statesman, attorney, diplomat, writer, and Founding Father who served as the second president of the United States from 1797 to 1801. Before his presidency, he was a leader of the American Revolution that achieved independence from Great Britain. During the latter part of the Revolutionary War and in the early years of the new nation, he served the U.S. government as a senior diplomat in Europe. Adams was the first person to hold the office of vice president of the United States, serving from 1789 to 1797. He was a dedicated diarist and regularly corresponded with important contemporaries, including his wife and adviser Abigail Adams and his friend and political rival Thomas Jefferson.
        """
    },
]

(output, usage_stats) = pp.sync_run(
    pp.parallel_data_generation(
        config=config,
        input_data=input_data,
        prompt_template="""
Generate question and answer pairs from the following document.
Output a list of JSON objects with keys "question" and "answer".
Only output questions and answers clearly described in the document.  If there are no questions and answers, output an empty list.
document: ${input}
        """,
        output_key_names: ["question", "answer"]
    )
)
print(json.dumps(output, indent=2))
```

example output:
```json
[
  {
    "input": "...",
    "question": "Who was the first president of the United States?",
    "answer": "George Washington"
  },
  {
    "input": "...",
    "question": "What position did George Washington hold during the American Revolutionary War?",
    "answer": "Commander of the Continental Army"
  },
  {
    "input": "...",
    "question": "What document did George Washington help draft and ratify?",
    "answer": "The Constitution of the United States"
  },
  // more examples omitted
  {
    "input": "...",
    "question": "Who were some important contemporaries that John Adams corresponded with?",
    "answer": "Adams regularly corresponded with important contemporaries, including his wife and adviser Abigail Adams and his friend and political rival Thomas Jefferson."
  },
  {
    "input": "...",
    "question": "Who was John Adams?",
    "answer": "John Adams was an American statesman, attorney, diplomat, writer, and Founding Father."
  },
]
```
