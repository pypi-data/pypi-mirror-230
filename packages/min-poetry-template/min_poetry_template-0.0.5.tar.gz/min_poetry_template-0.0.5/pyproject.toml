[tool.poetry]
name = "min-poetry-template"
version = "0.0.5"
description = "An example package using poetry as a package manager."
authors = ["michael <michael__brown@tutanota.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "min_poetry_template", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
termcolor = "^2.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
black = "^23.9.1"
mypy = "^1.5.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

#########################
####       CLI       ####
#########################
[tool.poetry.scripts]
greet = 'min_poetry_template.application.cli.cli:greet'

#########################
#### tooling config  ####
#########################
[tool.black]
line-length = 99
target-version = ["py311"]

[flake8]
max-line-length = 120

[tool.mypy]
python_version = "3.11"
files = "src, tests"
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
show_error_codes = true
strict = true
pretty = true

[tool.pytest]
testpaths = "test"
addopts = "--cov --strict-markers"
xfail_strict = true

[tool.coverage.paths]
source = ["src/min_poetry_example", "*/site-packages/min_poetry_example"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
fail_under = 80

#########################
####       tox       ####
#########################
[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
env_list =
    py311

######################
# Tool configuration #
######################

[testenv]
deps = pytest
commands = pytest tests

[testenv:typecheck]
deps =
    pytest
    mypy
commands =
    mypy --ignore-missing-imports {posargs:src tests}

[testenv:format]
skip_install = True
deps =
    black
commands =
    black {posargs:--check --diff src tests}

[testenv:lint]
skip_install = True
deps =
    flake8
    flake8-bugbear
commands =
    flake8 {posargs:src tests --max-line-length=100}
"""