[
  "builder_registry_test.py::TestBuiltInRegistry::test_bisquesoup_constructor_does_lookup",
  "builder_registry_test.py::TestBuiltInRegistry::test_combination",
  "builder_registry_test.py::TestBuiltInRegistry::test_lookup_by_markup_type",
  "builder_registry_test.py::TestBuiltInRegistry::test_named_library",
  "builder_registry_test.py::TestRegistry::test_lookup_fails_when_cannot_reconcile_requested_features",
  "builder_registry_test.py::TestRegistry::test_lookup_fails_when_no_builder_implements_feature",
  "builder_registry_test.py::TestRegistry::test_lookup_fails_when_no_tree_builders_registered",
  "builder_registry_test.py::TestRegistry::test_lookup_gets_most_recent_builder_supporting_all_features",
  "builder_registry_test.py::TestRegistry::test_lookup_gets_most_recent_registration_when_no_feature_specified",
  "builder_registry_test.py::TestRegistry::test_register_with_features_makes_lookup_succeed",
  "builder_registry_test.py::TestRegistry::test_register_with_no_features",
  "builder_test.py::TestDetectsXMLParsedAsHTML::test_warn_if_markup_looks_like_xml[<?xml ><html>Actually XHTML</html>-False]",
  "builder_test.py::TestDetectsXMLParsedAsHTML::test_warn_if_markup_looks_like_xml[<?xml ><no-html-tag>-True]",
  "builder_test.py::TestDetectsXMLParsedAsHTML::test_warn_if_markup_looks_like_xml[<?xml>            <    html>Tricky XHTML</html>-False]",
  "builder_test.py::TestDetectsXMLParsedAsHTML::test_warn_if_markup_looks_like_xml[<html>obviously HTML</html-False]",
  "builder_test.py::TestDetectsXMLParsedAsHTML::test_warn_if_markup_looks_like_xml[No xml declaration-False]",
  "css_test.py::TestCSSSelectors::test_a_bunch_of_emptys",
  "css_test.py::TestCSSSelectors::test_adjacent_sibling_selector",
  "css_test.py::TestCSSSelectors::test_attribute_contains",
  "css_test.py::TestCSSSelectors::test_attribute_endswith",
  "css_test.py::TestCSSSelectors::test_attribute_equals",
  "css_test.py::TestCSSSelectors::test_attribute_exact_or_hypen",
  "css_test.py::TestCSSSelectors::test_attribute_exists",
  "css_test.py::TestCSSSelectors::test_attribute_startswith",
  "css_test.py::TestCSSSelectors::test_attribute_tilde",
  "css_test.py::TestCSSSelectors::test_bad_id",
  "css_test.py::TestCSSSelectors::test_child_selector",
  "css_test.py::TestCSSSelectors::test_child_selector_id",
  "css_test.py::TestCSSSelectors::test_class_mismatched_tag",
  "css_test.py::TestCSSSelectors::test_class_one",
  "css_test.py::TestCSSSelectors::test_closest",
  "css_test.py::TestCSSSelectors::test_dangling_combinator",
  "css_test.py::TestCSSSelectors::test_dashed_tag_text",
  "css_test.py::TestCSSSelectors::test_escape",
  "css_test.py::TestCSSSelectors::test_filter",
  "css_test.py::TestCSSSelectors::test_general_sibling_selector",
  "css_test.py::TestCSSSelectors::test_header_tags",
  "css_test.py::TestCSSSelectors::test_id_child_selector_nth_of_type",
  "css_test.py::TestCSSSelectors::test_invalid_multiple_select",
  "css_test.py::TestCSSSelectors::test_invalid_tag",
  "css_test.py::TestCSSSelectors::test_iselect",
  "css_test.py::TestCSSSelectors::test_items_in_id",
  "css_test.py::TestCSSSelectors::test_limit",
  "css_test.py::TestCSSSelectors::test_match",
  "css_test.py::TestCSSSelectors::test_multi_class_selection",
  "css_test.py::TestCSSSelectors::test_multi_class_support",
  "css_test.py::TestCSSSelectors::test_multiple_select",
  "css_test.py::TestCSSSelectors::test_multiple_select_attrs",
  "css_test.py::TestCSSSelectors::test_multiple_select_direct_descendant_and_tags",
  "css_test.py::TestCSSSelectors::test_multiple_select_duplicated",
  "css_test.py::TestCSSSelectors::test_multiple_select_ids",
  "css_test.py::TestCSSSelectors::test_multiple_select_indirect_descendant",
  "css_test.py::TestCSSSelectors::test_multiple_select_nested",
  "css_test.py::TestCSSSelectors::test_multiple_select_sibling",
  "css_test.py::TestCSSSelectors::test_multiple_select_tag_and_direct_descendant",
  "css_test.py::TestCSSSelectors::test_multiple_select_with_more_space",
  "css_test.py::TestCSSSelectors::test_multiple_select_with_no_space",
  "css_test.py::TestCSSSelectors::test_nth_of_type",
  "css_test.py::TestCSSSelectors::test_nth_of_type_direct_descendant",
  "css_test.py::TestCSSSelectors::test_one_id",
  "css_test.py::TestCSSSelectors::test_one_tag_many",
  "css_test.py::TestCSSSelectors::test_one_tag_one",
  "css_test.py::TestCSSSelectors::test_overspecified_child_id",
  "css_test.py::TestCSSSelectors::test_precompiled",
  "css_test.py::TestCSSSelectors::test_quoted_space_in_selector_name",
  "css_test.py::TestCSSSelectors::test_select_dashed_by_id",
  "css_test.py::TestCSSSelectors::test_select_dashed_matches_find_all",
  "css_test.py::TestCSSSelectors::test_select_dashed_tag_ids",
  "css_test.py::TestCSSSelectors::test_select_duplicate_elements",
  "css_test.py::TestCSSSelectors::test_select_on_element",
  "css_test.py::TestCSSSelectors::test_select_one_returns_none_if_no_match",
  "css_test.py::TestCSSSelectors::test_sibling_combinator_wont_select_same_tag_twice",
  "css_test.py::TestCSSSelectors::test_tag_in_tag_many",
  "css_test.py::TestCSSSelectors::test_tag_in_tag_one",
  "css_test.py::TestCSSSelectors::test_tag_no_match",
  "css_test.py::TestCSSSelectors::test_unsupported_pseudoclass",
  "dammit_test.py::TestEncodingDetector::test_byte_order_mark_removed",
  "dammit_test.py::TestEncodingDetector::test_deprecated_override_encodings",
  "dammit_test.py::TestEncodingDetector::test_detect_html5_style_meta_tag",
  "dammit_test.py::TestEncodingDetector::test_detwingle",
  "dammit_test.py::TestEncodingDetector::test_detwingle_ignores_multibyte_characters",
  "dammit_test.py::TestEncodingDetector::test_encoding_detector_replaces_junk_in_encoding_name_with_replacement_character",
  "dammit_test.py::TestEncodingDetector::test_find_declared_encoding",
  "dammit_test.py::TestEncodingDetector::test_known_definite_versus_user_encodings",
  "dammit_test.py::TestEncodingDetector::test_last_ditch_entity_replacement",
  "dammit_test.py::TestEntitySubstitution::test_html5_entity",
  "dammit_test.py::TestEntitySubstitution::test_html5_entity_with_variation_selector",
  "dammit_test.py::TestEntitySubstitution::test_quotes_not_html_substituted",
  "dammit_test.py::TestEntitySubstitution::test_substitute_html[\\u2018\\u2019foo\\u201c\\u201d-&lsquo;&rsquo;foo&ldquo;&rdquo;]",
  "dammit_test.py::TestEntitySubstitution::test_substitute_html[foo\\u2200\\u2603\\xf5bar-foo&forall;\\u2603&otilde;bar]",
  "dammit_test.py::TestEntitySubstitution::test_xml_attribute_quoting_escapes_single_quotes_when_value_contains_both_single_and_double_quotes",
  "dammit_test.py::TestEntitySubstitution::test_xml_attribute_quoting_normally_uses_double_quotes",
  "dammit_test.py::TestEntitySubstitution::test_xml_attribute_quoting_uses_single_quotes_when_value_contains_double_quotes",
  "dammit_test.py::TestEntitySubstitution::test_xml_converstion_includes_no_quotes_if_make_quoted_attribute_is_false",
  "dammit_test.py::TestEntitySubstitution::test_xml_quotes_arent_escaped_when_value_is_not_being_quoted",
  "dammit_test.py::TestEntitySubstitution::test_xml_quoting_handles_ampersands",
  "dammit_test.py::TestEntitySubstitution::test_xml_quoting_handles_angle_brackets",
  "dammit_test.py::TestEntitySubstitution::test_xml_quoting_ignoring_ampersands_when_they_are_part_of_an_entity",
  "dammit_test.py::TestEntitySubstitution::test_xml_quoting_including_ampersands_when_they_are_part_of_an_entity",
  "dammit_test.py::TestUnicodeDammit::test_convert_hebrew",
  "dammit_test.py::TestUnicodeDammit::test_detect_utf8",
  "dammit_test.py::TestUnicodeDammit::test_dont_see_smart_quotes_where_there_are_none",
  "dammit_test.py::TestUnicodeDammit::test_exclude_encodings",
  "dammit_test.py::TestUnicodeDammit::test_ignore_inappropriate_codecs",
  "dammit_test.py::TestUnicodeDammit::test_ignore_invalid_codecs",
  "dammit_test.py::TestUnicodeDammit::test_smart_quotes_to[None-\\u2018\\u2019\\u201c\\u201d]",
  "dammit_test.py::TestUnicodeDammit::test_smart_quotes_to[ascii-''\"\"]",
  "dammit_test.py::TestUnicodeDammit::test_smart_quotes_to[html-&lsquo;&rsquo;&ldquo;&rdquo;]",
  "dammit_test.py::TestUnicodeDammit::test_smart_quotes_to[xml-&#x2018;&#x2019;&#x201C;&#x201D;]",
  "dammit_test.py::TestUnicodeDammit::test_unicode_input",
  "element_test.py::TestAttributeValueWithCharsetSubstitution::test_content_meta_attribute_value",
  "element_test.py::TestNamedspacedAttribute::test_attribute_is_equivalent_to_colon_separated_string",
  "element_test.py::TestNamedspacedAttribute::test_attributes_are_equivalent_if_prefix_and_name_identical",
  "element_test.py::TestNamedspacedAttribute::test_name_may_be_none_or_missing",
  "element_test.py::TestNamedspacedAttribute::test_namespace_may_be_none_or_missing",
  "formatter_test.py::TestFormatter::test_default_attributes",
  "formatter_test.py::TestFormatter::test_default_indent_value",
  "formatter_test.py::TestFormatter::test_empty_attributes_are_booleans",
  "formatter_test.py::TestFormatter::test_indent[-1-<a>\\n<b>\\ntext\\n</b>\\n</a>\\n]",
  "formatter_test.py::TestFormatter::test_indent[-<a>\\n<b>\\ntext\\n</b>\\n</a>\\n]",
  "formatter_test.py::TestFormatter::test_indent[0-<a>\\n<b>\\ntext\\n</b>\\n</a>\\n]",
  "formatter_test.py::TestFormatter::test_indent[1-<a>\\n <b>\\n  text\\n </b>\\n</a>\\n]",
  "formatter_test.py::TestFormatter::test_indent[2-<a>\\n  <b>\\n    text\\n  </b>\\n</a>\\n]",
  "formatter_test.py::TestFormatter::test_indent[None-<a>\\n<b>\\ntext\\n</b>\\n</a>\\n]",
  "formatter_test.py::TestFormatter::test_indent[\\t-<a>\\n\\t<b>\\n\\t\\ttext\\n\\t</b>\\n</a>\\n]",
  "formatter_test.py::TestFormatter::test_indent[abc-<a>\\nabc<b>\\nabcabctext\\nabc</b>\\n</a>\\n]",
  "formatter_test.py::TestFormatter::test_indent[bytes-<a>\\n <b>\\n  text\\n </b>\\n</a>\\n]",
  "formatter_test.py::TestFormatter::test_indent[indent8-<a>\\n <b>\\n  text\\n </b>\\n</a>\\n]",
  "formatter_test.py::TestFormatter::test_sort_attributes",
  "fuzz_test.py::TestFuzz::test_deeply_nested_document[clusterfuzz-testcase-minimized-bs4_fuzzer-5000587759190016]",
  "fuzz_test.py::TestFuzz::test_deeply_nested_document[clusterfuzz-testcase-minimized-bs4_fuzzer-5375146639360000]",
  "fuzz_test.py::TestFuzz::test_deeply_nested_document[clusterfuzz-testcase-minimized-bs4_fuzzer-5492400320282624]",
  "fuzz_test.py::TestFuzz::test_deeply_nested_document_without_css[clusterfuzz-testcase-minimized-bs4_fuzzer-5167584867909632]",
  "fuzz_test.py::TestFuzz::test_deeply_nested_document_without_css[clusterfuzz-testcase-minimized-bs4_fuzzer-5984173902397440]",
  "fuzz_test.py::TestFuzz::test_deeply_nested_document_without_css[clusterfuzz-testcase-minimized-bs4_fuzzer-6124268085182464]",
  "fuzz_test.py::TestFuzz::test_deeply_nested_document_without_css[clusterfuzz-testcase-minimized-bs4_fuzzer-6450958476902400]",
  "fuzz_test.py::TestFuzz::test_html5lib_parse_errors[clusterfuzz-testcase-minimized-bs4_fuzzer-6306874195312640]",
  "fuzz_test.py::TestFuzz::test_html5lib_parse_errors_without_css[clusterfuzz-testcase-minimized-bs4_fuzzer-4818336571064320]",
  "fuzz_test.py::TestFuzz::test_html5lib_parse_errors_without_css[clusterfuzz-testcase-minimized-bs4_fuzzer-4999465949331456]",
  "fuzz_test.py::TestFuzz::test_html5lib_parse_errors_without_css[clusterfuzz-testcase-minimized-bs4_fuzzer-5843991618256896]",
  "fuzz_test.py::TestFuzz::test_html5lib_parse_errors_without_css[clusterfuzz-testcase-minimized-bs4_fuzzer-6241471367348224]",
  "fuzz_test.py::TestFuzz::test_html5lib_parse_errors_without_css[clusterfuzz-testcase-minimized-bs4_fuzzer-6600557255327744]",
  "fuzz_test.py::TestFuzz::test_html5lib_parse_errors_without_css[crash-0d306a50c8ed8bcd0785b67000fcd5dea1d33f08]",
  "fuzz_test.py::TestFuzz::test_rejected_markup[clusterfuzz-testcase-minimized-bs4_fuzzer-5703933063462912]",
  "fuzz_test.py::TestFuzz::test_rejected_markup[crash-ffbdfa8a2b26f13537b68d3794b0478a4090ee4a]",
  "fuzz_test.py::TestFuzz::test_soupsieve_errors[clusterfuzz-testcase-minimized-bs4_fuzzer-4670634698080256]",
  "fuzz_test.py::TestFuzz::test_soupsieve_errors[clusterfuzz-testcase-minimized-bs4_fuzzer-5270998950477824]",
  "html5lib_test.py::TestHTML5LibBuilder::test_ampersand_in_attribute_value_gets_escaped",
  "html5lib_test.py::TestHTML5LibBuilder::test_angle_brackets_in_attribute_values_are_escaped",
  "html5lib_test.py::TestHTML5LibBuilder::test_apos_entity",
  "html5lib_test.py::TestHTML5LibBuilder::test_attribute_multi_valued[multi_valued_attributes0]",
  "html5lib_test.py::TestHTML5LibBuilder::test_attribute_multi_valued[multi_valued_attributes1]",
  "html5lib_test.py::TestHTML5LibBuilder::test_attribute_not_multi_valued[None]",
  "html5lib_test.py::TestHTML5LibBuilder::test_attribute_not_multi_valued[multi_valued_attributes1]",
  "html5lib_test.py::TestHTML5LibBuilder::test_attribute_not_multi_valued[multi_valued_attributes2]",
  "html5lib_test.py::TestHTML5LibBuilder::test_attribute_not_multi_valued[multi_valued_attributes3]",
  "html5lib_test.py::TestHTML5LibBuilder::test_attribute_values_with_double_nested_quotes_get_quoted",
  "html5lib_test.py::TestHTML5LibBuilder::test_attribute_values_with_nested_quotes_are_left_alone",
  "html5lib_test.py::TestHTML5LibBuilder::test_basic_namespaces",
  "html5lib_test.py::TestHTML5LibBuilder::test_br_is_always_empty_element_tag",
  "html5lib_test.py::TestHTML5LibBuilder::test_can_parse_unicode_document",
  "html5lib_test.py::TestHTML5LibBuilder::test_cloned_multivalue_node",
  "html5lib_test.py::TestHTML5LibBuilder::test_closing_tag_with_no_opening_tag",
  "html5lib_test.py::TestHTML5LibBuilder::test_comment",
  "html5lib_test.py::TestHTML5LibBuilder::test_correctly_nested_tables",
  "html5lib_test.py::TestHTML5LibBuilder::test_deepcopy",
  "html5lib_test.py::TestHTML5LibBuilder::test_deeply_nested_multivalued_attribute",
  "html5lib_test.py::TestHTML5LibBuilder::test_detect_xml_parsed_as_html",
  "html5lib_test.py::TestHTML5LibBuilder::test_double_head",
  "html5lib_test.py::TestHTML5LibBuilder::test_empty_comment",
  "html5lib_test.py::TestHTML5LibBuilder::test_empty_doctype",
  "html5lib_test.py::TestHTML5LibBuilder::test_empty_element_tags",
  "html5lib_test.py::TestHTML5LibBuilder::test_entities_converted_on_the_way_out",
  "html5lib_test.py::TestHTML5LibBuilder::test_entities_in_attributes_converted_to_unicode",
  "html5lib_test.py::TestHTML5LibBuilder::test_entities_in_foreign_document_encoding",
  "html5lib_test.py::TestHTML5LibBuilder::test_entities_in_strings_converted_during_parsing",
  "html5lib_test.py::TestHTML5LibBuilder::test_entities_in_text_converted_to_unicode",
  "html5lib_test.py::TestHTML5LibBuilder::test_escaped_ampersand_in_attribute_value_is_left_alone",
  "html5lib_test.py::TestHTML5LibBuilder::test_extraction",
  "html5lib_test.py::TestHTML5LibBuilder::test_foster_parenting",
  "html5lib_test.py::TestHTML5LibBuilder::test_head_tag_between_head_and_body",
  "html5lib_test.py::TestHTML5LibBuilder::test_html5_attributes",
  "html5lib_test.py::TestHTML5LibBuilder::test_html5_style_meta_tag_reflects_current_encoding",
  "html5lib_test.py::TestHTML5LibBuilder::test_html_tags_have_namespace",
  "html5lib_test.py::TestHTML5LibBuilder::test_invalid_doctype",
  "html5lib_test.py::TestHTML5LibBuilder::test_mathml_tags_have_namespace",
  "html5lib_test.py::TestHTML5LibBuilder::test_meta_tag_reflects_current_encoding",
  "html5lib_test.py::TestHTML5LibBuilder::test_mixed_case_doctype",
  "html5lib_test.py::TestHTML5LibBuilder::test_multipart_strings",
  "html5lib_test.py::TestHTML5LibBuilder::test_multiple_copies_of_a_tag",
  "html5lib_test.py::TestHTML5LibBuilder::test_multivalued_attribute_on_html",
  "html5lib_test.py::TestHTML5LibBuilder::test_multivalued_attribute_value_becomes_list",
  "html5lib_test.py::TestHTML5LibBuilder::test_multivalued_attribute_with_whitespace",
  "html5lib_test.py::TestHTML5LibBuilder::test_namespaced_html",
  "html5lib_test.py::TestHTML5LibBuilder::test_namespaced_public_doctype",
  "html5lib_test.py::TestHTML5LibBuilder::test_namespaced_system_doctype",
  "html5lib_test.py::TestHTML5LibBuilder::test_nested_block_level_elements",
  "html5lib_test.py::TestHTML5LibBuilder::test_nested_formatting_elements",
  "html5lib_test.py::TestHTML5LibBuilder::test_nested_inline_elements",
  "html5lib_test.py::TestHTML5LibBuilder::test_non_breaking_spaces_converted_on_the_way_in",
  "html5lib_test.py::TestHTML5LibBuilder::test_normal_doctypes",
  "html5lib_test.py::TestHTML5LibBuilder::test_out_of_range_entity",
  "html5lib_test.py::TestHTML5LibBuilder::test_p_tag_is_never_empty_element",
  "html5lib_test.py::TestHTML5LibBuilder::test_pickle_and_unpickle_identity",
  "html5lib_test.py::TestHTML5LibBuilder::test_preserved_whitespace_in_pre_and_textarea",
  "html5lib_test.py::TestHTML5LibBuilder::test_processing_instruction",
  "html5lib_test.py::TestHTML5LibBuilder::test_public_doctype_with_url",
  "html5lib_test.py::TestHTML5LibBuilder::test_python_specific_encodings_not_used_in_charset",
  "html5lib_test.py::TestHTML5LibBuilder::test_quot_entity_converted_to_quotation_mark",
  "html5lib_test.py::TestHTML5LibBuilder::test_real_hebrew_document",
  "html5lib_test.py::TestHTML5LibBuilder::test_real_iso_8859_document",
  "html5lib_test.py::TestHTML5LibBuilder::test_real_shift_jis_document",
  "html5lib_test.py::TestHTML5LibBuilder::test_real_xhtml_document",
  "html5lib_test.py::TestHTML5LibBuilder::test_reparented_markup",
  "html5lib_test.py::TestHTML5LibBuilder::test_reparented_markup_containing_children",
  "html5lib_test.py::TestHTML5LibBuilder::test_reparented_markup_containing_identical_whitespace_nodes",
  "html5lib_test.py::TestHTML5LibBuilder::test_reparented_markup_ends_with_whitespace",
  "html5lib_test.py::TestHTML5LibBuilder::test_single_quote_attribute_values_become_double_quotes",
  "html5lib_test.py::TestHTML5LibBuilder::test_smart_quotes_converted_on_the_way_in",
  "html5lib_test.py::TestHTML5LibBuilder::test_soupstrainer",
  "html5lib_test.py::TestHTML5LibBuilder::test_special_string_containers",
  "html5lib_test.py::TestHTML5LibBuilder::test_strings_resembling_character_entity_references",
  "html5lib_test.py::TestHTML5LibBuilder::test_svg_tags_have_namespace",
  "html5lib_test.py::TestHTML5LibBuilder::test_system_doctype",
  "html5lib_test.py::TestHTML5LibBuilder::test_tag_with_no_attributes_can_have_attributes_added",
  "html5lib_test.py::TestHTML5LibBuilder::test_tracking_line_numbers",
  "html5lib_test.py::TestHTML5LibBuilder::test_unclosed_tags_get_closed",
  "html5lib_test.py::TestHTML5LibBuilder::test_worst_case",
  "html5lib_test.py::TestHTML5LibBuilder::test_xml_declaration_becomes_comment",
  "html5lib_test.py::TestHTML5LibBuilder::test_xml_declaration_followed_by_doctype",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_ampersand_in_attribute_value_gets_escaped",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_angle_brackets_in_attribute_values_are_escaped",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_apos_entity",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_attribute_multi_valued[multi_valued_attributes0]",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_attribute_multi_valued[multi_valued_attributes1]",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_attribute_not_multi_valued[None]",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_attribute_not_multi_valued[multi_valued_attributes1]",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_attribute_not_multi_valued[multi_valued_attributes2]",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_attribute_not_multi_valued[multi_valued_attributes3]",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_attribute_values_with_double_nested_quotes_get_quoted",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_attribute_values_with_nested_quotes_are_left_alone",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_basic_namespaces",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_br_is_always_empty_element_tag",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_builder_is_pickled",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_can_parse_unicode_document",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_closing_tag_with_no_opening_tag",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_comment",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_correctly_nested_tables",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_deepcopy",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_deeply_nested_multivalued_attribute",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_detect_xml_parsed_as_html",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_double_head",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_empty_doctype",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_empty_element",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_empty_element_tags",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_entities_converted_on_the_way_out",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_entities_in_attributes_converted_to_unicode",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_entities_in_foreign_document_encoding",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_entities_in_strings_converted_during_parsing",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_entities_in_text_converted_to_unicode",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_escaped_ampersand_in_attribute_value_is_left_alone",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_head_tag_between_head_and_body",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_html5_attributes",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_html5_style_meta_tag_reflects_current_encoding",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_invalid_doctype",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_meta_tag_reflects_current_encoding",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_mixed_case_doctype",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_multipart_strings",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_multiple_copies_of_a_tag",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_multivalued_attribute_on_html",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_multivalued_attribute_value_becomes_list",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_multivalued_attribute_with_whitespace",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_namespaced_html",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_namespaced_public_doctype",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_namespaced_system_doctype",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_nested_block_level_elements",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_nested_formatting_elements",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_nested_inline_elements",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_non_breaking_spaces_converted_on_the_way_in",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_normal_doctypes",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_on_duplicate_attribute",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_out_of_range_entity",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_p_tag_is_never_empty_element",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_pickle_and_unpickle_identity",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_preserved_whitespace_in_pre_and_textarea",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_processing_instruction",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_public_doctype_with_url",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_python_specific_encodings_not_used_in_charset",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_quot_entity_converted_to_quotation_mark",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_real_hebrew_document",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_real_iso_8859_document",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_real_shift_jis_document",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_real_xhtml_document",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_redundant_empty_element_closing_tags",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_rejected_input",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_single_quote_attribute_values_become_double_quotes",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_smart_quotes_converted_on_the_way_in",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_soupstrainer",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_special_string_containers",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_strings_resembling_character_entity_references",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_system_doctype",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_tag_with_no_attributes_can_have_attributes_added",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_tracking_line_numbers",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_unclosed_tags_get_closed",
  "htmlparser_test.py::TestHTMLParserTreeBuilder::test_worst_case",
  "lxml_test.py::TestLXMLTreeBuilder::test_ampersand_in_attribute_value_gets_escaped",
  "lxml_test.py::TestLXMLTreeBuilder::test_angle_brackets_in_attribute_values_are_escaped",
  "lxml_test.py::TestLXMLTreeBuilder::test_apos_entity",
  "lxml_test.py::TestLXMLTreeBuilder::test_attribute_multi_valued[multi_valued_attributes0]",
  "lxml_test.py::TestLXMLTreeBuilder::test_attribute_multi_valued[multi_valued_attributes1]",
  "lxml_test.py::TestLXMLTreeBuilder::test_attribute_not_multi_valued[None]",
  "lxml_test.py::TestLXMLTreeBuilder::test_attribute_not_multi_valued[multi_valued_attributes1]",
  "lxml_test.py::TestLXMLTreeBuilder::test_attribute_not_multi_valued[multi_valued_attributes2]",
  "lxml_test.py::TestLXMLTreeBuilder::test_attribute_not_multi_valued[multi_valued_attributes3]",
  "lxml_test.py::TestLXMLTreeBuilder::test_attribute_values_with_double_nested_quotes_get_quoted",
  "lxml_test.py::TestLXMLTreeBuilder::test_attribute_values_with_nested_quotes_are_left_alone",
  "lxml_test.py::TestLXMLTreeBuilder::test_basic_namespaces",
  "lxml_test.py::TestLXMLTreeBuilder::test_br_is_always_empty_element_tag",
  "lxml_test.py::TestLXMLTreeBuilder::test_can_parse_unicode_document",
  "lxml_test.py::TestLXMLTreeBuilder::test_closing_tag_with_no_opening_tag",
  "lxml_test.py::TestLXMLTreeBuilder::test_comment",
  "lxml_test.py::TestLXMLTreeBuilder::test_correctly_nested_tables",
  "lxml_test.py::TestLXMLTreeBuilder::test_deepcopy",
  "lxml_test.py::TestLXMLTreeBuilder::test_deeply_nested_multivalued_attribute",
  "lxml_test.py::TestLXMLTreeBuilder::test_detect_xml_parsed_as_html",
  "lxml_test.py::TestLXMLTreeBuilder::test_double_head",
  "lxml_test.py::TestLXMLTreeBuilder::test_empty_doctype",
  "lxml_test.py::TestLXMLTreeBuilder::test_empty_element_tags",
  "lxml_test.py::TestLXMLTreeBuilder::test_entities_converted_on_the_way_out",
  "lxml_test.py::TestLXMLTreeBuilder::test_entities_in_attributes_converted_to_unicode",
  "lxml_test.py::TestLXMLTreeBuilder::test_entities_in_foreign_document_encoding",
  "lxml_test.py::TestLXMLTreeBuilder::test_entities_in_strings_converted_during_parsing",
  "lxml_test.py::TestLXMLTreeBuilder::test_entities_in_text_converted_to_unicode",
  "lxml_test.py::TestLXMLTreeBuilder::test_escaped_ampersand_in_attribute_value_is_left_alone",
  "lxml_test.py::TestLXMLTreeBuilder::test_head_tag_between_head_and_body",
  "lxml_test.py::TestLXMLTreeBuilder::test_html5_style_meta_tag_reflects_current_encoding",
  "lxml_test.py::TestLXMLTreeBuilder::test_invalid_doctype",
  "lxml_test.py::TestLXMLTreeBuilder::test_meta_tag_reflects_current_encoding",
  "lxml_test.py::TestLXMLTreeBuilder::test_mixed_case_doctype",
  "lxml_test.py::TestLXMLTreeBuilder::test_multipart_strings",
  "lxml_test.py::TestLXMLTreeBuilder::test_multiple_copies_of_a_tag",
  "lxml_test.py::TestLXMLTreeBuilder::test_multivalued_attribute_on_html",
  "lxml_test.py::TestLXMLTreeBuilder::test_multivalued_attribute_value_becomes_list",
  "lxml_test.py::TestLXMLTreeBuilder::test_multivalued_attribute_with_whitespace",
  "lxml_test.py::TestLXMLTreeBuilder::test_namespaced_html",
  "lxml_test.py::TestLXMLTreeBuilder::test_namespaced_public_doctype",
  "lxml_test.py::TestLXMLTreeBuilder::test_namespaced_system_doctype",
  "lxml_test.py::TestLXMLTreeBuilder::test_nested_block_level_elements",
  "lxml_test.py::TestLXMLTreeBuilder::test_nested_formatting_elements",
  "lxml_test.py::TestLXMLTreeBuilder::test_nested_inline_elements",
  "lxml_test.py::TestLXMLTreeBuilder::test_non_breaking_spaces_converted_on_the_way_in",
  "lxml_test.py::TestLXMLTreeBuilder::test_normal_doctypes",
  "lxml_test.py::TestLXMLTreeBuilder::test_out_of_range_entity",
  "lxml_test.py::TestLXMLTreeBuilder::test_p_tag_is_never_empty_element",
  "lxml_test.py::TestLXMLTreeBuilder::test_pickle_and_unpickle_identity",
  "lxml_test.py::TestLXMLTreeBuilder::test_preserved_whitespace_in_pre_and_textarea",
  "lxml_test.py::TestLXMLTreeBuilder::test_processing_instruction",
  "lxml_test.py::TestLXMLTreeBuilder::test_public_doctype_with_url",
  "lxml_test.py::TestLXMLTreeBuilder::test_python_specific_encodings_not_used_in_charset",
  "lxml_test.py::TestLXMLTreeBuilder::test_quot_entity_converted_to_quotation_mark",
  "lxml_test.py::TestLXMLTreeBuilder::test_real_hebrew_document",
  "lxml_test.py::TestLXMLTreeBuilder::test_real_iso_8859_document",
  "lxml_test.py::TestLXMLTreeBuilder::test_real_shift_jis_document",
  "lxml_test.py::TestLXMLTreeBuilder::test_real_xhtml_document",
  "lxml_test.py::TestLXMLTreeBuilder::test_single_quote_attribute_values_become_double_quotes",
  "lxml_test.py::TestLXMLTreeBuilder::test_smart_quotes_converted_on_the_way_in",
  "lxml_test.py::TestLXMLTreeBuilder::test_soupstrainer",
  "lxml_test.py::TestLXMLTreeBuilder::test_special_string_containers",
  "lxml_test.py::TestLXMLTreeBuilder::test_strings_resembling_character_entity_references",
  "lxml_test.py::TestLXMLTreeBuilder::test_system_doctype",
  "lxml_test.py::TestLXMLTreeBuilder::test_tag_with_no_attributes_can_have_attributes_added",
  "lxml_test.py::TestLXMLTreeBuilder::test_tracking_line_numbers",
  "lxml_test.py::TestLXMLTreeBuilder::test_unclosed_tags_get_closed",
  "lxml_test.py::TestLXMLTreeBuilder::test_worst_case",
  "lxml_test.py::TestLXMLTreeBuilder::test_xml_parser",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_attribute_multi_valued[multi_valued_attributes0]",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_attribute_multi_valued[multi_valued_attributes1]",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_attribute_not_multi_valued[None]",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_attribute_not_multi_valued[multi_valued_attributes1]",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_attribute_not_multi_valued[multi_valued_attributes2]",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_attribute_not_multi_valued[multi_valued_attributes3]",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_can_parse_unicode_document",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_can_parse_unicode_document_begining_with_bom",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_closing_namespaced_tag",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_copy_tag_preserves_namespace",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_docstring_generated",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_docstring_includes_correct_encoding",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_find_by_prefixed_name",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_formatter_processes_script_tag_for_xml_documents",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_invalid_doctype",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_large_xml_document",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_namespace_indexing",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_namespace_interaction_with_select_and_find",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_namespaced_attributes",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_namespaced_attributes_xml_namespace",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_namespaces_are_preserved",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_nested_namespaces",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_pickle_and_unpickle_identity",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_pickle_restores_builder",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_popping_namespaced_tag",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_processing_instruction",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_python_specific_encodings_not_used_in_xml_declaration",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_real_xhtml_document",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_tags_are_empty_element_if_and_only_if_they_are_empty",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_worst_case",
  "lxml_test.py::TestLXMLXMLTreeBuilder::test_xml_declaration",
  "navigablestring_test.py::TestNavigableString::test_string_has_immutable_name_property",
  "navigablestring_test.py::TestNavigableString::test_text_acquisition_methods",
  "navigablestring_test.py::TestNavigableStringSubclasses::test_cdata",
  "navigablestring_test.py::TestNavigableStringSubclasses::test_cdata_is_never_formatted",
  "navigablestring_test.py::TestNavigableStringSubclasses::test_declaration",
  "navigablestring_test.py::TestNavigableStringSubclasses::test_default_string_containers",
  "navigablestring_test.py::TestNavigableStringSubclasses::test_doctype_ends_in_newline",
  "navigablestring_test.py::TestNavigableStringSubclasses::test_ruby_strings",
  "pageelement_test.py::TestEncoding::test_decode_contents",
  "pageelement_test.py::TestEncoding::test_deprecated_renderContents",
  "pageelement_test.py::TestEncoding::test_encode_contents",
  "pageelement_test.py::TestEncoding::test_encode_deeply_nested_document",
  "pageelement_test.py::TestEncoding::test_encoding_can_be_made_strict",
  "pageelement_test.py::TestEncoding::test_encoding_substitutes_unrecognized_characters_by_default",
  "pageelement_test.py::TestEncoding::test_repr",
  "pageelement_test.py::TestEncoding::test_tag_containing_unicode_string_can_be_encoded",
  "pageelement_test.py::TestEncoding::test_unicode_string_can_be_encoded",
  "pageelement_test.py::TestFormatters::test_default_formatter_is_minimal",
  "pageelement_test.py::TestFormatters::test_encoding_substitution",
  "pageelement_test.py::TestFormatters::test_encoding_substitution_doesnt_happen_if_tag_is_strained",
  "pageelement_test.py::TestFormatters::test_formatter_custom",
  "pageelement_test.py::TestFormatters::test_formatter_html",
  "pageelement_test.py::TestFormatters::test_formatter_html5",
  "pageelement_test.py::TestFormatters::test_formatter_is_run_on_attribute_values",
  "pageelement_test.py::TestFormatters::test_formatter_minimal",
  "pageelement_test.py::TestFormatters::test_formatter_null",
  "pageelement_test.py::TestFormatters::test_formatter_skips_script_tag_for_html_documents",
  "pageelement_test.py::TestFormatters::test_formatter_skips_style_tag_for_html_documents",
  "pageelement_test.py::TestFormatters::test_html_entity_substitution_off_by_default",
  "pageelement_test.py::TestFormatters::test_prettify_accepts_formatter_function",
  "pageelement_test.py::TestFormatters::test_prettify_can_encode_data",
  "pageelement_test.py::TestFormatters::test_prettify_handles_nested_string_literal_tags",
  "pageelement_test.py::TestFormatters::test_prettify_leaves_preformatted_text_alone",
  "pageelement_test.py::TestFormatters::test_prettify_outputs_unicode_by_default",
  "pageelement_test.py::TestPersistence::test_copy_deeply_nested_document",
  "pageelement_test.py::TestPersistence::test_copy_entire_soup",
  "pageelement_test.py::TestPersistence::test_copy_navigablestring_is_not_attached_to_tree",
  "pageelement_test.py::TestPersistence::test_copy_navigablestring_subclass_has_same_type",
  "pageelement_test.py::TestPersistence::test_copy_preserves_builder_information",
  "pageelement_test.py::TestPersistence::test_copy_preserves_encoding",
  "pageelement_test.py::TestPersistence::test_copy_tag_copies_contents",
  "pageelement_test.py::TestPersistence::test_deepcopy_identity",
  "pageelement_test.py::TestPersistence::test_pickle_and_unpickle_identity",
  "pageelement_test.py::TestPersistence::test_unicode_pickle",
  "soup_test.py::TestConstructor::test_alternate_string_containers",
  "soup_test.py::TestConstructor::test_cdata_list_attributes",
  "soup_test.py::TestConstructor::test_custom_builder_class",
  "soup_test.py::TestConstructor::test_embedded_null",
  "soup_test.py::TestConstructor::test_exclude_encodings",
  "soup_test.py::TestConstructor::test_parser_markup_rejection",
  "soup_test.py::TestConstructor::test_replacement_classes",
  "soup_test.py::TestConstructor::test_short_unicode_input",
  "soup_test.py::TestEncodingConversion::test_ascii_in_unicode_out",
  "soup_test.py::TestEncodingConversion::test_unicode_in_unicode_out",
  "soup_test.py::TestEncodingConversion::test_utf8_in_unicode_out",
  "soup_test.py::TestEncodingConversion::test_utf8_out",
  "soup_test.py::TestNewString::test_new_string_can_create_navigablestring_subclass",
  "soup_test.py::TestNewString::test_new_string_creates_navigablestring",
  "soup_test.py::TestNewTag::test_new_tag",
  "soup_test.py::TestNewTag::test_tag_inherits_self_closing_rules_from_builder",
  "soup_test.py::TestNewTag::test_xml_tag_inherits_self_closing_rules_from_builder",
  "soup_test.py::TestOutput::test",
  "soup_test.py::TestOutput::test_decode_xml_declaration[utf-16-utf-16]",
  "soup_test.py::TestOutput::test_decode_xml_declaration[utf-8-utf-8]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[None]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[idna]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[mbcs]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[oem]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[palmos]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[punycode]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[raw-unicode-escape]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[raw_unicode_escape]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[string-escape]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[string_escape]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[undefined]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[unicode-escape]",
  "soup_test.py::TestOutput::test_decode_xml_declaration_with_missing_or_python_internal_eventual_encoding[unicode_escape]",
  "soup_test.py::TestPickle::test_normal_pickle",
  "soup_test.py::TestPickle::test_pickle_with_no_builder",
  "soup_test.py::TestSelectiveParsing::test_parse_with_soupstrainer",
  "soup_test.py::TestWarnings::test_fromEncoding_renamed_to_from_encoding",
  "soup_test.py::TestWarnings::test_no_warning_if_explicit_parser_specified",
  "soup_test.py::TestWarnings::test_parseOnlyThese_renamed_to_parse_only",
  "soup_test.py::TestWarnings::test_resembles_filename_no_warning[]",
  "soup_test.py::TestWarnings::test_resembles_filename_no_warning[markup.com]",
  "soup_test.py::TestWarnings::test_resembles_filename_no_warning[markup.js]",
  "soup_test.py::TestWarnings::test_resembles_filename_no_warning[markuphtml]",
  "soup_test.py::TestWarnings::test_resembles_filename_warning[/home/user/file]",
  "soup_test.py::TestWarnings::test_resembles_filename_warning[c:\\\\user\\x0cile]",
  "soup_test.py::TestWarnings::test_resembles_filename_warning[markup.HTML]",
  "soup_test.py::TestWarnings::test_resembles_filename_warning[markup.htm]",
  "soup_test.py::TestWarnings::test_resembles_filename_warning[markup.html]",
  "soup_test.py::TestWarnings::test_resembles_filename_warning[markup.txt]",
  "soup_test.py::TestWarnings::test_resembles_filename_warning[markup.xhtml]",
  "soup_test.py::TestWarnings::test_resembles_filename_warning[markup.xml]",
  "soup_test.py::TestWarnings::test_unrecognized_keyword_argument",
  "soup_test.py::TestWarnings::test_url_warning_with_bytes_and_space",
  "soup_test.py::TestWarnings::test_url_warning_with_bytes_url",
  "soup_test.py::TestWarnings::test_url_warning_with_unicode_and_space",
  "soup_test.py::TestWarnings::test_url_warning_with_unicode_url",
  "soup_test.py::TestWarnings::test_warning_if_no_parser_specified",
  "soup_test.py::TestWarnings::test_warning_if_parser_specified_too_vague",
  "tag_test.py::TestMultiValuedAttributes::test_accept_charset",
  "tag_test.py::TestMultiValuedAttributes::test_attributes_joined_into_string_on_output",
  "tag_test.py::TestMultiValuedAttributes::test_cdata_attribute_applying_only_to_one_tag",
  "tag_test.py::TestMultiValuedAttributes::test_customization",
  "tag_test.py::TestMultiValuedAttributes::test_get_attribute_list",
  "tag_test.py::TestMultiValuedAttributes::test_hidden_tag_is_invisible",
  "tag_test.py::TestMultiValuedAttributes::test_multiple_values_becomes_list",
  "tag_test.py::TestMultiValuedAttributes::test_multiple_values_separated_by_weird_whitespace",
  "tag_test.py::TestMultiValuedAttributes::test_single_value_becomes_list",
  "tag_test.py::TestTag::test__should_pretty_print",
  "tag_test.py::TestTag::test_all_strings_ignores_special_string_containers",
  "tag_test.py::TestTag::test_all_text",
  "tag_test.py::TestTag::test_attributes_come_out_in_alphabetical_order",
  "tag_test.py::TestTag::test_deprecated_member_access",
  "tag_test.py::TestTag::test_empty_tag_has_no_string",
  "tag_test.py::TestTag::test_get_text_ignores_special_string_containers",
  "tag_test.py::TestTag::test_has_attr",
  "tag_test.py::TestTag::test_lack_of_string",
  "tag_test.py::TestTag::test_len",
  "tag_test.py::TestTag::test_member_access_invokes_find",
  "tag_test.py::TestTag::test_string",
  "tag_test.py::TestTag::test_string_methods_inside_special_string_container_tags",
  "tag_test.py::TestTag::test_tag_with_multiple_children_has_no_string",
  "tag_test.py::TestTag::test_tag_with_recursive_string_has_string",
  "tree_test.py::TestDeprecatedArguments::test_find_type_method_string[find]",
  "tree_test.py::TestDeprecatedArguments::test_find_type_method_string[find_all]",
  "tree_test.py::TestDeprecatedArguments::test_find_type_method_string[find_all_next]",
  "tree_test.py::TestDeprecatedArguments::test_find_type_method_string[find_all_previous]",
  "tree_test.py::TestDeprecatedArguments::test_find_type_method_string[find_next]",
  "tree_test.py::TestDeprecatedArguments::test_find_type_method_string[find_next_sibling]",
  "tree_test.py::TestDeprecatedArguments::test_find_type_method_string[find_next_siblings]",
  "tree_test.py::TestDeprecatedArguments::test_find_type_method_string[find_parent]",
  "tree_test.py::TestDeprecatedArguments::test_find_type_method_string[find_parents]",
  "tree_test.py::TestDeprecatedArguments::test_find_type_method_string[find_previous]",
  "tree_test.py::TestDeprecatedArguments::test_find_type_method_string[find_previous_sibling]",
  "tree_test.py::TestDeprecatedArguments::test_find_type_method_string[find_previous_siblings]",
  "tree_test.py::TestDeprecatedArguments::test_soupstrainer_constructor_string",
  "tree_test.py::TestFind::test_find_everything",
  "tree_test.py::TestFind::test_find_everything_with_name",
  "tree_test.py::TestFind::test_find_tag",
  "tree_test.py::TestFind::test_unicode_attribute_find",
  "tree_test.py::TestFind::test_unicode_text_find",
  "tree_test.py::TestFindAll::test_calling_a_tag_is_calling_findall",
  "tree_test.py::TestFindAll::test_find_all_limit",
  "tree_test.py::TestFindAll::test_find_all_resultset",
  "tree_test.py::TestFindAll::test_find_all_text_nodes",
  "tree_test.py::TestFindAll::test_find_all_with_self_referential_data_structure_does_not_cause_infinite_recursion",
  "tree_test.py::TestFindAllBasicNamespaces::test_find_by_namespaced_name",
  "tree_test.py::TestFindAllByAttribute::test_find_all_by_attribute_dict",
  "tree_test.py::TestFindAllByAttribute::test_find_all_by_attribute_name",
  "tree_test.py::TestFindAllByAttribute::test_find_all_by_attribute_soupstrainer",
  "tree_test.py::TestFindAllByAttribute::test_find_all_by_class",
  "tree_test.py::TestFindAllByAttribute::test_find_all_by_utf8_attribute_value",
  "tree_test.py::TestFindAllByAttribute::test_find_all_with_defined_attribute",
  "tree_test.py::TestFindAllByAttribute::test_find_all_with_list_attribute_values",
  "tree_test.py::TestFindAllByAttribute::test_find_all_with_missing_attribute",
  "tree_test.py::TestFindAllByAttribute::test_find_all_with_non_dictionary_for_attrs_finds_by_class",
  "tree_test.py::TestFindAllByAttribute::test_find_all_with_numeric_attribute",
  "tree_test.py::TestFindAllByAttribute::test_find_all_with_regular_expression_attribute_value",
  "tree_test.py::TestFindAllByAttribute::test_find_all_with_string_for_attrs_finds_multiple_classes",
  "tree_test.py::TestFindAllByAttribute::test_find_by_attribute_and_containing_string",
  "tree_test.py::TestFindAllByAttribute::test_find_by_class_when_multiple_classes_present",
  "tree_test.py::TestFindAllByAttribute::test_find_by_name_and_containing_string",
  "tree_test.py::TestFindAllByAttribute::test_find_by_name_and_containing_string_when_string_is_buried",
  "tree_test.py::TestFindAllByName::test_calling_element_invokes_find_all",
  "tree_test.py::TestFindAllByName::test_find_all_by_name_and_text",
  "tree_test.py::TestFindAllByName::test_find_all_by_tag_dict",
  "tree_test.py::TestFindAllByName::test_find_all_by_tag_name",
  "tree_test.py::TestFindAllByName::test_find_all_by_tag_names",
  "tree_test.py::TestFindAllByName::test_find_all_by_tag_re",
  "tree_test.py::TestFindAllByName::test_find_all_by_tag_strainer",
  "tree_test.py::TestFindAllByName::test_find_all_on_non_root_element",
  "tree_test.py::TestFindAllByName::test_find_all_with_tags_matching_method",
  "tree_test.py::TestFindAllByName::test_find_with_multi_valued_attribute",
  "tree_test.py::TestIndex::test_index",
  "tree_test.py::TestNextOperations::test_find_all_next",
  "tree_test.py::TestNextOperations::test_find_next",
  "tree_test.py::TestNextOperations::test_find_next_for_text_element",
  "tree_test.py::TestNextOperations::test_next",
  "tree_test.py::TestNextOperations::test_next_generator",
  "tree_test.py::TestNextOperations::test_next_of_last_item_is_none",
  "tree_test.py::TestNextOperations::test_next_of_root_is_none",
  "tree_test.py::TestNextSibling::test_find_next_sibling",
  "tree_test.py::TestNextSibling::test_next_sibling",
  "tree_test.py::TestNextSibling::test_next_sibling_for_text_element",
  "tree_test.py::TestNextSibling::test_next_sibling_may_not_exist",
  "tree_test.py::TestNextSibling::test_next_sibling_of_root_is_none",
  "tree_test.py::TestNextSibling::test_next_siblings",
  "tree_test.py::TestParentOperations::test_find_parent",
  "tree_test.py::TestParentOperations::test_find_parents",
  "tree_test.py::TestParentOperations::test_parent",
  "tree_test.py::TestParentOperations::test_parent_generator",
  "tree_test.py::TestParentOperations::test_parent_of_text_element",
  "tree_test.py::TestParentOperations::test_parent_of_top_tag_is_soup_object",
  "tree_test.py::TestParentOperations::test_soup_object_has_no_parent",
  "tree_test.py::TestParentOperations::test_text_element_find_parent",
  "tree_test.py::TestPreviousOperations::test_find_all_previous",
  "tree_test.py::TestPreviousOperations::test_find_previous",
  "tree_test.py::TestPreviousOperations::test_find_previous_for_text_element",
  "tree_test.py::TestPreviousOperations::test_previous",
  "tree_test.py::TestPreviousOperations::test_previous_generator",
  "tree_test.py::TestPreviousOperations::test_previous_of_first_item_is_none",
  "tree_test.py::TestPreviousOperations::test_previous_of_root_is_none",
  "tree_test.py::TestPreviousSibling::test_find_previous_sibling",
  "tree_test.py::TestPreviousSibling::test_previous_sibling",
  "tree_test.py::TestPreviousSibling::test_previous_sibling_for_text_element",
  "tree_test.py::TestPreviousSibling::test_previous_sibling_may_not_exist",
  "tree_test.py::TestPreviousSibling::test_previous_sibling_of_root_is_none",
  "tree_test.py::TestPreviousSibling::test_previous_siblings",
  "tree_test.py::TestSmooth::test_smooth",
  "tree_test.py::TestTreeModification::test_append_child_thats_already_at_the_end",
  "tree_test.py::TestTreeModification::test_append_to_contents_moves_tag",
  "tree_test.py::TestTreeModification::test_attribute_modification",
  "tree_test.py::TestTreeModification::test_clear",
  "tree_test.py::TestTreeModification::test_consecutive_text_nodes",
  "tree_test.py::TestTreeModification::test_decompose",
  "tree_test.py::TestTreeModification::test_extend",
  "tree_test.py::TestTreeModification::test_extend_with_another_tags_contents[<lambda>0]",
  "tree_test.py::TestTreeModification::test_extend_with_another_tags_contents[<lambda>1]",
  "tree_test.py::TestTreeModification::test_extract",
  "tree_test.py::TestTreeModification::test_extract_distinguishes_between_identical_strings",
  "tree_test.py::TestTreeModification::test_extract_multiples_of_same_tag",
  "tree_test.py::TestTreeModification::test_extract_works_when_element_is_surrounded_by_identical_strings",
  "tree_test.py::TestTreeModification::test_insert_after",
  "tree_test.py::TestTreeModification::test_insert_after_raises_exception_if_after_has_no_meaning",
  "tree_test.py::TestTreeModification::test_insert_before",
  "tree_test.py::TestTreeModification::test_insert_before_raises_notimplementederror_if_before_has_no_meaning",
  "tree_test.py::TestTreeModification::test_insert_bisquesoup_object_inserts_children",
  "tree_test.py::TestTreeModification::test_insert_multiple_after",
  "tree_test.py::TestTreeModification::test_insert_multiple_before",
  "tree_test.py::TestTreeModification::test_insert_string",
  "tree_test.py::TestTreeModification::test_insert_tag",
  "tree_test.py::TestTreeModification::test_insert_tag_into_itself_raises_exception",
  "tree_test.py::TestTreeModification::test_insert_works_on_empty_element_tag",
  "tree_test.py::TestTreeModification::test_move_tag_to_beginning_of_parent",
  "tree_test.py::TestTreeModification::test_nested_tag_replace_with",
  "tree_test.py::TestTreeModification::test_new_tag_creation",
  "tree_test.py::TestTreeModification::test_replace_final_node",
  "tree_test.py::TestTreeModification::test_replace_first_child",
  "tree_test.py::TestTreeModification::test_replace_last_child",
  "tree_test.py::TestTreeModification::test_replace_tag_with_its_parent_raises_exception",
  "tree_test.py::TestTreeModification::test_replace_tag_with_itself",
  "tree_test.py::TestTreeModification::test_replace_with",
  "tree_test.py::TestTreeModification::test_replace_with_and_unwrap_give_useful_exception_when_tag_has_no_parent",
  "tree_test.py::TestTreeModification::test_replace_with_errors",
  "tree_test.py::TestTreeModification::test_replace_with_maintains_next_element_throughout",
  "tree_test.py::TestTreeModification::test_replace_with_multiple",
  "tree_test.py::TestTreeModification::test_replace_with_returns_thing_that_was_replaced",
  "tree_test.py::TestTreeModification::test_set_string_preserves_class_of_string",
  "tree_test.py::TestTreeModification::test_string_set",
  "tree_test.py::TestTreeModification::test_string_set_does_not_affect_original_string",
  "tree_test.py::TestTreeModification::test_unwrap",
  "tree_test.py::TestTreeModification::test_unwrap_returns_thing_that_was_replaced",
  "tree_test.py::TestTreeModification::test_wrap",
  "tree_test.py::TestTreeModification::test_wrap_extracts_tag_from_elsewhere",
  "tree_test.py::TestTreeModification::test_wrap_puts_new_contents_at_the_end"
]