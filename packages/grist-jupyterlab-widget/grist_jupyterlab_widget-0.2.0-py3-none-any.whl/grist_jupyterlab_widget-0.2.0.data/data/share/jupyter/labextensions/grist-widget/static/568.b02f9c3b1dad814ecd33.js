"use strict";(self.webpackChunkgrist_widget=self.webpackChunkgrist_widget||[]).push([[568],{568:(e,t,n)=>{async function o(e){return new Promise((t=>setTimeout(t,e)))}async function i(e,t,{rerunCells:n}){for(var i,s;;){const a=e.shell.currentWidget,r=null===(s=null===(i=null==a?void 0:a.context.sessionContext)||void 0===i?void 0:i.session)||void 0===s?void 0:s.kernel;if(!r){await o(100);continue}const c=r.requestExecute({code:`__grist_records__ = ${JSON.stringify(t)}`});if(n){let t=!1;c.onIOPub=n=>{t||"status"===n.header.msg_type&&"idle"===n.content.execution_state&&(t=!0,e.commands.execute("notebook:run-all-cells"))}}break}}n.r(t),n.d(t,{default:()=>s});const s={id:"grist-widget:plugin",description:"Custom Grist widget for a JupyterLite notebook",autoStart:!0,activate:e=>{const t=document.createElement("script");t.src="https://docs.getgrist.com/grist-plugin-api.js",t.id="grist-plugin-api",t.addEventListener("load",(async()=>{const t=window.grist;e.serviceManager.contents.fileChanged.connect((async(e,n)=>{var o;"save"===n.type&&"notebook.ipynb"===(null===(o=n.newValue)||void 0===o?void 0:o.path)&&t.setOption("notebook",n.newValue)})),t.ready();const n=await t.getOption("notebook")||{content:{metadata:{language_info:{codemirror_mode:{name:"python",version:3},file_extension:".py",mimetype:"text/x-python",name:"python",nbconvert_exporter:"python",pygments_lexer:"ipython3",version:"3.11"},kernelspec:{name:"python",display_name:"Python (Pyodide)",language:"python"}},nbformat_minor:4,nbformat:4,cells:[{cell_type:"code",source:"",metadata:{},execution_count:null,outputs:[]}]},format:"json"};await e.serviceManager.contents.save("notebook.ipynb",n),console.log("JupyterLab extension grist-widget is activated!");const o=await t.fetchSelectedTable();await i(e,o,{rerunCells:!0}),t.onRecords((async t=>{await i(e,t,{rerunCells:!1})}))})),document.head.appendChild(t)}}}}]);