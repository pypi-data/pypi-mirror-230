export const id=13786;export const ids=[13786];export const modules={13786:(e,t,i)=>{var a=i(17463),o=i(34541),s=i(47838),r=i(68144),n=i(79932);const l=e=>e.tileLayer("https://basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}"+(e.Browser.retina?"@2x.png":".png"),{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>, &copy; <a href="https://carto.com/attributions">CARTO</a>',subdomains:"abcd",minZoom:0,maxZoom:20});var d=i(22311),c=i(91741),h=i(44281),u=(i(10983),i(47501)),p=i(47181);let m=(0,a.Z)(null,(function(e,t){return{F:class extends t{constructor(...t){super(...t),e(this)}},d:[{kind:"field",decorators:[(0,n.Cb)({attribute:"entity-id"})],key:"entityId",value:void 0},{kind:"field",decorators:[(0,n.Cb)({attribute:"entity-name"})],key:"entityName",value:void 0},{kind:"field",decorators:[(0,n.Cb)({attribute:"entity-picture"})],key:"entityPicture",value:void 0},{kind:"field",decorators:[(0,n.Cb)({attribute:"entity-color"})],key:"entityColor",value:void 0},{kind:"method",key:"render",value:function(){return r.dy` <div class="marker" style="${(0,u.V)({"border-color":this.entityColor})}" @click="${this._badgeTap}"> ${this.entityPicture?r.dy`<div class="entity-picture" style="${(0,u.V)({"background-image":`url(${this.entityPicture})`})}"></div>`:this.entityName} </div> `}},{kind:"method",key:"_badgeTap",value:function(e){e.stopPropagation(),this.entityId&&(0,p.B)(this,"hass-more-info",{entityId:this.entityId})}},{kind:"get",static:!0,key:"styles",value:function(){return r.iv`.marker{display:flex;justify-content:center;align-items:center;box-sizing:border-box;overflow:hidden;width:48px;height:48px;font-size:var(--ha-marker-font-size,1.5em);border-radius:50%;border:1px solid var(--ha-marker-color,var(--primary-color));color:var(--primary-text-color);background-color:var(--card-background-color)}.entity-picture{background-size:cover;height:100%;width:100%}`}}]}}),r.oi);customElements.define("ha-entity-marker",m);const f=e=>"string"==typeof e?e:e.entity_id;(0,a.Z)([(0,n.Mo)("ha-map")],(function(e,t){class a extends t{constructor(...t){super(...t),e(this)}}return{F:a,d:[{kind:"field",decorators:[(0,n.Cb)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,n.Cb)({attribute:!1})],key:"entities",value:void 0},{kind:"field",decorators:[(0,n.Cb)({attribute:!1})],key:"paths",value:void 0},{kind:"field",decorators:[(0,n.Cb)({attribute:!1})],key:"layers",value:void 0},{kind:"field",decorators:[(0,n.Cb)({type:Boolean})],key:"autoFit",value:()=>!1},{kind:"field",decorators:[(0,n.Cb)({type:Boolean})],key:"renderPassive",value:()=>!1},{kind:"field",decorators:[(0,n.Cb)({type:Boolean})],key:"interactiveZones",value:()=>!1},{kind:"field",decorators:[(0,n.Cb)({type:Boolean})],key:"fitZones",value:void 0},{kind:"field",decorators:[(0,n.Cb)({type:Boolean})],key:"darkMode",value:void 0},{kind:"field",decorators:[(0,n.Cb)({type:Number})],key:"zoom",value:()=>14},{kind:"field",decorators:[(0,n.SB)()],key:"_loaded",value:()=>!1},{kind:"field",key:"leafletMap",value:void 0},{kind:"field",key:"Leaflet",value:void 0},{kind:"field",key:"_resizeObserver",value:void 0},{kind:"field",key:"_mapItems",value:()=>[]},{kind:"field",key:"_mapZones",value:()=>[]},{kind:"field",key:"_mapPaths",value:()=>[]},{kind:"method",key:"connectedCallback",value:function(){(0,o.Z)((0,s.Z)(a.prototype),"connectedCallback",this).call(this),this._loadMap(),this._attachObserver()}},{kind:"method",key:"disconnectedCallback",value:function(){(0,o.Z)((0,s.Z)(a.prototype),"disconnectedCallback",this).call(this),this.leafletMap&&(this.leafletMap.remove(),this.leafletMap=void 0,this.Leaflet=void 0),this._loaded=!1,this._resizeObserver&&this._resizeObserver.unobserve(this)}},{kind:"method",key:"update",value:function(e){var t,i,r,n;if((0,o.Z)((0,s.Z)(a.prototype),"update",this).call(this,e),!this._loaded)return;const l=e.get("hass");if(e.has("_loaded")||e.has("entities"))this._drawEntities();else if(this._loaded&&l&&this.entities)for(const e of this.entities)if(l.states[f(e)]!==this.hass.states[f(e)]){this._drawEntities();break}if((e.has("_loaded")||e.has("paths"))&&this._drawPaths(),(e.has("_loaded")||e.has("layers"))&&this._drawLayers(e.get("layers")),(e.has("_loaded")||(e.has("entities")||e.has("layers"))&&this.autoFit)&&this.fitMap(),e.has("zoom")&&this.leafletMap.setZoom(this.zoom),!e.has("darkMode")&&(!e.has("hass")||l&&(null===(t=l.themes)||void 0===t?void 0:t.darkMode)===(null===(i=this.hass.themes)||void 0===i?void 0:i.darkMode)))return;const d=null!==(r=this.darkMode)&&void 0!==r?r:null===(n=this.hass.themes)||void 0===n?void 0:n.darkMode;this.shadowRoot.getElementById("map").classList.toggle("dark",d)}},{kind:"method",key:"_loadMap",value:async function(){var e;let t=this.shadowRoot.getElementById("map");t||(t=document.createElement("div"),t.id="map",this.shadowRoot.append(t));const a=null!==(e=this.darkMode)&&void 0!==e?e:this.hass.themes.darkMode;[this.leafletMap,this.Leaflet]=await(async e=>{if(!e.parentNode)throw new Error("Cannot setup Leaflet map on disconnected element");const t=(await i.e(70208).then(i.t.bind(i,70208,23))).default;t.Icon.Default.imagePath="/static/images/leaflet/images/";const a=t.map(e),o=document.createElement("link");return o.setAttribute("href","/static/images/leaflet/leaflet.css"),o.setAttribute("rel","stylesheet"),e.parentNode.appendChild(o),a.setView([52.3731339,4.8903147],13),[a,t,l(t).addTo(a)]})(t),this.shadowRoot.getElementById("map").classList.toggle("dark",a),this._loaded=!0}},{kind:"method",key:"fitMap",value:function(e){var t,i,a;if(!this.leafletMap||!this.Leaflet||!this.hass)return;if(!(this._mapItems.length||null!==(t=this.layers)&&void 0!==t&&t.length))return void this.leafletMap.setView(new this.Leaflet.LatLng(this.hass.config.latitude,this.hass.config.longitude),(null==e?void 0:e.zoom)||this.zoom);let o=this.Leaflet.latLngBounds(this._mapItems?this._mapItems.map((e=>e.getLatLng())):[]);var s;this.fitZones&&(null===(s=this._mapZones)||void 0===s||s.forEach((e=>{o.extend("getBounds"in e?e.getBounds():e.getLatLng())})));null===(i=this.layers)||void 0===i||i.forEach((e=>{o.extend("getBounds"in e?e.getBounds():e.getLatLng())})),o=o.pad(null!==(a=null==e?void 0:e.pad)&&void 0!==a?a:.5),this.leafletMap.fitBounds(o,{maxZoom:(null==e?void 0:e.zoom)||this.zoom})}},{kind:"method",key:"fitBounds",value:function(e,t){var i;if(!this.leafletMap||!this.Leaflet||!this.hass)return;const a=this.Leaflet.latLngBounds(e).pad(null!==(i=null==t?void 0:t.pad)&&void 0!==i?i:.5);this.leafletMap.fitBounds(a,{maxZoom:(null==t?void 0:t.zoom)||this.zoom})}},{kind:"method",key:"_drawLayers",value:function(e){if(e&&e.forEach((e=>e.remove())),!this.layers)return;const t=this.leafletMap;this.layers.forEach((e=>{t.addLayer(e)}))}},{kind:"method",key:"_drawPaths",value:function(){const e=this.hass,t=this.leafletMap,i=this.Leaflet;if(!e||!t||!i)return;if(this._mapPaths.length&&(this._mapPaths.forEach((e=>e.remove())),this._mapPaths=[]),!this.paths)return;const a=getComputedStyle(this).getPropertyValue("--dark-primary-color");this.paths.forEach((e=>{let o,s;e.gradualOpacity&&(o=e.gradualOpacity/(e.points.length-2),s=1-e.gradualOpacity);for(let t=0;t<e.points.length-1;t++){const r=e.gradualOpacity?s+t*o:void 0;this._mapPaths.push(i.circleMarker(e.points[t].point,{radius:3,color:e.color||a,opacity:r,fillOpacity:r,interactive:!0}).bindTooltip(e.points[t].tooltip,{direction:"top"})),this._mapPaths.push(i.polyline([e.points[t].point,e.points[t+1].point],{color:e.color||a,opacity:r,interactive:!1}))}const r=e.points.length-1;if(r>=0){const t=e.gradualOpacity?s+r*o:void 0;this._mapPaths.push(i.circleMarker(e.points[r].point,{radius:3,color:e.color||a,opacity:t,fillOpacity:t,interactive:!0}).bindTooltip(e.points[r].tooltip,{direction:"top"}))}this._mapPaths.forEach((e=>t.addLayer(e)))}))}},{kind:"method",key:"_drawEntities",value:function(){var e;const t=this.hass,i=this.leafletMap,a=this.Leaflet;if(!t||!i||!a)return;if(this._mapItems.length&&(this._mapItems.forEach((e=>e.remove())),this._mapItems=[]),this._mapZones.length&&(this._mapZones.forEach((e=>e.remove())),this._mapZones=[]),!this.entities)return;const o=getComputedStyle(this),s=o.getPropertyValue("--accent-color"),r=o.getPropertyValue("--secondary-text-color"),n=o.getPropertyValue("--dark-primary-color"),l=(null!==(e=this.darkMode)&&void 0!==e?e:this.hass.themes.darkMode)?"dark":"light";for(const e of this.entities){const i=t.states[f(e)];if(!i)continue;const o=(0,c.C)(i),{latitude:h,longitude:u,passive:p,icon:m,radius:y,entity_picture:v,gps_accuracy:k}=i.attributes;if(!h||!u)continue;if("zone"===(0,d.N)(i)){if(p&&!this.renderPassive)continue;let e="";if(m){const t=document.createElement("ha-icon");t.setAttribute("icon",m),e=t.outerHTML}else{const t=document.createElement("span");t.innerHTML=o,e=t.outerHTML}this._mapZones.push(a.marker([h,u],{icon:a.divIcon({html:e,iconSize:[24,24],className:l}),interactive:this.interactiveZones,title:o})),this._mapZones.push(a.circle([h,u],{interactive:!1,color:p?r:s,radius:y}));continue}const g=o.split(" ").map((e=>e[0])).join("").substr(0,3);this._mapItems.push(a.marker([h,u],{icon:a.divIcon({html:`\n              <ha-entity-marker\n                entity-id="${f(e)}"\n                entity-name="${g}"\n                entity-picture="${v?this.hass.hassUrl(v):""}"\n                ${"string"!=typeof e?`entity-color="${e.color}"`:""}\n              ></ha-entity-marker>\n            `,iconSize:[48,48],className:""}),title:(0,c.C)(i)})),k&&this._mapItems.push(a.circle([h,u],{interactive:!1,color:n,radius:k}))}this._mapItems.forEach((e=>i.addLayer(e))),this._mapZones.forEach((e=>i.addLayer(e)))}},{kind:"method",key:"_attachObserver",value:async function(){this._resizeObserver||(await(0,h.j)(),this._resizeObserver=new ResizeObserver((()=>{var e;null===(e=this.leafletMap)||void 0===e||e.invalidateSize({debounceMoveend:!0})}))),this._resizeObserver.observe(this)}},{kind:"get",static:!0,key:"styles",value:function(){return r.iv`:host{display:block;height:300px}#map{height:100%}#map.dark{background:#090909;--map-filter:invert(0.9) hue-rotate(170deg) grayscale(0.7)}#map:active{cursor:grabbing;cursor:-moz-grabbing;cursor:-webkit-grabbing}.light{color:#000}.dark{color:#fff}.leaflet-tile-pane{filter:var(--map-filter)}.dark .leaflet-bar a{background-color:var(--card-background-color,#1c1c1c);color:#fff}.leaflet-marker-draggable{cursor:move!important}.leaflet-edit-resize{border-radius:50%;cursor:nesw-resize!important}.named-icon{display:flex;align-items:center;justify-content:center;flex-direction:column;text-align:center;color:var(--primary-text-color)}.leaflet-pane{z-index:0!important}.leaflet-bottom,.leaflet-control,.leaflet-top{z-index:1!important}.leaflet-tooltip{padding:8px;font-size:90%;background:rgba(80,80,80,.9)!important;color:#fff!important;border-radius:4px;box-shadow:none!important}`}}]}}),r.fl)}};
//# sourceMappingURL=13786-obQCasTW-rE.js.map