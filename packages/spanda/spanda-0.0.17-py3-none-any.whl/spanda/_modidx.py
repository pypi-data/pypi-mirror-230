# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/spanda',
                'doc_host': 'https://franckalbinet.github.io',
                'git_url': 'https://github.com/franckalbinet/spanda',
                'lib_path': 'spanda'},
  'syms': { 'spanda.data.external.kssl': { 'spanda.data.external.kssl.bundle': ( 'data.external.iaea.html#bundle',
                                                                                 'spanda/data/external/kssl.py'),
                                           'spanda.data.external.kssl.get_replicates': ( 'data.external.iaea.html#get_replicates',
                                                                                         'spanda/data/external/kssl.py'),
                                           'spanda.data.external.kssl.load_wetchem': ( 'data.external.iaea.html#load_wetchem',
                                                                                       'spanda/data/external/kssl.py')},
            'spanda.data.external.lucas': {},
            'spanda.data.external.wcrc': { 'spanda.data.external.wcrc.bundle': ( 'data.external.wcrc.html#bundle',
                                                                                 'spanda/data/external/wcrc.py'),
                                           'spanda.data.external.wcrc.load_wetchem': ( 'data.external.wcrc.html#load_wetchem',
                                                                                       'spanda/data/external/wcrc.py')},
            'spanda.data.transforms': { 'spanda.data.transforms.Analytes': ('data.transforms.html#analytes', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.Analytes.__init__': ( 'data.transforms.html#analytes.__init__',
                                                                                      'spanda/data/transforms.py'),
                                        'spanda.data.transforms.AnalytesBlock': ( 'data.transforms.html#analytesblock',
                                                                                  'spanda/data/transforms.py'),
                                        'spanda.data.transforms.AnalytesTfm': ( 'data.transforms.html#analytestfm',
                                                                                'spanda/data/transforms.py'),
                                        'spanda.data.transforms.AnalytesTfm.__init__': ( 'data.transforms.html#analytestfm.__init__',
                                                                                         'spanda/data/transforms.py'),
                                        'spanda.data.transforms.AnalytesTfm.encodes': ( 'data.transforms.html#analytestfm.encodes',
                                                                                        'spanda/data/transforms.py'),
                                        'spanda.data.transforms.AvgTfm': ('data.transforms.html#avgtfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.AvgTfm.encodes': ( 'data.transforms.html#avgtfm.encodes',
                                                                                   'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ContinuumRemoval': ( 'data.transforms.html#continuumremoval',
                                                                                     'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ContinuumRemoval.__init__': ( 'data.transforms.html#continuumremoval.__init__',
                                                                                              'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ContinuumRemoval.fit': ( 'data.transforms.html#continuumremoval.fit',
                                                                                         'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ContinuumRemoval.transform': ( 'data.transforms.html#continuumremoval.transform',
                                                                                               'spanda/data/transforms.py'),
                                        'spanda.data.transforms.DerivTfm': ('data.transforms.html#derivtfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.DerivTfm.__init__': ( 'data.transforms.html#derivtfm.__init__',
                                                                                      'spanda/data/transforms.py'),
                                        'spanda.data.transforms.DerivTfm.encodes': ( 'data.transforms.html#derivtfm.encodes',
                                                                                     'spanda/data/transforms.py'),
                                        'spanda.data.transforms.GADFTfm': ('data.transforms.html#gadftfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.GADFTfm.__init__': ( 'data.transforms.html#gadftfm.__init__',
                                                                                     'spanda/data/transforms.py'),
                                        'spanda.data.transforms.GADFTfm.encodes': ( 'data.transforms.html#gadftfm.encodes',
                                                                                    'spanda/data/transforms.py'),
                                        'spanda.data.transforms.GADFTfm.rescale': ( 'data.transforms.html#gadftfm.rescale',
                                                                                    'spanda/data/transforms.py'),
                                        'spanda.data.transforms.LogTfm': ('data.transforms.html#logtfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.LogTfm.encodes': ( 'data.transforms.html#logtfm.encodes',
                                                                                   'spanda/data/transforms.py'),
                                        'spanda.data.transforms.NormalizeTfm': ( 'data.transforms.html#normalizetfm',
                                                                                 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.NormalizeTfm.__init__': ( 'data.transforms.html#normalizetfm.__init__',
                                                                                          'spanda/data/transforms.py'),
                                        'spanda.data.transforms.NormalizeTfm.encodes': ( 'data.transforms.html#normalizetfm.encodes',
                                                                                         'spanda/data/transforms.py'),
                                        'spanda.data.transforms.RandWAvgTfm': ( 'data.transforms.html#randwavgtfm',
                                                                                'spanda/data/transforms.py'),
                                        'spanda.data.transforms.RandWAvgTfm._weights': ( 'data.transforms.html#randwavgtfm._weights',
                                                                                         'spanda/data/transforms.py'),
                                        'spanda.data.transforms.RandWAvgTfm.encodes': ( 'data.transforms.html#randwavgtfm.encodes',
                                                                                        'spanda/data/transforms.py'),
                                        'spanda.data.transforms.RandomCropTfm': ( 'data.transforms.html#randomcroptfm',
                                                                                  'spanda/data/transforms.py'),
                                        'spanda.data.transforms.RandomCropTfm.__init__': ( 'data.transforms.html#randomcroptfm.__init__',
                                                                                           'spanda/data/transforms.py'),
                                        'spanda.data.transforms.RandomCropTfm.encodes': ( 'data.transforms.html#randomcroptfm.encodes',
                                                                                          'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ResizeTfm': ('data.transforms.html#resizetfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ResizeTfm.__init__': ( 'data.transforms.html#resizetfm.__init__',
                                                                                       'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ResizeTfm.encodes': ( 'data.transforms.html#resizetfm.encodes',
                                                                                      'spanda/data/transforms.py'),
                                        'spanda.data.transforms.SNVTfm': ('data.transforms.html#snvtfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.SNVTfm.encodes': ( 'data.transforms.html#snvtfm.encodes',
                                                                                   'spanda/data/transforms.py'),
                                        'spanda.data.transforms.Spectra': ('data.transforms.html#spectra', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.Spectra.reset': ( 'data.transforms.html#spectra.reset',
                                                                                  'spanda/data/transforms.py'),
                                        'spanda.data.transforms.Spectra.show': ( 'data.transforms.html#spectra.show',
                                                                                 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.SpectraBlock': ( 'data.transforms.html#spectrablock',
                                                                                 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.SpectraTfm': ( 'data.transforms.html#spectratfm',
                                                                               'spanda/data/transforms.py'),
                                        'spanda.data.transforms.SpectraTfm.__init__': ( 'data.transforms.html#spectratfm.__init__',
                                                                                        'spanda/data/transforms.py'),
                                        'spanda.data.transforms.SpectraTfm.encodes': ( 'data.transforms.html#spectratfm.encodes',
                                                                                       'spanda/data/transforms.py'),
                                        'spanda.data.transforms.To3DTfm': ('data.transforms.html#to3dtfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.To3DTfm.__init__': ( 'data.transforms.html#to3dtfm.__init__',
                                                                                     'spanda/data/transforms.py'),
                                        'spanda.data.transforms.To3DTfm.encodes': ( 'data.transforms.html#to3dtfm.encodes',
                                                                                    'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ToAbsorbanceTfm': ( 'data.transforms.html#toabsorbancetfm',
                                                                                    'spanda/data/transforms.py'),
                                        'spanda.data.transforms.ToAbsorbanceTfm.encodes': ( 'data.transforms.html#toabsorbancetfm.encodes',
                                                                                            'spanda/data/transforms.py'),
                                        'spanda.data.transforms.TrimTfm': ('data.transforms.html#trimtfm', 'spanda/data/transforms.py'),
                                        'spanda.data.transforms.TrimTfm.encodes': ( 'data.transforms.html#trimtfm.encodes',
                                                                                    'spanda/data/transforms.py'),
                                        'spanda.data.transforms.asTabular': ( 'data.transforms.html#astabular',
                                                                              'spanda/data/transforms.py')},
            'spanda.miniai.activations': { 'spanda.miniai.activations.ActivationStats': ( 'miniai/activations.html#activationstats',
                                                                                          'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.ActivationStats.__init__': ( 'miniai/activations.html#activationstats.__init__',
                                                                                                   'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.ActivationStats.color_dim': ( 'miniai/activations.html#activationstats.color_dim',
                                                                                                    'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.ActivationStats.dead_chart': ( 'miniai/activations.html#activationstats.dead_chart',
                                                                                                     'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.ActivationStats.plot_stats': ( 'miniai/activations.html#activationstats.plot_stats',
                                                                                                     'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.Hook': ( 'miniai/activations.html#hook',
                                                                               'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.Hook.__del__': ( 'miniai/activations.html#hook.__del__',
                                                                                       'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.Hook.__init__': ( 'miniai/activations.html#hook.__init__',
                                                                                        'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.Hook.remove': ( 'miniai/activations.html#hook.remove',
                                                                                      'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.Hooks': ( 'miniai/activations.html#hooks',
                                                                                'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.Hooks.__del__': ( 'miniai/activations.html#hooks.__del__',
                                                                                        'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.Hooks.__delitem__': ( 'miniai/activations.html#hooks.__delitem__',
                                                                                            'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.Hooks.__enter__': ( 'miniai/activations.html#hooks.__enter__',
                                                                                          'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.Hooks.__exit__': ( 'miniai/activations.html#hooks.__exit__',
                                                                                         'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.Hooks.__init__': ( 'miniai/activations.html#hooks.__init__',
                                                                                         'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.Hooks.remove': ( 'miniai/activations.html#hooks.remove',
                                                                                       'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.HooksCallback': ( 'miniai/activations.html#hookscallback',
                                                                                        'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.HooksCallback.__init__': ( 'miniai/activations.html#hookscallback.__init__',
                                                                                                 'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.HooksCallback.__iter__': ( 'miniai/activations.html#hookscallback.__iter__',
                                                                                                 'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.HooksCallback.__len__': ( 'miniai/activations.html#hookscallback.__len__',
                                                                                                'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.HooksCallback._hookfunc': ( 'miniai/activations.html#hookscallback._hookfunc',
                                                                                                  'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.HooksCallback.after_fit': ( 'miniai/activations.html#hookscallback.after_fit',
                                                                                                  'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.HooksCallback.before_fit': ( 'miniai/activations.html#hookscallback.before_fit',
                                                                                                   'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.append_stats': ( 'miniai/activations.html#append_stats',
                                                                                       'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.get_hist': ( 'miniai/activations.html#get_hist',
                                                                                   'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.get_min': ( 'miniai/activations.html#get_min',
                                                                                  'spanda/miniai/activations.py'),
                                           'spanda.miniai.activations.set_seed': ( 'miniai/activations.html#set_seed',
                                                                                   'spanda/miniai/activations.py')},
            'spanda.miniai.augment': { 'spanda.miniai.augment.CapturePreds': ( 'miniai/augment.html#capturepreds',
                                                                               'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.CapturePreds.after_batch': ( 'miniai/augment.html#capturepreds.after_batch',
                                                                                           'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.CapturePreds.after_fit': ( 'miniai/augment.html#capturepreds.after_fit',
                                                                                         'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.CapturePreds.before_fit': ( 'miniai/augment.html#capturepreds.before_fit',
                                                                                          'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.RandCopy': ('miniai/augment.html#randcopy', 'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.RandCopy.__init__': ( 'miniai/augment.html#randcopy.__init__',
                                                                                    'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.RandCopy.forward': ( 'miniai/augment.html#randcopy.forward',
                                                                                   'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.RandErase': ('miniai/augment.html#randerase', 'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.RandErase.__init__': ( 'miniai/augment.html#randerase.__init__',
                                                                                     'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.RandErase.forward': ( 'miniai/augment.html#randerase.forward',
                                                                                    'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment._flops': ('miniai/augment.html#_flops', 'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment._rand_copy1': ('miniai/augment.html#_rand_copy1', 'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment._rand_erase1': ( 'miniai/augment.html#_rand_erase1',
                                                                               'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.capture_preds': ( 'miniai/augment.html#capture_preds',
                                                                                'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.rand_copy': ('miniai/augment.html#rand_copy', 'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.rand_erase': ('miniai/augment.html#rand_erase', 'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.show_image_batch': ( 'miniai/augment.html#show_image_batch',
                                                                                   'spanda/miniai/augment.py'),
                                       'spanda.miniai.augment.summary': ('miniai/augment.html#summary', 'spanda/miniai/augment.py')},
            'spanda.miniai.conv': { 'spanda.miniai.conv.collate_device': ( 'miniai/convolutions.html#collate_device',
                                                                           'spanda/miniai/conv.py'),
                                    'spanda.miniai.conv.conv': ('miniai/convolutions.html#conv', 'spanda/miniai/conv.py'),
                                    'spanda.miniai.conv.to_device': ('miniai/convolutions.html#to_device', 'spanda/miniai/conv.py')},
            'spanda.miniai.datasets': { 'spanda.miniai.datasets.DataLoaders': ( 'miniai/datasets.html#dataloaders',
                                                                                'spanda/miniai/datasets.py'),
                                        'spanda.miniai.datasets.DataLoaders.__init__': ( 'miniai/datasets.html#dataloaders.__init__',
                                                                                         'spanda/miniai/datasets.py'),
                                        'spanda.miniai.datasets.DataLoaders.from_dd': ( 'miniai/datasets.html#dataloaders.from_dd',
                                                                                        'spanda/miniai/datasets.py'),
                                        'spanda.miniai.datasets.collate_dict': ( 'miniai/datasets.html#collate_dict',
                                                                                 'spanda/miniai/datasets.py'),
                                        'spanda.miniai.datasets.get_grid': ('miniai/datasets.html#get_grid', 'spanda/miniai/datasets.py'),
                                        'spanda.miniai.datasets.inplace': ('miniai/datasets.html#inplace', 'spanda/miniai/datasets.py'),
                                        'spanda.miniai.datasets.show_image': ( 'miniai/datasets.html#show_image',
                                                                               'spanda/miniai/datasets.py'),
                                        'spanda.miniai.datasets.show_images': ( 'miniai/datasets.html#show_images',
                                                                                'spanda/miniai/datasets.py'),
                                        'spanda.miniai.datasets.subplots': ('miniai/datasets.html#subplots', 'spanda/miniai/datasets.py')},
            'spanda.miniai.init': { 'spanda.miniai.init.BatchTransformCB': ( 'miniai/initializing.html#batchtransformcb',
                                                                             'spanda/miniai/init.py'),
                                    'spanda.miniai.init.BatchTransformCB.__init__': ( 'miniai/initializing.html#batchtransformcb.__init__',
                                                                                      'spanda/miniai/init.py'),
                                    'spanda.miniai.init.BatchTransformCB.before_batch': ( 'miniai/initializing.html#batchtransformcb.before_batch',
                                                                                          'spanda/miniai/init.py'),
                                    'spanda.miniai.init.GeneralRelu': ('miniai/initializing.html#generalrelu', 'spanda/miniai/init.py'),
                                    'spanda.miniai.init.GeneralRelu.__init__': ( 'miniai/initializing.html#generalrelu.__init__',
                                                                                 'spanda/miniai/init.py'),
                                    'spanda.miniai.init.GeneralRelu.forward': ( 'miniai/initializing.html#generalrelu.forward',
                                                                                'spanda/miniai/init.py'),
                                    'spanda.miniai.init._lsuv_stats': ('miniai/initializing.html#_lsuv_stats', 'spanda/miniai/init.py'),
                                    'spanda.miniai.init.clean_ipython_hist': ( 'miniai/initializing.html#clean_ipython_hist',
                                                                               'spanda/miniai/init.py'),
                                    'spanda.miniai.init.clean_mem': ('miniai/initializing.html#clean_mem', 'spanda/miniai/init.py'),
                                    'spanda.miniai.init.clean_tb': ('miniai/initializing.html#clean_tb', 'spanda/miniai/init.py'),
                                    'spanda.miniai.init.conv': ('miniai/initializing.html#conv', 'spanda/miniai/init.py'),
                                    'spanda.miniai.init.get_model': ('miniai/initializing.html#get_model', 'spanda/miniai/init.py'),
                                    'spanda.miniai.init.init_weights': ('miniai/initializing.html#init_weights', 'spanda/miniai/init.py'),
                                    'spanda.miniai.init.lsuv_init': ('miniai/initializing.html#lsuv_init', 'spanda/miniai/init.py'),
                                    'spanda.miniai.init.plot_func': ('miniai/initializing.html#plot_func', 'spanda/miniai/init.py')},
            'spanda.miniai.learner': { 'spanda.miniai.learner.Callback': ('miniai/learner.html#callback', 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.CancelBatchException': ( 'miniai/learner.html#cancelbatchexception',
                                                                                       'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.CancelEpochException': ( 'miniai/learner.html#cancelepochexception',
                                                                                       'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.CancelFitException': ( 'miniai/learner.html#cancelfitexception',
                                                                                     'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.DeviceCB': ('miniai/learner.html#devicecb', 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.DeviceCB.__init__': ( 'miniai/learner.html#devicecb.__init__',
                                                                                    'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.DeviceCB.before_batch': ( 'miniai/learner.html#devicecb.before_batch',
                                                                                        'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.DeviceCB.before_fit': ( 'miniai/learner.html#devicecb.before_fit',
                                                                                      'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.LRFinderCB': ('miniai/learner.html#lrfindercb', 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.LRFinderCB.__init__': ( 'miniai/learner.html#lrfindercb.__init__',
                                                                                      'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.LRFinderCB.after_batch': ( 'miniai/learner.html#lrfindercb.after_batch',
                                                                                         'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.LRFinderCB.before_fit': ( 'miniai/learner.html#lrfindercb.before_fit',
                                                                                        'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.LRFinderCB.cleanup_fit': ( 'miniai/learner.html#lrfindercb.cleanup_fit',
                                                                                         'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.Learner': ('miniai/learner.html#learner', 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.Learner.__getattr__': ( 'miniai/learner.html#learner.__getattr__',
                                                                                      'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.Learner.__init__': ( 'miniai/learner.html#learner.__init__',
                                                                                   'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.Learner._fit': ( 'miniai/learner.html#learner._fit',
                                                                               'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.Learner._one_batch': ( 'miniai/learner.html#learner._one_batch',
                                                                                     'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.Learner._one_epoch': ( 'miniai/learner.html#learner._one_epoch',
                                                                                     'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.Learner.callback': ( 'miniai/learner.html#learner.callback',
                                                                                   'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.Learner.fit': ('miniai/learner.html#learner.fit', 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.Learner.one_epoch': ( 'miniai/learner.html#learner.one_epoch',
                                                                                    'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.Learner.training': ( 'miniai/learner.html#learner.training',
                                                                                   'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.MetricsCB': ('miniai/learner.html#metricscb', 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.MetricsCB.__init__': ( 'miniai/learner.html#metricscb.__init__',
                                                                                     'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.MetricsCB._log': ( 'miniai/learner.html#metricscb._log',
                                                                                 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.MetricsCB.after_batch': ( 'miniai/learner.html#metricscb.after_batch',
                                                                                        'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.MetricsCB.after_epoch': ( 'miniai/learner.html#metricscb.after_epoch',
                                                                                        'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.MetricsCB.before_epoch': ( 'miniai/learner.html#metricscb.before_epoch',
                                                                                         'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.MetricsCB.before_fit': ( 'miniai/learner.html#metricscb.before_fit',
                                                                                       'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.MomentumLearner': ( 'miniai/learner.html#momentumlearner',
                                                                                  'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.MomentumLearner.__init__': ( 'miniai/learner.html#momentumlearner.__init__',
                                                                                           'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.MomentumLearner.zero_grad': ( 'miniai/learner.html#momentumlearner.zero_grad',
                                                                                            'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.ProgressCB': ('miniai/learner.html#progresscb', 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.ProgressCB.__init__': ( 'miniai/learner.html#progresscb.__init__',
                                                                                      'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.ProgressCB._log': ( 'miniai/learner.html#progresscb._log',
                                                                                  'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.ProgressCB.after_batch': ( 'miniai/learner.html#progresscb.after_batch',
                                                                                         'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.ProgressCB.after_epoch': ( 'miniai/learner.html#progresscb.after_epoch',
                                                                                         'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.ProgressCB.before_epoch': ( 'miniai/learner.html#progresscb.before_epoch',
                                                                                          'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.ProgressCB.before_fit': ( 'miniai/learner.html#progresscb.before_fit',
                                                                                        'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.SingleBatchCB': ( 'miniai/learner.html#singlebatchcb',
                                                                                'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.SingleBatchCB.after_batch': ( 'miniai/learner.html#singlebatchcb.after_batch',
                                                                                            'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainCB': ('miniai/learner.html#traincb', 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainCB.__init__': ( 'miniai/learner.html#traincb.__init__',
                                                                                   'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainCB.backward': ( 'miniai/learner.html#traincb.backward',
                                                                                   'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainCB.get_loss': ( 'miniai/learner.html#traincb.get_loss',
                                                                                   'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainCB.predict': ( 'miniai/learner.html#traincb.predict',
                                                                                  'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainCB.step': ( 'miniai/learner.html#traincb.step',
                                                                               'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainCB.zero_grad': ( 'miniai/learner.html#traincb.zero_grad',
                                                                                    'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainLearner': ( 'miniai/learner.html#trainlearner',
                                                                               'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainLearner.backward': ( 'miniai/learner.html#trainlearner.backward',
                                                                                        'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainLearner.get_loss': ( 'miniai/learner.html#trainlearner.get_loss',
                                                                                        'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainLearner.predict': ( 'miniai/learner.html#trainlearner.predict',
                                                                                       'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainLearner.step': ( 'miniai/learner.html#trainlearner.step',
                                                                                    'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.TrainLearner.zero_grad': ( 'miniai/learner.html#trainlearner.zero_grad',
                                                                                         'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.lr_find': ('miniai/learner.html#lr_find', 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.run_cbs': ('miniai/learner.html#run_cbs', 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.to_cpu': ('miniai/learner.html#to_cpu', 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.with_cbs': ('miniai/learner.html#with_cbs', 'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.with_cbs.__call__': ( 'miniai/learner.html#with_cbs.__call__',
                                                                                    'spanda/miniai/learner.py'),
                                       'spanda.miniai.learner.with_cbs.__init__': ( 'miniai/learner.html#with_cbs.__init__',
                                                                                    'spanda/miniai/learner.py')},
            'spanda.miniai.resnet': { 'spanda.miniai.resnet.ResBlock': ('miniai/resnet.html#resblock', 'spanda/miniai/resnet.py'),
                                      'spanda.miniai.resnet.ResBlock.__init__': ( 'miniai/resnet.html#resblock.__init__',
                                                                                  'spanda/miniai/resnet.py'),
                                      'spanda.miniai.resnet.ResBlock.forward': ( 'miniai/resnet.html#resblock.forward',
                                                                                 'spanda/miniai/resnet.py'),
                                      'spanda.miniai.resnet._conv_block': ('miniai/resnet.html#_conv_block', 'spanda/miniai/resnet.py'),
                                      'spanda.miniai.resnet.summary': ('miniai/resnet.html#summary', 'spanda/miniai/resnet.py')},
            'spanda.miniai.sgd': { 'spanda.miniai.sgd.BaseSchedCB': ('miniai/accel_sgd.html#baseschedcb', 'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.BaseSchedCB.__init__': ( 'miniai/accel_sgd.html#baseschedcb.__init__',
                                                                               'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.BaseSchedCB._step': ( 'miniai/accel_sgd.html#baseschedcb._step',
                                                                            'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.BaseSchedCB.before_fit': ( 'miniai/accel_sgd.html#baseschedcb.before_fit',
                                                                                 'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.BatchSchedCB': ('miniai/accel_sgd.html#batchschedcb', 'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.BatchSchedCB.after_batch': ( 'miniai/accel_sgd.html#batchschedcb.after_batch',
                                                                                   'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.EpochSchedCB': ('miniai/accel_sgd.html#epochschedcb', 'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.EpochSchedCB.after_epoch': ( 'miniai/accel_sgd.html#epochschedcb.after_epoch',
                                                                                   'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.HasLearnCB': ('miniai/accel_sgd.html#haslearncb', 'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.HasLearnCB.after_fit': ( 'miniai/accel_sgd.html#haslearncb.after_fit',
                                                                               'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.HasLearnCB.before_fit': ( 'miniai/accel_sgd.html#haslearncb.before_fit',
                                                                                'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.RecorderCB': ('miniai/accel_sgd.html#recordercb', 'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.RecorderCB.__init__': ( 'miniai/accel_sgd.html#recordercb.__init__',
                                                                              'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.RecorderCB.after_batch': ( 'miniai/accel_sgd.html#recordercb.after_batch',
                                                                                 'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.RecorderCB.before_fit': ( 'miniai/accel_sgd.html#recordercb.before_fit',
                                                                                'spanda/miniai/sgd.py'),
                                   'spanda.miniai.sgd.RecorderCB.plot': ('miniai/accel_sgd.html#recordercb.plot', 'spanda/miniai/sgd.py')},
            'spanda.miniai.training': { 'spanda.miniai.training.Dataset': ( 'miniai/minibatch_training.html#dataset',
                                                                            'spanda/miniai/training.py'),
                                        'spanda.miniai.training.Dataset.__getitem__': ( 'miniai/minibatch_training.html#dataset.__getitem__',
                                                                                        'spanda/miniai/training.py'),
                                        'spanda.miniai.training.Dataset.__init__': ( 'miniai/minibatch_training.html#dataset.__init__',
                                                                                     'spanda/miniai/training.py'),
                                        'spanda.miniai.training.Dataset.__len__': ( 'miniai/minibatch_training.html#dataset.__len__',
                                                                                    'spanda/miniai/training.py'),
                                        'spanda.miniai.training.accuracy': ( 'miniai/minibatch_training.html#accuracy',
                                                                             'spanda/miniai/training.py'),
                                        'spanda.miniai.training.fit': ('miniai/minibatch_training.html#fit', 'spanda/miniai/training.py'),
                                        'spanda.miniai.training.get_dls': ( 'miniai/minibatch_training.html#get_dls',
                                                                            'spanda/miniai/training.py'),
                                        'spanda.miniai.training.report': ( 'miniai/minibatch_training.html#report',
                                                                           'spanda/miniai/training.py')},
            'spanda.readers': { 'spanda.readers.read_asd': ('readers.html#read_asd', 'spanda/readers.py'),
                                'spanda.readers.read_opus': ('readers.html#read_opus', 'spanda/readers.py'),
                                'spanda.readers.read_spa': ('readers.html#read_spa', 'spanda/readers.py'),
                                'spanda.readers.read_spectra': ('readers.html#read_spectra', 'spanda/readers.py'),
                                'spanda.readers.set_negative_to_min_positive': ( 'readers.html#set_negative_to_min_positive',
                                                                                 'spanda/readers.py')},
            'spanda.sig': {'spanda.sig.interp': ('sig.html#interp', 'spanda/sig.py')},
            'spanda.utils': {'spanda.utils.select_rows': ('utils.html#select_rows', 'spanda/utils.py')}}}
