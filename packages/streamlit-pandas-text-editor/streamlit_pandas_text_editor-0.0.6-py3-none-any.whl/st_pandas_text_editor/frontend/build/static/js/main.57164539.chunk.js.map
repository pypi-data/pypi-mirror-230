{"version":3,"sources":["PandasTextEditor.js","index.tsx"],"names":["FirstDropdownOption","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","addStar","columnName","_this$props","props","editorState","onChange","contentState","Modifier","replaceText","getCurrentContent","getSelection","getCurrentInlineStyle","EditorState","push","_createClass","key","value","_this2","column","this","_jsx","style","padding","children","_jsxs","Dropdown","Toggle","variant","id","Menu","maxHeight","overflowY","columnCount","map","index","Item","onClick","Component","SecondDropdownOption","_Component2","_super2","_this3","_len2","_key2","aggName","_this3$props","_this4","agg","Button","_React$Component","_super3","_this5","_len3","_key3","state","isHovered","onButtonClicked","content","stateToHTML","Streamlit","setComponentValue","handleMouseEnter","setState","handleMouseLeave","buttonStyle","backgroundColor","color","border","borderRadius","transition","marginTop","onMouseEnter","onMouseLeave","React","PandasTextEditor","_StreamlitComponentBa","_super4","_this6","onClicked","prevState","numClicks","onFocus","isFocused","onBlur","handleEditorChange","createEmpty","columns","position","Editor","onEditorStateChange","wrapperClassName","editorClassName","toolbarClassName","toolbarCustomButtons","toolbar","options","inline","bold","className","italic","underline","blockType","inDropdown","colorPicker","component","undefined","popupClassName","colors","StreamlitComponentBase","withStreamlitConnection","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57164539.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { EditorState, Modifier } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport './app.css';   \r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { stateToHTML } from 'draft-js-export-html';\r\n\r\n// first choice dropdown\r\nclass FirstDropdownOption extends Component {\r\n  static propTypes = {\r\n    onChange: PropTypes.func,\r\n    editorState: PropTypes.object,\r\n    column: PropTypes.arrayOf(PropTypes.string),\r\n  };\r\n\r\n  addStar = (columnName) => {\r\n    const { editorState, onChange } = this.props;\r\n    const contentState = Modifier.replaceText(\r\n      editorState.getCurrentContent(),\r\n      editorState.getSelection(),\r\n      `{df['${columnName}']`,\r\n      editorState.getCurrentInlineStyle(),\r\n    );\r\n    onChange(EditorState.push(editorState, contentState, 'insert-characters'));\r\n  };\r\n\r\n  render() {\r\n    const { column } = this.props;\r\n\r\n    return (\r\n  <div style={{ padding: '0 3px'}}>\r\n    <Dropdown>\r\n      <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n          Select Variable\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu style={{ maxHeight: \"150px\", overflowY: \"auto\", columnCount: 2 }}>\r\n        <div>\r\n          {column.map((columnName, index) => {\r\n            if (index % 2 === 0) {\r\n              return (\r\n                <Dropdown.Item key={columnName} onClick={() => this.addStar(columnName)}>\r\n                  {columnName}\r\n                </Dropdown.Item>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n        <div>\r\n          {column.map((columnName, index) => {\r\n            if (index % 2 === 1) {\r\n              return (\r\n                <Dropdown.Item key={columnName} onClick={() => this.addStar(columnName)}>\r\n                  {columnName}\r\n                </Dropdown.Item>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\n// second dropdown choice\r\nclass SecondDropdownOption extends Component {\r\n  static propTypes = {\r\n    onChange: PropTypes.func,\r\n    editorState: PropTypes.object,\r\n    agg: PropTypes.arrayOf(PropTypes.string),\r\n  };\r\n\r\n  addStar = (aggName) => {\r\n    const { editorState, onChange } = this.props;\r\n    const contentState = Modifier.replaceText(\r\n      editorState.getCurrentContent(),\r\n      editorState.getSelection(),\r\n      `.${aggName}()}`,\r\n      editorState.getCurrentInlineStyle(),\r\n    );\r\n    onChange(EditorState.push(editorState, contentState, 'insert-characters'));\r\n  };\r\n\r\n  render() {\r\n    const { agg } = this.props;\r\n\r\n    return (\r\n  <div style={{ padding: '0 3px'}}>\r\n    <Dropdown>\r\n      <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n          Select Aggregate\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu style={{ maxHeight: \"150px\", overflowY: \"auto\", columnCount: 2 }}>\r\n        <div>\r\n          {agg.map((aggName, index) => {\r\n            if (index % 2 === 0) {\r\n              return (\r\n                <Dropdown.Item key={aggName} onClick={() => this.addStar(aggName)}>\r\n                  {aggName}\r\n                </Dropdown.Item>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n        <div>\r\n          {agg.map((aggName, index) => {\r\n            if (index % 2 === 1) {\r\n              return (\r\n                <Dropdown.Item key={aggName} onClick={() => this.addStar(aggName)}>\r\n                  {aggName}\r\n                </Dropdown.Item>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\n// my custom react button to emulate the streamlit button\r\nclass Button extends React.Component {\r\n  state = {\r\n    isHovered: false\r\n  };\r\n\r\n  onButtonClicked = () => {\r\n    const { editorState } = this.props;\r\n    const content = stateToHTML(editorState.getCurrentContent());\r\n    Streamlit.setComponentValue([true, content]);\r\n  };\r\n\r\n  handleMouseEnter = () => {\r\n    this.setState({ isHovered: true });\r\n  };\r\n\r\n  handleMouseLeave = () => {\r\n    this.setState({ isHovered: false });\r\n  };\r\n\r\n  render() {\r\n    const { isHovered } = this.state;\r\n    const buttonContainerStyle = {\r\n      marginTop: '10px', // Adjust the value as needed\r\n    };\r\n    const buttonStyle = {\r\n      backgroundColor: 'initial',\r\n      color: isHovered ? '#FF4B4B' : 'black',\r\n      border: `1px solid ${isHovered ? 'red' : '#F0F2F6'}`,\r\n      borderRadius: '5px',\r\n      padding: '5px 8px',\r\n      transition: 'background-color 0.1s ease',\r\n      // Add other styles here\r\n    };\r\n\r\n    return (\r\n      <div style={buttonContainerStyle}>\r\n        <button\r\n          style={buttonStyle}\r\n          onMouseEnter={this.handleMouseEnter}\r\n          onMouseLeave={this.handleMouseLeave}\r\n          onClick={this.onButtonClicked}\r\n        >\r\n          Confirm Text\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// main component\r\nclass PandasTextEditor extends StreamlitComponentBase {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      numClicks: 0,\r\n      isFocused: false,\r\n      editorState: EditorState.createEmpty(), // Initialize the editor state\r\n    };\r\n  }\r\n\r\n  onClicked = () => {\r\n    this.setState(\r\n      (prevState) => ({ numClicks: prevState.numClicks + 1 }),\r\n      () => Streamlit.setComponentValue(this.state.numClicks)\r\n    );\r\n  };\r\n\r\n  onFocus = () => {\r\n    this.setState({ isFocused: true });\r\n  };\r\n\r\n  onBlur = () => {\r\n    this.setState({ isFocused: false });\r\n  };\r\n\r\n  handleEditorChange = (editorState) => {\r\n    this.setState({ editorState });\r\n  };\r\n\r\n  render() {\r\n    const { args } = this.props;\r\n    const { editorState } = this.state;\r\n\r\n    const columns = args[\"columns\"];\r\n    const agg = args[\"agg\"];\r\n\r\n    return (\r\n      <div style={{position:\"relative\"}}>\r\n          <Editor\r\n            editorState={editorState}\r\n            onEditorStateChange={this.handleEditorChange}\r\n            wrapperClassName=\"wrapper-class\"\r\n            editorClassName=\"editor-class\"\r\n            toolbarClassName=\"toolbar-class\"\r\n            toolbarCustomButtons={[<FirstDropdownOption column={columns} />, <SecondDropdownOption agg={agg} />]}\r\n            toolbar={{\r\n              options: ['inline', 'blockType', 'colorPicker'],\r\n              inline: {\r\n                options: ['bold', 'italic', 'underline'],\r\n                bold: { className: 'bordered-option-classname' },\r\n                italic: { className: 'bordered-option-classname' },\r\n                underline: { className: 'bordered-option-classname' },\r\n              },             \r\n              blockType:{\r\n                inDropdown: true,\r\n                maxHeight: \"100px\", overflowY: \"auto\", columnCount: 2\r\n              },\r\n              colorPicker: {\r\n                component: undefined,\r\n                popupClassName: undefined,\r\n                colors: ['rgb(0, 0, 0)',\r\n                'rgb(255, 0, 0)',   // Red\r\n                'rgb(0, 255, 0)',   // Green\r\n                'rgb(0, 0, 255)',   // Blue\r\n                'rgb(255, 255, 0)', // Yellow\r\n                'rgb(255, 255, 255)']\r\n              }\r\n            }}\r\n          />\r\n          <Button editorState={editorState} />\r\n      </div>\r\n        \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(PandasTextEditor);","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport PandasTextEditor from \"./PandasTextEditor\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <PandasTextEditor />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}