import{isEmpty}from"../../base/helpers.mjs";import{View}from"../../view/base.mjs";import{ScribbleView}from"../../view/scribble.mjs";import{ImageView,BackgroundImageView}from"../../view/image.mjs";import{ImageEditorImageNodeOptionsFormView}from"../../forms/enfugue/image-editor.mjs";import{CompoundNodeView}from"../base.mjs";import{ImageEditorNodeView}from"./base.mjs";import{ImageEditorScribbleNodeView}from"./scribble.mjs";class ImageEditorCompoundImageNodeView extends CompoundNodeView{static hideHeader=!0;static snapSize=8;static nodeTypeName="Images";static canFlipHeader=!0;static padding=8;static edgeHandlerTolerance=8;static minHeight=32;static minWidth=32;static closeText="Remove";static passThroughMethods=["clearMemory","increaseSize","decreaseSize","togglePencilShape","toggleEraser","rotateClockwise","rotateCounterClockwise","mirrorHorizontally","mirrorVertically","toggleOptions"];constructor(e,t,i,r,s,o,a,n){super(e,t,i,r,s,o,a,n);for(let e of this.constructor.passThroughMethods)this[e]=function(){return this.content.selectedNode[e].apply(this.content.selectedNode,Array.from(arguments))}}}class ImageScribbleView extends View{static tagName="enfugue-image-scribble-view";constructor(e,t,i,r){super(e),this.src=t,isEmpty(t)||(this.image=new BackgroundImageView(e,t)),this.scribble=new ScribbleView(e,i,r),this.clearScribble()}get isEraser(){return this.scribble.isEraser}set isEraser(e){this.scribble.isEraser=e}get shape(){return this.scribble.shape}set shape(e){this.scribble.shape=e}setScribble(e,t,i){this.scribble.setMemory(e),this.scribble.resizeCanvas(t,i),this.scribble.show()}clearScribble(){this.scribble.clearMemory(),this.scribble.hide()}clearMemory(){this.scribble.clearMemory()}increaseSize(){this.scribble.increaseSize()}decreaseSize(){this.scribble.decreaseSize()}showScribble(){this.scribble.show()}resize(e,t){this.scribble.resizeCanvas(e,t)}get scribbleSrc(){return this.scribble.src}get imageSrc(){return isEmpty(this.image)?this.src:this.image.src}mirrorHorizontally(){if(!isEmpty(this.image))return this.image.mirrorHorizontally()}mirrorVertically(){if(!isEmpty(this.image))return this.image.mirrorVertically()}rotateClockwise(){if(!isEmpty(this.image))return this.image.rotateClockwise()}rotateCounterClockwise(){if(!isEmpty(this.image))return this.image.rotateCounterClockwise()}addImageClass(e){isEmpty(this.image)||this.image.addClass(e)}removeImageClass(e){isEmpty(this.image)||this.image.removeClass(e)}async build(){let e=await super.build();return e.content(await this.scribble.getNode()),isEmpty(this.image)||e.append(await this.image.getNode()),e}}class ImageEditorImageNodeView extends ImageEditorNodeView{static hideHeader=!0;static canMerge=!0;static compoundNodeClass=ImageEditorCompoundImageNodeView;static nodeTypeName="Image";static allFitModes=["actual","stretch","cover","contain"];static allAnchorModes=["top-left","top-center","top-right","center-left","center-center","center-right","bottom-left","bottom-center","bottom-right"];static scribbleButtons=["erase","shape","clear","increase","decrease"];static className="image-editor-image-node-view";static nodeButtons={...ImageEditorNodeView.nodeButtons,shape:{disabled:!0,...ImageEditorScribbleNodeView.nodeButtons.shape},erase:{disabled:!0,...ImageEditorScribbleNodeView.nodeButtons.erase},clear:{disabled:!0,...ImageEditorScribbleNodeView.nodeButtons.clear},increase:{disabled:!0,...ImageEditorScribbleNodeView.nodeButtons.increase},decrease:{disabled:!0,...ImageEditorScribbleNodeView.nodeButtons.decrease},"mirror-x":{icon:"fa-solid fa-left-right",tooltip:"Mirror Horizontally",shortcut:"z",callback:function(){this.mirrorHorizontally()}},"mirror-y":{icon:"fa-solid fa-up-down",tooltip:"Mirror Vertically",shortcut:"y",callback:function(){this.mirrorVertically()}},"rotate-clockwise":{icon:"fa-solid fa-rotate-right",tooltip:"Rotate Clockwise",shortcut:"r",callback:function(){this.rotateClockwise()}},"rotate-counter-clockwise":{icon:"fa-solid fa-rotate-left",tooltip:"Rotate Counter-Clockwise",shortcut:"w",callback:function(){this.rotateCounterClockwise()}}};static optionsFormView=ImageEditorImageNodeOptionsFormView;constructor(e,t,i,r,s,o,a){super(e,t,new ImageScribbleView(e.config,isEmpty(i)?null:i.src,o,a),r,s,o,a)}async resized(){await super.resized(),this.content.resize(this.visibleWidth-2*this.constructor.padding,this.visibleHeight-2*this.constructor.padding)}clearMemory(){this.content.clearMemory()}increaseSize(){this.content.increaseSize()}decreaseSize(){this.content.decreaseSize()}async updateOptions(e){if(super.updateOptions(e),this.updateFit(e.fit),this.updateAnchor(e.anchor),this.infer=e.infer,this.control=e.control,this.inpaint=e.inpaint,this.imagePrompt=e.imagePrompt,this.strength=e.strength,this.imagePromptScale=e.imagePromptScale,this.controlnet=e.controlnet,this.conditioningScale=e.conditioningScale,this.processControlImage=e.processControlImage,this.cropInpaint=e.cropInpaint,this.inpaintFeather=e.inpaintFeather,void 0!==this.node&&(this.inpaint?(this.content.showScribble(),this.content.resize(this.w,this.h)):this.content.clearScribble()),!isEmpty(this.buttons))for(let t of this.constructor.scribbleButtons)this.buttons[t].disabled=!e.inpaint;this.rebuildHeaderButtons()}async updateFit(e){this.fit=e,this.content.fit=e;for(let e of this.constructor.allFitModes)this.content.removeImageClass(`fit-${e}`);isEmpty(e)||this.content.addImageClass(`fit-${e}`)}async updateAnchor(e){this.anchor=e,this.content.anchor=e;for(let e of this.constructor.allAnchorModes)this.content.removeImageClass(`anchor-${e}`);isEmpty(e)||this.content.addImageClass(`anchor-${e}`)}mirrorHorizontally(){return this.content.mirrorHorizontally()}mirrorVertically(){return this.content.mirrorVertically()}rotateClockwise(){return this.content.rotateClockwise()}rotateCounterClockwise(){return this.content.rotateCounterClockwise()}togglePencilShape(){"circle"===this.content.shape?(this.content.shape="square",this.buttons.shape.tooltip=ImageEditorScribbleNodeView.pencilCircleTooltip,this.buttons.shape.icon=ImageEditorScribbleNodeView.pencilCircleIcon):(this.content.shape="circle",this.buttons.shape.tooltip=ImageEditorScribbleNodeView.pencilSquareTooltip,this.buttons.shape.icon=ImageEditorScribbleNodeView.pencilSquareIcon),this.rebuildHeaderButtons()}toggleEraser(){!0===this.content.isEraser?(this.content.isEraser=!1,this.buttons.erase.icon=ImageEditorScribbleNodeView.eraserIcon,this.buttons.erase.tooltip=ImageEditorScribbleNodeView.eraserTooltip):(this.content.isEraser=!0,this.buttons.erase.icon=ImageEditorScribbleNodeView.pencilIcon,this.buttons.erase.tooltip=ImageEditorScribbleNodeView.pencilTooltip),this.rebuildHeaderButtons()}getState(e=!0){let t=super.getState(e);return t.scribbleSrc=e?this.content.scribbleSrc:null,t.src=e?this.content.imageSrc:null,t.anchor=this.anchor||null,t.fit=this.fit||null,t.infer=this.infer||!1,t.control=this.control||!1,t.inpaint=this.inpaint||!1,t.imagePrompt=this.imagePrompt||!1,t.imagePromptScale=this.imagePromptScale||.9,t.strength=this.strength||.8,t.controlnet=this.controlnet||null,t.colorSpace=this.colorSpace||"invert",t.cropInpaint=!1!==this.cropInpaint,t.inpaintFeather=this.inpaintFeather||32,t.conditioningScale=this.conditioningScale||1,t.processControlImage=!1!==this.processControlImage,t.removeBackground=!0===this.removeBackground,t.scaleToModelSize=!0===this.scaleToModelSize,t}async setState(e){if(await super.setState(e),await this.setContent(new ImageScribbleView(this.config,e.src,e.w,e.h)),await this.updateAnchor(e.anchor),await this.updateFit(e.fit),e.inpaint){let t=new Image;t.onload=()=>{this.content.setScribble(t,this.w,this.h)},t.src=e.scribbleSrc}else this.content.clearScribble();if(!isEmpty(this.buttons))for(let t of this.constructor.scribbleButtons)this.buttons[t].disabled=!e.inpaint;this.rebuildHeaderButtons()}static getDefaultState(){return{classname:this.name,inpaint:!1,control:!1,inpaint:!1,imagePrompt:!1,cropInpaint:!0,inpaintFeather:32,inferenceSteps:null,guidanceScale:null,imagePromptScale:.9,strength:.8,processControlImage:!0,colorSpace:"invert",conditioningScale:1,removeBackground:!1,scaleToModelSize:!1}}async build(){let e=await super.build();if(!0===this.inpaint){for(let e of this.constructor.scribbleButtons)this.buttons[e].disabled=!1;setTimeout((()=>this.rebuildHeaderButtons()),250)}return e}}export{ImageEditorImageNodeView,ImageEditorCompoundImageNodeView};
