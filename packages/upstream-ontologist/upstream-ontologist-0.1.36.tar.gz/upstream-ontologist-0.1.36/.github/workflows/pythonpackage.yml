---
name: Python package

"on":
  push:
  pull_request:
  schedule:
    - cron: '0 6 * * *'  # Daily 6AM UTC build

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pre-dependencies
        run: |
          python -m pip install -U pip "setuptools>=60" setuptools-rust
      - name: Install dependencies (Linux)
        run: |
          sudo apt install libxml2-dev libxslt1-dev
        if: "matrix.os == 'ubuntu-latest'"
      - name: Install dependencies (Mac OS X)
        run: |
          brew install pcre
        if: "matrix.os == 'macos-latest'"
      - name: Install dependencies
        run: |
          python -m pip install  \
            '.[readme,cargo,pyproject,debian_watch,debian_rules,debian_changelog,setup.cfg]'
          python setup.py build_ext -i
        if: "matrix.os == 'ubuntu-latest'"
      - name: Install dependencies
        run: |
          python -m pip install \
            '.[readme,cargo,pyproject,debian_watch,debian_rules,debian_changelog,setup.cfg]'
          python setup.py build_ext -i
        if: "matrix.os == 'macos-latest'"
      - name: Install breezy
        run: |
          python -m pip install breezy
        if: "matrix.os != 'windows-latest'"
      - name: Style checks (flake8)
        run: |
          python -m pip install --upgrade pip flake8
          python -m flake8
        continue-on-error: true
      - name: Style checks (yamllint)
        run: |
          python -m pip install --upgrade yamllint
          yamllint .
        continue-on-error: true
      - name: Typing checks
        run: |
          pip install -U mypy types-docutils types-Markdown types-toml \
             types-beautifulsoup4
          python -m mypy upstream_ontologist/ tests/
        continue-on-error: true
      - name: Test suite run
        run: |
          python -m unittest tests.test_suite
        env:
          PYTHONHASHSEED: random
