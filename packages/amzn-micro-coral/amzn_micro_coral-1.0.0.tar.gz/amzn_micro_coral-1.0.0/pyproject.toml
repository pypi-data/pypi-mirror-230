[tool.poetry]
name = "amzn_micro_coral"
version = "1.0.0"
description = "Minimal Coral interface for when you can't use a prepackaged client."
authors = ["Chad Crawford <chadcr@amazon.com>"]
readme = "README.md"
packages = [
    { include = "amzn_micro_coral", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.8"
requests = "^2.31.0"
requests-kerberos = { version = "^0.14.0", optional = true }
requests-auth-aws-sigv4 = { version = "^0.7", optional = true }
boto3 = { version = "^1.28.37", optional = true }
cached-property = "^1.5.2"

[tool.poetry.extras]
sigv4 = ["boto3", "requests-auth-aws-sigv4"]
midway = ["requests-kerberos"]

[tool.poetry.group.typing.dependencies]
mypy = "^0.982"
types-requests = "^2.31.0.2"
boto3-stubs = "^1.28.37"

[tool.poetry.group.linting.dependencies]
flake8 = "^5.0.4"
black = "^22.10.0"
isort = "^5.10.1"
flake8-pyproject = "^1.2.3"

[tool.poetry.group.testing.dependencies]
pytest = "^7.1.3"
pytest-xdist = "^2.5.0"
pytest-cov = "^4.0.0"
coverage = "^6.5.0"
pytest-mypy = "^0.10.0"
pytest-mock = "^3.11.1"
requests-mock = "^1.11.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
check_untyped_defs = true
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = [
    'requests_kerberos.*',
    'requests_auth_aws_sigv4.*',
    'cached_property.*',
]
ignore_missing_imports = true

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100
known_first_party = [ "amzn_micro_coral" ]

[tool.flake8]
max-line-length = 100
extend-ignore = "E203"

[tool.pytest.ini_options]
addopts = [
    "--durations=5",
    "--color=yes",
    "--cov=amzn_micro_coral"
]
testpaths = [ "test" ]
looponfailroots = [
    "src",
    "test",
]

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.paths]
source =  [
    "src/",
    ".venv/lib/*/site-packages/",
]

[tool.coverage.report]
show_missing = true
# Uncomment the following line to fail to build when the coverage is too low
# fail_under = 99

[tool.coverage.xml]
output = "private/coverage/coverage.xml"

[tool.coverage.html]
directory = "private/coverage/"
