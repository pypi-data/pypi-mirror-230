
variables:
  PYTHON_DEFAULT_VERSION: "3.11"


stages:
  - test
  - build
  - deploy
  - release


code style checks:
  stage: test
  image: python:${PYTHON_DEFAULT_VERSION}
  before_script:
    - pip install pre-commit
  script:
    - pre-commit run --all-files


unittests:
  stage: test
  image: python:${PYTHON_VERSION}
  before_script:
    - pip install --upgrade pip
    - pip install . coverage
    - curl https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz | tar xzf - --strip-components 1 -C /usr/local/bin linux-amd64/helm
  script:
    - coverage run --include="HelmSign/*" -m unittest discover tests
    - coverage xml
    - coverage report --precision=2
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        HELM_VERSION: ["3.5.4", "3.6.3", "3.7.2", "3.8.2", "3.9.4", "3.10.3"]
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml


build packages:
  stage: build
  image: python:${PYTHON_DEFAULT_VERSION}
  rules:
    - if: '$CI_COMMIT_TAG != null'
  script:
    - python setup.py sdist bdist_wheel
    - ls -lah dist/
  artifacts:
    paths:
      - dist/*.tar.gz
      - dist/*.whl


upload to PyPI:
  stage: deploy
  image: python:${PYTHON_DEFAULT_VERSION}
  rules:
    - if: '$CI_COMMIT_TAG != null'
  before_script:
    - ls -lah dist/
    - pip install twine
  script:
    - twine upload --non-interactive dist/*


create release:
  image: registry.gitlab.com/gitlab-org/release-cli:v0.15.0
  stage: release
  rules:
    - if: '$CI_COMMIT_TAG != null'
  script:
    - >
      release-cli create --name $CI_COMMIT_TAG --description "# Changelog$(cat CHANGELOG.md | awk '/## '$CI_COMMIT_TAG'/{flag=1;next}/##/{flag=0}flag')"
      --tag-name $CI_COMMIT_TAG --ref $CI_COMMIT_SHA
      --assets-link "{\"name\": \"Package Files on PyPI\", \"url\": \"https://pypi.org/project/helm-sign/$CI_COMMIT_TAG/#files\", \"link_type\": \"other\"}"
  needs:
    - upload to PyPI


include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
