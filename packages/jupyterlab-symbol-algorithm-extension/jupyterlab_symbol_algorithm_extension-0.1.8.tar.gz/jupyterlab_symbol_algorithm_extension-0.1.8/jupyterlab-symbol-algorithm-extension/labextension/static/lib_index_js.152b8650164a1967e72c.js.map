{"version":3,"file":"lib_index_js.152b8650164a1967e72c.js","mappings":";;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACzToD;AACrB;AACoB;AACjB;AACoB;AACtD;AACA;AACA;AACA,eAAe,gEAAc,EAAE,8DAAS;AACxC;AACA;AACA;AACA;AACA,yBAAyB,2CAAQ;AACjC,oBAAoB,gDAAmB,UAAU,gCAAgC;AACjF,gBAAgB,gDAAmB,UAAU,qBAAqB;AAClE,gBAAgB,gDAAmB,YAAY,uBAAuB;AACtE,oBAAoB,gDAAmB,YAAY;AACnD;AACA,2BAA2B;AAC3B;AACA,gBAAgB,gDAAmB,UAAU,8BAA8B,yBAAyB,gDAAmB,UAAU,sFAAsF;AACvN;AACA,oBAAoB,gDAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,2BAA2B,oEAAkB,CAAC,gDAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS,EAAC","sources":["webpack://jupyterlab-symbol-algorithm-extension/./lib/code.js","webpack://jupyterlab-symbol-algorithm-extension/./lib/index.js"],"sourcesContent":["export const codeList = [\n    {\n        name: 'Middle Dot',\n        unicode: '·',\n        ascii: '·',\n        text: 'dot'\n    },\n    {\n        name: 'Multiplication',\n        unicode: '×',\n        ascii: '×',\n        text: 'multiplication'\n    },\n    {\n        name: 'Summation',\n        unicode: '∑',\n        ascii: '∑',\n        text: 'sum'\n    },\n    {\n        name: 'Less Than or Equal To',\n        unicode: '≤',\n        ascii: '≤',\n        text: 'less than or equal to'\n    },\n    {\n        name: 'Greater Than or Equal To',\n        unicode: '≥',\n        ascii: '≥',\n        text: 'greater than or equal to'\n    },\n    {\n        name: 'Not Equal To',\n        unicode: '≠',\n        ascii: '≠',\n        text: 'not equal to'\n    },\n    {\n        name: 'Identical To',\n        unicode: '≡',\n        ascii: '≡',\n        text: 'identical to'\n    },\n    {\n        name: 'Not Identical To',\n        unicode: '≢',\n        ascii: '≢',\n        text: 'not identical to'\n    },\n    {\n        name: 'Negation',\n        unicode: '¬',\n        ascii: '¬',\n        text: 'negation'\n    },\n    {\n        name: 'Conjunction',\n        unicode: '∧',\n        ascii: '∧',\n        text: 'conjunction'\n    },\n    {\n        name: 'Disjunction',\n        unicode: '∨',\n        ascii: '∨',\n        text: 'disjunction'\n    },\n    {\n        name: 'For All',\n        unicode: '∀',\n        ascii: '∀',\n        text: 'for all'\n    },\n    {\n        name: 'There Exists',\n        unicode: '∃',\n        ascii: '∃',\n        text: 'there exists'\n    },\n    {\n        name: 'Leftwards Double Arrow',\n        unicode: '⇐',\n        ascii: '⇐',\n        text: 'leftwards double arrow'\n    },\n    {\n        name: 'Rightwards Double Arrow',\n        unicode: '⇒',\n        ascii: '⇒',\n        text: 'rightwards double arrow'\n    },\n    {\n        name: 'Rightwards Arrow',\n        unicode: '→',\n        ascii: '→',\n        text: 'rightwards arrow'\n    },\n    {\n        name: 'Intersection',\n        unicode: '∩',\n        ascii: '∩',\n        text: 'intersection'\n    },\n    {\n        name: 'Union',\n        unicode: '∪',\n        ascii: '∪',\n        text: 'union'\n    },\n    {\n        name: 'Subset',\n        unicode: '⊂',\n        ascii: '⊂',\n        text: 'subset'\n    },\n    {\n        name: 'Subset or Equal To',\n        unicode: '⊆',\n        ascii: '⊆',\n        text: 'subset or equal to'\n    },\n    {\n        name: 'Element Of',\n        unicode: '∈',\n        ascii: '∈',\n        text: 'element of'\n    },\n    {\n        name: 'Not an Element Of',\n        unicode: '∉',\n        ascii: '∉',\n        text: 'not an element of'\n    },\n    {\n        name: 'Empty Set',\n        unicode: '∅',\n        ascii: '∅',\n        text: 'empty set'\n    },\n    {\n        name: 'Complement',\n        unicode: '∁',\n        ascii: '∁',\n        text: 'complement'\n    },\n    {\n        name: 'Empty Set (alt)',\n        unicode: '∅',\n        ascii: '∅',\n        text: 'empty set'\n    },\n    {\n        name: 'Epsilon',\n        unicode: 'ε',\n        ascii: 'ε',\n        text: 'epsilon'\n    },\n    {\n        name: 'Subscript 0',\n        unicode: '₀',\n        ascii: '₀',\n        text: 'subscript 0'\n    },\n    {\n        name: 'Subscript 1',\n        unicode: '₁',\n        ascii: '₁',\n        text: 'subscript 1'\n    },\n    {\n        name: 'Subscript 2',\n        unicode: '₂',\n        ascii: '₂',\n        text: 'subscript 2'\n    },\n    {\n        name: 'Subscript 3',\n        unicode: '₃',\n        ascii: '₃',\n        text: 'subscript 3'\n    },\n    {\n        name: 'Subscript 4',\n        unicode: '₄',\n        ascii: '₄',\n        text: 'subscript 4'\n    },\n    {\n        name: 'Subscript 5',\n        unicode: '₅',\n        ascii: '₅',\n        text: 'subscript 5'\n    },\n    {\n        name: 'Subscript 6',\n        unicode: '₆',\n        ascii: '₆',\n        text: 'subscript 5'\n    },\n    {\n        name: 'Subscript 7',\n        unicode: '₇',\n        ascii: '₇',\n        text: 'subscript 7'\n    },\n    {\n        name: 'Subscript 8',\n        unicode: '₈',\n        ascii: '₈',\n        text: 'subscript 8'\n    },\n    {\n        name: 'Subscript 9',\n        unicode: '₉',\n        ascii: '₉',\n        text: 'subscript 9'\n    },\n    {\n        name: 'Subscript i',\n        unicode: 'ᵢ',\n        ascii: 'ᵢ',\n        text: 'subscript i'\n    },\n    {\n        name: 'Subscript j',\n        unicode: 'ⱼ',\n        ascii: 'ⱼ',\n        text: 'subscript j'\n    },\n    {\n        name: 'Subscript Plus',\n        unicode: '₊',\n        ascii: '₊',\n        text: 'subscript plus'\n    },\n    {\n        name: 'Subscript m',\n        unicode: 'ₘ',\n        ascii: 'ₘ',\n        text: 'subscript m'\n    },\n    {\n        name: 'Superscript 0',\n        unicode: '⁰',\n        ascii: '⁰',\n        text: 'superscript 0'\n    },\n    {\n        name: 'Superscript 1',\n        unicode: '¹',\n        ascii: '¹',\n        text: 'superscript 1'\n    },\n    {\n        name: 'Superscript 2',\n        unicode: '²',\n        ascii: '²',\n        text: 'superscript 2'\n    },\n    {\n        name: 'Superscript 3',\n        unicode: '³',\n        ascii: '³',\n        text: 'superscript 3'\n    },\n    {\n        name: 'Superscript 4',\n        unicode: '⁴',\n        ascii: '⁴',\n        text: 'superscript 4'\n    },\n    {\n        name: 'Superscript 5',\n        unicode: '⁵',\n        ascii: '⁵',\n        text: 'superscript 5'\n    },\n    {\n        name: 'Superscript 6',\n        unicode: '⁶',\n        ascii: '⁶',\n        text: 'superscript 6'\n    },\n    {\n        name: 'Superscript 7',\n        unicode: '⁷',\n        ascii: '⁷',\n        text: 'superscript 7'\n    },\n    {\n        name: 'Superscript 8',\n        unicode: '⁸',\n        ascii: '⁸',\n        text: 'superscript 8'\n    },\n    {\n        name: 'Superscript 9',\n        unicode: '⁹',\n        ascii: '⁹',\n        text: 'superscript 9'\n    },\n    {\n        name: 'Superscript i',\n        unicode: '\\u2071',\n        ascii: 'ⁱ',\n        text: 'superscript i'\n    },\n    {\n        name: 'Superscript n',\n        unicode: '\\u207f',\n        ascii: 'ⁿ',\n        text: 'superscript n'\n    }\n];\n","import { ILabShell } from '@jupyterlab/application';\nimport * as React from 'react';\nimport { ReactWidget } from '@jupyterlab/apputils';\nimport { codeList } from './code';\nimport { INotebookTools } from '@jupyterlab/notebook';\nconst extension = {\n    id: 'jupyterlab_symbol_sidebar:plugin',\n    autoStart: true,\n    requires: [INotebookTools, ILabShell],\n    activate: (app, notebook, shell) => {\n        console.log('JupyterLab extension jupyterlab_symbol_sidebar is activated!');\n        let checkboxCopy = false;\n        function SymbolsSidebar() {\n            const list = codeList;\n            return (React.createElement(\"div\", { className: \"sidebar-container\" },\n                React.createElement(\"div\", { className: \"notice\" }, \"Click on the icon will insert it to the cell\"),\n                React.createElement(\"label\", { className: \"checkbox\" },\n                    React.createElement(\"input\", { type: \"checkbox\", onChange: () => {\n                            checkboxCopy = !checkboxCopy;\n                        } }),\n                    \"Copy to clipboard\"),\n                React.createElement(\"div\", { className: \"block-container\" }, list.map((item, i) => (React.createElement(\"div\", { className: \"block-container-element\", key: i, onClick: () => iconClick(item.unicode) },\n                    item.unicode,\n                    React.createElement(\"div\", null, item.name)))))));\n        }\n        app.commands.addCommand('unicode:insert', {\n            label: 'Insert Text',\n            // isVisible: () => false,\n            execute: args => {\n                // input is JSON\n                if (typeof args.text !== 'string') {\n                    return;\n                } // if no text, return\n                if (notebook.activeCell === null) {\n                    return;\n                }\n                notebook.activeCell.editor.replaceSelection &&\n                    notebook.activeCell.editor.replaceSelection(args.text.toString());\n            }\n        });\n        function iconClick(code) {\n            if (checkboxCopy) {\n                navigator.clipboard.writeText(JSON.parse('[\"' + code + '\"]')[0].toString());\n            }\n            else {\n                app.commands.execute('unicode:insert', {\n                    text: JSON.parse('[\"' + code + '\"]')[0].toString()\n                });\n            }\n        }\n        const newWidget = () => {\n            // Create a blank content widget inside of a MainAreaWidget\n            const widget = ReactWidget.create(React.createElement(SymbolsSidebar, null));\n            widget.id = 'jupyterlab_symbol_sidebar';\n            widget.title.label = 'Symbols';\n            widget.title.closable = true;\n            return widget;\n        };\n        const widget = newWidget();\n        // let summary = document.createElement('p');\n        // widget.node.appendChild(summary);\n        // summary.innerText = \"Hello, World!\";\n        shell.add(widget, 'left');\n    }\n};\nexport default extension;\n"],"names":[],"sourceRoot":""}