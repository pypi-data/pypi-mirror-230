Metadata-Version: 2.1
Name: dmlcloud
Version: 0.0.1
Summary: Distributed torch training using horovod and slurm
Author: Sebastian Hoffmann
License: BSD 3-Clause License
        
        Copyright (c) 2023, Sebastian Hoffmann
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: Repository, https://github.com/sehoffmann/dmlcloud
Keywords: pytorch,horovod,slurm,distributed,training
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: torch
Requires-Dist: wandb
Requires-Dist: numpy
Requires-Dist: progress-table

# Python Project Template

This is a quickstart project template for Python that already comes attached with the following features:

* Packaging and metadata support
* Formatting and linting via *pre-commit*, *black*, *usort*, and *flake8*
* Testing via *pytest*
* CI via github-actions


## Configuration

To tailor this template to your needs, the following steps must be taken:

1. Rename the *myproject* package folder to your project name
2. Change metadata and project name in *setup.cfg*.
3. Do not forget to change the version attribute to point to your new package name as well.
4. Add dependencies to *requirements.txt*
5. Adjust the *LICENSE* file to your liking.
6. Adjust this *README.md* file to your liking.

### Formatting and linting

Install *pre-commit* and *pytest* via
```
pip install -r ci_requirements.txt
```

To format and lint the entire codebase run:
```
pre-commit run --all-files
```

To perform this step automatically during each commit (and fail on errors) run:
```
pre-commit install
```

### Testing
To run the tests execute:
```
pytest
```
in the top-level directory.
Tests can also be executed individually by running them as regular python script. This requires you to add a small main function to them, c.f. *test/test_myproject.py*.

### Github Actions
This project defines the following workflows:
1. *run_linting.yml* will run `pre-commit run --all-files` on every push to develop and pull request
2. *run_tests.yml* will run `pytest` on Windows, Ubuntu, and MacOS on every push to develop and pull_request
3. *release_public.yml* and *release_test.yml* can be triggered manually to build a wheel distribution and publish it to PyPI or TestPyPI respectively

For the publising to work, you need to add the PyPI API token as Github secrets:
* *PYPI_TOKEN* for the official PyPI index
* *TEST_PYPI_TOKEN* for the TestPyPI index
